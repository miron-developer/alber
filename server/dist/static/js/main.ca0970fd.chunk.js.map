{"version":3,"sources":["components/app-notification/notification.jsx","constants/constants.js","utils/api.js","utils/content.jsx","utils/user.js","components/popup/popup.jsx","utils/form.js","utils/file.js","components/form-input/input.jsx","components/submit-btn/submit.jsx","components/preloaded-files-plash/plash.jsx","components/clips/clips.jsx","components/clipped-files-plash/plash.jsx","components/parsel/manage/manage.jsx","components/form-select/select.jsx","components/traveler/manage/manage.jsx","components/to-toptype/toptype.jsx","components/to-up/ex.jsx","components/to-up/up.jsx","utils/effects.js","utils/hooks.js","components/parsel/parsel.jsx","components/traveler/traveler.jsx","components/aside/history/history.jsx","components/phone-field/field.jsx","components/password-field/password.jsx","components/aside/edit-profile/profile.jsx","components/aside/aside.jsx","components/header/header.jsx","routes/sign/up/up.jsx","routes/sign/in/in.jsx","routes/sign/reset/reset.jsx","routes/sign/sign.jsx","routes/404/404.jsx","routes/parsel/parsel.jsx","routes/parsels/parsels.jsx","routes/traveler/traveler.jsx","routes/travelers/travelers.jsx","components/routes/routes.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["interID","USER","id","phoneNumber","nickname","status","guest","formDataToString","data","FormData","res","entries","k","v","slice","Fetching","action","a","method","undefined","err","fetchOption","encodeURI","fetch","then","json","catch","Object","assign","prepareDataToFetch","datas","append","GetDataByCrieteries","datatype","criteries","POSTRequestWithParams","to","params","IS_SIGN","decodeURI","useLocation","pathname","split","includes","IsTwoDigit","parseInt","concat","DateFromMilliseconds","milliseconds","isForInput","datetime","Date","isNaN","str","getFullYear","getMonth","getDate","join","getHours","getMinutes","RandomKey","Math","round","random","ValidateParselTravelerSearch","from","min","max","now","Notify","SAppNotifications","styled","div","SAppNotification","SCloseNotification","add","removeNotification","type","content","isAutoClose","length","setInterval","clearInterval","Notification","setTimeout","noteContent","Function","className","onClick","Notifications","useState","ntfs","setNTFS","filter","item","props","key","IsLogged","changeUserData","toString","UserOnline","UserOffline","SignOut","history","push","SDisplayFlexCenter","css","SPopup","SPopupBG","SPopupClose","SContentWrapper","close","closeCB","PopupOpen","Component","componentArgs","ClosePopup","Popup","popup","setPopup","isOpened","setOpenedState","useInput","initValue","value","setValue","handleChange","e","target","resetField","setCertainValue","base","onChange","useTogglePassword","initState","state","changeType","toggleType","BaseFormValidation","resIndexs","i","values","test","NotifyInvalidField","selector","field","afterStyle","document","createElement","innerHTML","head","appendChild","ResetForm","fields","forEach","ClearAllNotifications","afterStyles","AS","remove","setNotificationIfExist","BIndexs","CIndexs","index","SubmitFormData","customValidation","onSuccess","onFail","isReset","preventDefault","form","getAttribute","UploadFile","file","whomFile","whomID","SFormField","SFormInputWrapper","SFormInputLabel","label","SFormInput","input","SFormInputNotification","Label","required","labelText","htmlFor","Input","name","minLength","maxLength","list","hidden","placeholder","SSubmitBtn","SubmitBtn","SFilesPlash","SFileUploadWrapper","SRemoveFile","RenderUploadedFile","filename","src","removeFile","alt","PreloadedFilesPlash","preloadedFiles","map","SClipItem","color","ClipOneBtn","srcIcon","ClipPlash","setFiles","preloadedCB","files","addToPlash","accept","cb","click","addEventListener","stopImmediatePropagation","URL","createObjectURL","PreloadFile","SClippedFileWrapper","size","SClippedFileSrc","RenderClippedFile","stopPropagation","ClippedFiles","SParsel","removePhoto","clearAll","setHaveWhatsUp","setPreloaded","f","ManageParsel","failText","successText","weight","price","title","expire","expireDatetime","contactNumber","fromID","toID","isHaveWhatsUp","OnChangeTransitPoint","photos","setPhotos","ph","onSubmit","useCallback","oldParams","comparedParams","CompareParams","GetValueFromListByIDAndInputValue","parse","defaultChecked","SLalel","Select","text","options","selected","opt","makeText","STravel","ManageTraveler","departure","departureDatetime","arrival","arrivalDatetime","travelType","travelTypeID","isHaveWhatsup","travelTypes","setTravelTypes","getTravelTypes","useEffect","setID","setTravel","console","log","op","Array","find","textContent","onChangeTravelType","SToTopType","SOneItem","toTopType","code","topID","GOnePrice","cost","setPayed","setTopTypeID","ToTopType","prices","setPrices","isPayed","topTypeID","getPrices","p","ExamplePrice","SToUp","toUp","ToUp","setPrice","getPrice","Debounce","fn","ms","timeOut","args","clearTimeout","DbnceCities","dt","getElementById","ScrollHandler","isStopLoad","isScrollingToTop","loadCallback","childrenClass","parent","getElementsByClassName","parentNode","pRec","getBoundingClientRect","scrollTop","scrollHeight","height","priorEdgeChildNum","childElementCount","el","childNodes","scrollIntoView","behavior","EditItem","RemoveItem","TopItem","PaintItem","newParams","currentParams","obj","removeEmptyFields","listID","inputValue","option","point","useFromTo","step","fromToState","setFromToState","setDataList","getPart","getWhat","isAppToEnd","isNeedClear","start","isLoaded","datalist","zeroState","Parsel","isMy","changeItem","removeItem","setOpened","getPhotos","rel","href","window","open","newData","STraveler","Traveler","SHistory","section","loadHistory","getType","getTypeOnRus","History","tab","setTab","configHistoryParams","Item","findIndex","d","onScroll","PhoneField","codes","setCodes","getCodes","country","SPasswordWrapper","PasswordField","pass","passToggle","passElem","passwordToggle","elem","classList","toggle","setAttribute","ShowAndHidePassword","SForms","EditProfile","phone","setStep","onSuccessStep1","login","onSuccessStep2","SAside","aside","SUser","SLogo","SNickname","SLogout","SEdit","Aside","useHistory","as","NavLink","SHeader","header","SNavLink","GNavLink","isExact","linkText","exact","activeClassName","Header","SignUp","password","SignIn","Restore","SSign","GSignAction","mainAction","setAction","otherActions","GInAction","GUpAction","GResetAction","S404","Page404","SParselGuest","SParsels","STravelGuest","STravelers","SMain","main","ROUTES","component","download","startDT","endDT","loadParsels","clear","body","onscroll","loadTravelers","DefineRoutes","location","path","SApp","isSign","App","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","check","ReactDOM","render","StrictMode","init"],"mappings":"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","file":"static/js/main.ca0970fd.chunk.js","sourcesContent":["import { useState } from 'react';\n\nimport { RandomKey } from 'utils/content';\n\nimport styled from 'styled-components';\n\nconst SAppNotifications = styled.div`\n    position: fixed;\n    right: 0;\n    bottom: 0;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n    z-index: 20;\n`\n\nconst SAppNotification = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: max-content;\n    max-width: 50vw;\n    margin: .5rem;\n    padding: 1rem;\n    color: white;\n    border-radius: 5px;\n    background: #596d8c;\n    box-shadow: var(--boxShadow);\n`;\n\nconst SCloseNotification = styled.div`\n    padding: 5px;\n    margin-left: 10px;\n    height: 1.5rem;\n    width: 1.5rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: var(--redColor);\n    background: var(--darkRedColor);\n    border-radius: 50%;\n    cursor: pointer;\n`;\n\nlet add = () => {};\nlet removeNotification = id => {};\nlet interID;\n\nexport const Notify = (type, content, isAutoClose) => {\n    if (add.length !== 0) return add(type, content, isAutoClose);\n    interID = setInterval(() => {\n        if (add.length !== 0) {\n            clearInterval(interID);\n            add(type, content, isAutoClose);\n        }\n    }, 0);\n}\n\nconst Notification = ({ id = 0, type = \"fail\", content, isAutoClose = true }) => {\n    if (!content) return null;\n    if (isAutoClose) setTimeout(() => removeNotification(id), 5000);\n\n    let noteContent = content\n    if (content instanceof Function) noteContent = content(); \n\n    return (\n        <SAppNotification>\n            <div className=\"notification-content\">{noteContent}</div>\n            <SCloseNotification onClick={()=>removeNotification(id)}>\n                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n            </SCloseNotification>\n        </SAppNotification>\n    )\n}\n\nexport default function Notifications() {\n    const [ntfs, setNTFS] = useState([]);\n\n    removeNotification = id => setNTFS(ntfs.filter(item => item.props.id !== id));\n    add = (type, content, isAutoClose)  => {\n        const key = RandomKey();\n        setNTFS([...ntfs, <Notification key={key} id={key} type={type} content={content} isAutoClose={isAutoClose} />]);\n    }\n\n    return <SAppNotifications>{ntfs}</SAppNotifications>;\n}","// current user data\nexport const USER = {\n    id: -1,\n    phoneNumber: '',\n    nickname: 'nickname',\n    status: '',\n    guest: false,\n};","const formDataToString = (data = new FormData()) => {\n    let res = \"\";\n    for (let [k, v] of data.entries())\n        res += k + \"=\" + v + \"&\"\n    return res.slice(0, -1)\n}\n\n// use fetching by both method\nexport const Fetching = async(action, data, method = \"POST\") => {\n    if (action === undefined) return { err: \"action undefined\" };\n\n    const fetchOption = { 'method': method, 'mode': 'cors', 'credentials': 'include' };\n    if (method === \"GET\") action += \"?\" + encodeURI(formDataToString(data));\n    else fetchOption[\"body\"] = data;\n\n    return await fetch(action, fetchOption)\n        .then(res => res.json())\n        .catch(err => Object.assign({}, { 'err': \"500: \" + err }));\n}\n\n// convert from object to FormData\nconst prepareDataToFetch = (datas = {}) => {\n    const data = new FormData();\n    for (let [k, v] of Object.entries(datas)) data.append(k, v);\n    return data;\n}\n\n// get data by criteries & type\nexport const GetDataByCrieteries = async(datatype, criteries = {}) => {\n    const data = prepareDataToFetch(criteries);\n    const res = await Fetching(\"/api/\" + datatype, data, 'GET');\n    if (res.err !== 'ok') return { 'err': res.err }\n    return res.data;\n}\n\n// send post req to host with params\nexport const POSTRequestWithParams = async(to, params = {}) => {\n    const data = prepareDataToFetch(params);\n    return await Fetching(to, data);\n}","import { useLocation } from \"react-router\";\n\nimport { Notify } from \"components/app-notification/notification\";\n\nexport const GET_CUR_PATHNAME = () => decodeURI(useLocation().pathname);\nexport const IS_SIGN = () => GET_CUR_PATHNAME().split('/').includes(\"sign\");\n\n// return two digit string\nexport const IsTwoDigit = data => parseInt(data) < 10 ? \"0\".concat(data) : data;\n\n// generate date(15/12/2020 09:09) from milliseconds\nexport const DateFromMilliseconds = (milliseconds, isForInput = true) => {\n    const datetime = new Date(parseInt(milliseconds));\n    if (isNaN(datetime)) return;\n    const str = [datetime.getFullYear(), IsTwoDigit(datetime.getMonth() + 1), IsTwoDigit(datetime.getDate())].join('-') +\n        (isForInput ? \"T\" : \" \") +\n        [IsTwoDigit(datetime.getHours()), IsTwoDigit(datetime.getMinutes())].join(\":\")\n    return str;\n}\n\n// calculate time after thing created\nexport const CalculateRelativeDatetime = (datetime = Date.now().toString()) => {\n    const now = Date.now();\n    const given = parseInt(datetime);\n\n    const delims = [[60, \"мин.\"], [60, \"ч.\"], [24, \"д.\"], [7, 30, \"нед.\"], [30, 365, \"мес.\"], [365, \"лет\"]]\n    const isPast = (now - given) > 0 ? true : false;\n    let diff = Math.abs(now - given) / 1000;\n    let diffType = \"секунд\";\n\n    const returnDate = () => {\n        diff = Math.floor(diff);\n\n        if (!isPast) return [\"через\", IsTwoDigit(diff), diffType].join(' ');\n\n        const isToday = Math.abs(now - given) < 86400000;\n        return [isToday ? 'сегодня' : '', IsTwoDigit(diff), diffType, \"назад\"].join(' ');\n    }\n\n    // calculate difference\n    for (let i = 0; i < delims.length; i++) {\n        const cur_del = delims[i]\n        if (cur_del.length === 2) {\n            if (diff > cur_del[0]) {\n                diff /= cur_del[0];\n                diffType = cur_del[1];\n                continue\n            }\n            break\n        }\n        if (cur_del[0] < diff && diff < cur_del[1]) {\n            diff /= cur_del[0];\n            diffType = cur_del[2];\n            continue\n        }\n        break\n    }\n    return returnDate();\n}\n\nexport const RandomKey = () => Math.round(Math.random() * Math.random() * 100000000);\n\nexport const ValidateParselTravelerSearch = (from, to, min, max) => {\n    // filter dates, check exist, > now, min < max\n    if (min < Date.now() || min > max || isNaN(min) || isNaN(max)) return Notify('fail', 'Ошибка даты')\n\n    // filter transit points, check exist, !=\n    if (from === to || !to || !from) return Notify('fail', \"Ошибка пунктов отправки и назначения\")\n    return {\n        'fromID': from,\n        'toID': to,\n        'startDT': min || '',\n        'endDT': max || '',\n    }\n}\n","import { USER } from 'constants/constants';\nimport { GetDataByCrieteries, POSTRequestWithParams } from './api';\nimport { Notify } from 'components/app-notification/notification';\n\nexport const IsLogged = async() => {\n    const res = await POSTRequestWithParams('/sign/status');\n    if (res.err !== 'ok') {\n        Notify('fail', res.err);\n        return false;\n    }\n    return res.data.id;\n}\n\n// change USER const\nconst changeUserData = async(id) => {\n    if (id !== undefined) {\n        const res = (await GetDataByCrieteries('user', { id: id }));\n        if (res.err && res.err !== \"ok\") {\n            return Notify('fail', \"Ошибка входа в аккаунт. Не верные данные\")\n        }\n        for (let [k, v] of Object.entries(res[0])) USER[k] = v;\n        USER.status = 'online';\n        return true;\n    } else {\n        for (let k in USER) USER[k] = '';\n        USER.status = Date.now().toString();\n        USER.nickname = \"nickname\";\n        return true;\n    }\n}\n\n// Switch to online\nexport const UserOnline = async(id) => await changeUserData(id);;\n\n// Switch to offline\nexport const UserOffline = async() => await changeUserData();\n\n// send to server signal about sign out\nexport const SignOut = async(history) => {\n    Notify('info', \"Производится выход...\");\n    const res = await POSTRequestWithParams(\"/sign/out\");\n    if (res.err !== \"ok\") return Notify('fail', \"Ошибка: выход не произведен\");;\n    const isSignOuted = await UserOffline();\n    if (!isSignOuted) return;\n    history.push('/sign/in');\n    Notify('success', \"Выход произведен\");\n}","import { useState } from 'react';\n\nimport styled, { css } from 'styled-components';\n\nconst SDisplayFlexCenter = css`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst SPopup = styled.div`\n    position: fixed;\n    left: 50%;\n    top: 50%;\n    width: 0;\n    height: 0;\n    ${SDisplayFlexCenter};\n    border-radius: 5px;\n    transition: var(--transitionApp);\n    opacity: 0;\n    z-index: -10;\n\n    &.opened {\n        left: 0;\n        top: 0;\n        width: 100vw;\n        height: 100vh;\n        opacity: 1;\n        z-index: 20;\n    }\n`;\n\n\nconst SPopupBG = styled.div`\n    position: absolute;\n    width: 100vw;\n    height: 100vh;\n    background: #000000ab;\n`;\n\nconst SPopupClose = styled.div`\n    position: absolute;\n    right: 20px;\n    top: 10px;\n    width: 1rem;\n    height: 1rem;\n    padding: 5px;\n    ${SDisplayFlexCenter};\n    background: var(--redColor);\n    border-radius: 100%;\n    transition: var(--transitionApp);\n    cursor: pointer;\n\n    &:hover{\n        background: var(--darkRedColor);\n    }\n`;\n\nconst SContentWrapper = styled.div`\n    max-height: 90vh;\n    max-width: 80vw;\n    height: max-content;\n    width: max-content;\n    ${SDisplayFlexCenter};\n    flex-direction: column;\n    border-radius: 10px;\n    background: #ffffffc7;\n    z-index: 20;\n\n    & > * {\n        overflow: auto;\n    }\n`;\n\nlet add = ()=>{};\nlet close = ()=>{};\nlet closeCB = ()=>{};\nexport const PopupOpen = (Component, componentArgs = {}) => {\n    add(Component, componentArgs);\n    if (componentArgs.closeCB) closeCB = componentArgs.closeCB;\n}\nexport const ClosePopup = () => close();\n\nexport default function Popup() {\n    const [popup, setPopup] = useState(null);\n    const [isOpened, setOpenedState] = useState(false);\n    add = (Component, componentArgs) => setPopup(<Component {...componentArgs}/>) || setOpenedState(true);\n    close = () => {\n        setOpenedState(false) || setPopup(null);\n        closeCB();\n    }\n    \n    return (\n        <SPopup className={`${isOpened ? 'opened' : ''}`} >\n            <SPopupBG onClick={close}/>\n\n            <SPopupClose onClick={close}>\n                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n            </SPopupClose>\n\n            <SContentWrapper>\n                {popup}\n            </SContentWrapper>\n        </SPopup>\n    )\n}","import { useState } from 'react';\n\nimport { Fetching } from './api';\n\n// useInput custom react hook\nexport const useInput = (initValue = '') => {\n    const [value, setValue] = useState(initValue);\n    const handleChange = e => setValue(e.target.value);\n    const resetField = () => setValue('');\n    const setCertainValue = v => setValue(v);\n\n    return {\n        base: {\n            value,\n            onChange: handleChange,\n        },\n        resetField,\n        setCertainValue\n    }\n}\n\n// for show/hide password\nexport const useTogglePassword = (initState = 'password') => {\n    const [state, changeType] = useState(initState);\n    const toggleType = () => changeType(state === 'password' ? 'text' : 'password');\n\n    return {\n        state,\n        toggleType\n    }\n}\n\n// check xss attack\nexport const isHaveXSS = content => /<+[\\w\\s/]+>+/gm.test(content);\n\n// base validation check html validation & xss\nexport const BaseFormValidation = data => {\n    const resIndexs = [];\n    let i = 0;\n    for (let v of data.values()) {\n        if (isHaveXSS(v)) resIndexs.push(i);\n        i++;\n    }\n    return resIndexs;\n}\n\n// create one ::after notification\nexport const NotifyInvalidField = (selector, field) => {\n    const afterStyle = document.createElement('style');\n    afterStyle.innerHTML += `${selector}::after{content: 'Ошибка'; font-size: 1rem; color: red; margin: 10px;}`;\n    document.head.appendChild(afterStyle);\n    field.resetField();\n    return afterStyle;\n}\n\n// reset form by calling component method\nexport const ResetForm = fields => {\n    if (!fields) return;\n    fields.forEach(field => field.resetField());\n}\n\n// clear all custom ::after styles\nexport const ClearAllNotifications = (afterStyles = []) => afterStyles.forEach(AS => AS.remove());\n\nconst setNotificationIfExist = (BIndexs, CIndexs, afterStyles, fields) => {\n    if (!fields) return;\n    if (BIndexs.length !== 0)\n        BIndexs.forEach(index => afterStyles.push(NotifyInvalidField(`.form-field-${1+index} .form-input-notification`, fields[index])));\n    if (CIndexs && CIndexs.length !== 0)\n        CIndexs.forEach(index => afterStyles.push(NotifyInvalidField(`.form-field-${1+index} .form-input-notification`, fields[index])));\n}\n\n// submit form: check all validations, return ::after styles, notify & reset fields\nexport const SubmitFormData = async(e, afterStyles, fields, customValidation = () => {}, onSuccess = () => {}, onFail = () => {}, isReset = true) => {\n    e.preventDefault();\n    ClearAllNotifications(afterStyles);\n    afterStyles = [];\n\n    const form = e.target;\n    const action = form.getAttribute('action');\n    if (!action) return;\n    const data = new FormData(form);\n\n    // validation\n    const BIndexs = BaseFormValidation(data),\n        CIndexs = customValidation();\n\n    // notification\n    setNotificationIfExist(BIndexs, CIndexs, afterStyles, fields);\n\n    // fetching & notification\n    if ((BIndexs.length === 0 && !CIndexs) ||\n        (BIndexs.length === 0 && CIndexs && CIndexs.length === 0)) {\n        const res = await Fetching(action, data);\n\n        if (res.err === \"ok\") {\n            if (isReset) ResetForm(fields);\n            return onSuccess(res.data);\n        }\n        return onFail(res.err);\n    }\n    onFail(\"Ошибка валидации\");\n    return afterStyles;\n}","import { POSTRequestWithParams } from \"utils/api\";\n\n// preload file\nexport const PreloadFile = (accept, cb = (file, src, type) => {}) => {\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.accept = accept;\n    input.click();\n\n    input.addEventListener('change', async(e) => {\n        e.stopImmediatePropagation();\n        const file = input.files[0];\n\n        if (file) cb(file, URL.createObjectURL(file), file.type);\n    });\n}\n\n// upload file to server\nexport const UploadFile = async(type, file, whomFile, whomID) => {\n    if (!type || !file || !whomFile) return { err: 'deficite data' };\n    const params = {\n        'type': type,\n        'file': file,\n        'whomFile': whomFile,\n    }\n    if (whomID) params['whomID'] = whomID;\n\n    const res = await POSTRequestWithParams('/s/image', params);\n    if (res.err !== \"ok\") return null;\n    return res.data;\n}","import styled from 'styled-components';\n\nconst SFormField = styled.div`\n    margin-bottom: .5rem;\n`;\n\nconst SFormInputWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    margin-bottom: .5rem;\n`;\n\nconst SFormInputLabel = styled.label`\n    white-space: nowrap;\n    color: var(--offHoverColor);\n\n    &.required::after {\n        content: '*';\n        color: var(--redColor);\n    }\n`;\n\nconst SFormInput = styled.input`\n    margin-left: 1rem;\n    padding: .5rem;\n    width: 100%;\n    font-size: 1rem;\n    color: var(--offHoverColor);\n    background: none;\n    border: none;\n    border-radius: 5px;\n    outline: none;\n    border-bottom: 1px solid var(--onHoverColor);\n    box-shadow: 4px 4px 3px 0 #00000029;\n\n    &::placeholder{\n        color: var(--darkGreyColor);\n    }\n\n    &:disabled {\n        background: var(--greyColor);\n    }\n`;\n\nconst SFormInputNotification = styled.div`\n    color: var(--darkRedColor);\n`;\n\nexport const Label = ({ required, id, labelText }) =>\n    <SFormInputLabel className={required ? 'required' : ''} htmlFor={id} > {labelText} </SFormInputLabel>\n\nexport default function Input({ index, id, type = \"text\", name, labelText, base, minLength, maxLength, list, min, max, required = true, hidden = false, placeholder = \"\" }) {\n    return hidden\n        ? <input type={type} value={base.value} name={name} hidden />\n        : (\n            <SFormField className={'form-field-' + index}>\n                <SFormInputWrapper>\n                    <Label required={required} id={id} labelText={labelText} />\n                    <SFormInput\n                        className=\"form-input\"\n                        id={id}\n                        type={type}\n                        name={name}\n                        required={required}\n                        min={min}\n                        max={max}\n                        minLength={minLength}\n                        maxLength={maxLength}\n                        placeholder={placeholder}\n                        hidden={hidden}\n                        list={list}\n                        {...base}\n                    />\n                </SFormInputWrapper>\n                <SFormInputNotification className=\"form-input-notification\" />\n            </SFormField>\n        )\n}","import styled from \"styled-components\"\n\nconst SSubmitBtn = styled.input`\n    width: 60%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin: 1rem auto;\n    padding: 1rem;\n    font-size: 1rem;\n    color: var(--offHoverColor);\n    background: var(--offHoverBG);\n    border-radius: 5px;\n    border: none;\n    box-shadow: 2px 2px 2px 0 #00000061;\n    transition: var(--transitionApp);\n    cursor: pointer;\n\n    &:hover {\n        color: var(--onHoverColor);\n        background: var(--onHoverBG);\n    }\n`;\n\nexport default function SubmitBtn({value, onClick}) {\n    return <SSubmitBtn type=\"submit\" value={value} onClick={onClick} />\n}","import { RandomKey } from \"utils/content\";\n\nimport styled from \"styled-components\";\n\nconst SFilesPlash = styled.div`\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 100%;\n    background: #000000ad;\n    overflow: auto;\n    white-space: nowrap;\n`;\n\nconst SFileUploadWrapper = styled.div`\n    position: relative;\n    width:  4rem;\n    display: inline-block;\n    margin: .5rem;\n    padding: .5rem;\n    overflow: hidden;\n\n    & > * {\n        width: 100%;\n        color: var(--onHoverColor);\n    }\n`;\n\nconst SRemoveFile = styled.div`\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 1rem;\n    height: 1rem;\n    padding: 5px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: var(--redColor);\n    border-radius: 100%;\n    transition: var(--transitionApp);\n    cursor: pointer;\n\n    &:hover{\n        background: var(--darkRedColor);\n    }\n`;\n\nconst RenderUploadedFile = ({filename, src, removeFile}) => {\n    return (\n        <SFileUploadWrapper>\n            <SRemoveFile onClick={()=>removeFile(filename)}>\n                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n            </SRemoveFile>\n\n            <img src={src} alt=\"uploaded img\" />\n            <div>{filename}</div>\n        </SFileUploadWrapper>\n    )\n}\n\nexport default function PreloadedFilesPlash({ preloadedFiles, removeFile = ()=>{}}) {\n    return (\n        <SFilesPlash>\n            {\n                preloadedFiles.map(\n                    file => <RenderUploadedFile key={RandomKey()} {...file} removeFile={filename => removeFile(filename)} />\n                )\n            }\n        </SFilesPlash>\n    )\n}","import { PreloadFile } from \"utils/file\";\nimport PreloadedFilesPlash from '../preloaded-files-plash/plash';\n\nimport styled from \"styled-components\";\n\nconst SClipItem = styled.div`\n    width: 3rem;\n    height: 3rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: ${props => props.color ? props.color : 'rgba(255, 255, 255, 0.38)'}; \n    border-radius: 50px;\n    cursor: pointer;\n\n    & img {\n        width: 80%;\n        height: 80%;\n    }\n\n    &:hover {\n        background: var(--purpleColor);\n    }\n`;\n\nconst ClipOneBtn = ({ color, alt, srcIcon, onClick }) => {\n    return (\n        <SClipItem color={color} onClick={onClick}>\n            <img src={srcIcon} alt={alt} />\n        </SClipItem>\n    )\n}\n\nexport default function ClipPlash({ preloadedFiles = [], setFiles = () => { } }) {\n    const addToPlash = (...files) => setFiles([...preloadedFiles, ...files]);\n    const removeFile = filename => setFiles(preloadedFiles.filter(file => file.filename !== filename))\n\n    const preloadedCB = (file, src, type) => {\n        addToPlash({\n            'type': type,\n            'file': file,\n            'src': src,\n            'filename': file.name,\n        });\n    }\n\n    return (\n        <>\n            <ClipOneBtn alt=\"clip\" srcIcon=\"/assets/app/send-gallery.png\" onClick={() => PreloadFile('image/*', preloadedCB)} />\n            <PreloadedFilesPlash preloadedFiles={preloadedFiles} removeFile={removeFile} />\n        </>\n    )\n}","import { RandomKey } from \"utils/content\";\nimport { PopupOpen } from \"../popup/popup\";\n\nimport styled from \"styled-components\";\n\nconst SFilesPlash = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    background: #000000ad;\n`;\n\nconst SClippedFileWrapper = styled.div`\n    position: relative;\n    max-width:  ${props => props.size ? props.size : '15rem'};\n    width: max-content;\n    max-height: ${props => props.size ? props.size : '15rem'};\n    margin: .5rem;\n    padding: .5rem;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: 'space-between';\n    color: var(--onHoverColor);\n    background: #000000ad;\n    border-radius: 10px;\n    cursor: pointer;\n`;\n\nconst SClippedFileSrc = styled.div`\n    width: 100%;\n    \n    & > * {\n        max-width: 100%;\n    }\n`;\n\nconst SRemoveFile = styled.div`\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 1rem;\n    height: 1rem;\n    padding: 5px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: var(--redColor);\n    border-radius: 100%;\n    transition: var(--transitionApp);\n    cursor: pointer;\n\n    &:hover{\n        background: var(--darkRedColor);\n    }\n`;\n\n\nconst RenderClippedFile = ({ id, filename, src, size, onClick = () => { }, removeFile }) => {\n    return (\n        <SClippedFileWrapper size={size} onClick={onClick} >\n            <SRemoveFile onClick={e => e.stopPropagation() || removeFile(id, src)}>\n                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n            </SRemoveFile>\n\n            <SClippedFileSrc>\n                <img src={src} alt=\"uploaded img\" />\n            </SClippedFileSrc>\n            <span>{filename}</span>\n        </SClippedFileWrapper>\n    )\n}\n\nexport default function ClippedFiles({ files = [], removeFile}) {\n    return (\n        <SFilesPlash>\n            {\n                files?.map(\n                    file => <RenderClippedFile key={RandomKey()} {...file} \n                        onClick={e => e.preventDefault() || PopupOpen(RenderClippedFile, { ...file, 'size': '100%' })} \n                        removeFile={removeFile}\n                    />\n                )\n            }\n        </SFilesPlash>\n    )\n}","import { useCallback, useState } from \"react\";\n\nimport { CompareParams, GetValueFromListByIDAndInputValue, OnChangeTransitPoint } from \"utils/effects\";\nimport { POSTRequestWithParams } from \"utils/api\";\nimport { useInput } from \"utils/form\";\nimport { UploadFile } from \"utils/file\";\nimport { DateFromMilliseconds } from \"utils/content\";\nimport { Notify } from \"components/app-notification/notification\";\nimport { ClosePopup } from \"components/popup/popup\";\nimport Input from \"components/form-input/input\";\nimport SubmitBtn from \"components/submit-btn/submit\";\nimport ClipPlash from \"components/clips/clips\";\nimport ClippedFiles from \"components/clipped-files-plash/plash\";\n\nimport styled from \"styled-components\";\n\nconst SParsel = styled.form`\n    padding: 1rem;\n    margin: 1rem;\n    min-width: 80vw;\n\n    & .transit_points,\n    & .price_weigth,\n    & .title_expire,\n    & .contactNumber {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n\n        & > * {\n            flex-basis: 45%;\n        }\n    }\n\n    & .photos {\n        position: relative;\n        margin-bottom: 10rem;\n        padding: 1rem;\n        display: flex;\n        align-items: center;\n\n        &.clipped {\n            margin-bottom: 0;\n            flex-direction: column;\n            align-items: unset;\n        }\n    }\n\n    @media screen and (max-width: 600px) {\n        & .transit_points,\n        & .price_weigth,\n        & .title_expire,\n        & .contactNumber {\n            align-items: unset;\n            flex-direction: column;\n        }\n    }\n`;\n\nconst removeFile = async (id, src, removePhoto) => {\n    const res = await POSTRequestWithParams(\"/r/image\", { 'id': id, 'src': src });\n    if (res?.err !== \"ok\") return Notify('fail', \"Фото не удалилось, попробуйте позднее, или сообщите в службу поддрежки\")\n    removePhoto(id);\n    return Notify('success', \"Фото удалено\")\n}\n\nconst clearAll = (fields = [], setHaveWhatsUp, setPreloaded) => {\n    fields.forEach(f => f.resetField());\n    setHaveWhatsUp(false);\n    setPreloaded([]);\n}\n\nexport default function ManageParsel({ type = \"create\", cb, failText, successText, data }) {\n    const weight = useInput(data?.weight);\n    const price = useInput(data?.price);\n    const title = useInput(data?.title);\n    const expire = useInput(DateFromMilliseconds(data?.expireDatetime));\n    const contactNumber = useInput(data?.contactNumber);\n    const from = useInput(data?.from);\n    const to = useInput(data?.to);\n    const fromID = useInput(data?.fromID);\n    const toID = useInput(data?.toID);\n    const [isHaveWhatsUp, setHaveWhatsUp] = useState(data?.isHaveWhatsUp === 1);\n\n    from.base.onChange = e => OnChangeTransitPoint(from, e, fromID.setCertainValue);\n    to.base.onChange = e => OnChangeTransitPoint(to, e, toID.setCertainValue);\n\n    const [photos, setPhotos] = useState(data?.photos);\n    const [preloadedFiles, setPreloaded] = useState([]);\n\n    const removePhoto = id => setPhotos(photos.filter(ph => ph.id !== id))\n\n    const onSubmit = useCallback(async (e) => {\n        e.preventDefault();\n\n        const oldParams = {\n            'title': data?.title,\n            'fromID': data?.fromID,\n            'toID': data?.toID,\n            'from': data?.from,\n            'to': data?.to,\n            'weight': data?.weight,\n            'price': data?.price,\n            'expireDatetime': data?.expireDatetime,\n            'contactNumber': data?.contactNumber,\n            'isHaveWhatsUp': data?.isHaveWhatsUp,\n        }\n        const comparedParams = CompareParams({\n            'id': data?.id,\n            'title': title.base.value,\n            'fromID': GetValueFromListByIDAndInputValue('from-list', from.base.value),\n            'toID': GetValueFromListByIDAndInputValue('to-list', to.base.value),\n            'from': from.base.value,\n            'to': to.base.value,\n            'weight': weight.base.value,\n            'price': price.base.value,\n            'expireDatetime': Date.parse(expire.base.value),\n            'contactNumber': contactNumber.base.value,\n            'isHaveWhatsUp': isHaveWhatsUp ? 1 : 0,\n        }, oldParams);\n\n        // bcs we have id on new so <= 1\n        if (Object.values(comparedParams).length <= 1 && preloadedFiles.length === 0) return Notify('info', 'Нет изменений');\n\n        // send to edit\n        const res = await POSTRequestWithParams(\"/\" + (type === \"create\" ? \"s\" : \"e\") + \"/parsel\", comparedParams);\n        if (res?.err !== \"ok\") return Notify('fail', failText + \":\" + res?.err);\n        Notify('success', successText);\n\n        // upload images\n        preloadedFiles.forEach(ph => UploadFile(ph.type, ph.file, \"parsel\", type === \"create\" ? res?.data : data?.id))\n\n        // do callback if edit\n        if (cb) {\n            // finally params will be\n            cb(Object.assign(oldParams, comparedParams));\n            ClosePopup();\n        } else {\n            // or clear all if create\n            const fields = [weight, price, title, expire, contactNumber, from, to, fromID, toID];\n            clearAll(fields, setHaveWhatsUp, setPreloaded)\n        }\n    }, [title, from, to, fromID, toID, weight, price, expire, contactNumber, isHaveWhatsUp, preloadedFiles, type, cb, failText, successText, data]);\n\n    return (\n        <SParsel onSubmit={onSubmit}>\n            <div className=\"transit_points\">\n                <Input id=\"from\" type=\"text\" name=\"from\" list=\"from-list\" base={from.base} labelText=\"Откуда\" />\n                <datalist id=\"from-list\"></datalist>\n\n                <Input id=\"to\" type=\"text\" name=\"to\" list=\"to-list\" base={to.base} labelText=\"Куда\" />\n                <datalist id=\"to-list\"></datalist>\n            </div>\n\n            <div className=\"price_weigth\">\n                <Input type=\"number\" name=\"weight\" base={weight.base} labelText=\"Вес (в г)\" />\n                <Input type=\"number\" name=\"price\" base={price.base} labelText=\"Цена (в тг)\" />\n            </div>\n\n            <div className=\"title_expire\">\n                <Input type=\"text\" name=\"title\" base={title.base} labelText=\"Заголовок вашей посылки\" />\n                <Input type=\"datetime-local\" name=\"expireDatetime\" base={expire.base} labelText=\"Доставить до:\" />\n            </div>\n\n            <div className=\"contactNumber\">\n                <Input type=\"tel\" name=\"contactNumber\" base={contactNumber.base} labelText=\"Контакты отправителя\" />\n                <span>\n                    <input onChange={() => setHaveWhatsUp(!isHaveWhatsUp)} defaultChecked={isHaveWhatsUp} type=\"checkbox\" name=\"isHaveWhatsup\" /> Есть WhatsUp?\n                </span>\n            </div>\n\n            {\n                type !== \"create\" && photos && photos.length > 0 &&\n                <div className=\"photos clipped\">\n                    <span>Чтобы удалить фото, нажмите крестик на фото </span>\n                    <ClippedFiles files={photos} removeFile={(id, src) => removeFile(id, src, removePhoto)} />\n                </div>\n            }\n\n            <div className=\"photos\">\n                <span>Чтобы прикрепить фото, нажмите здесь {\"->\"}</span>\n                <ClipPlash setFiles={setPreloaded} preloadedFiles={preloadedFiles} />\n            </div>\n\n            <SubmitBtn value={type === \"create\" ? \"Опубликовать\" : \"Изменить\"} />\n        </SParsel>\n    )\n}","import { RandomKey } from \"utils/content\";\n\nimport styled from \"styled-components\";\n\nconst SLalel = styled.label`\n    display: flex;\n    align-items: center;\n    white-space: nowrap;\n\n    & select {\n        margin-left: 1rem;\n        padding: .5rem;\n        width: 100%;\n        font-size: 1rem;\n        color: var(--offHoverColor);\n        background: none;\n        border: none;\n        border-radius: 5px;\n        outline: none;\n        border-bottom: 1px solid var(--onHoverColor);\n        box-shadow: 4px 4px 3px 0 #00000029;\n    }\n`;\nexport default function Select({ name, text, required = true, options, onChange }) {\n    return (\n        <SLalel>\n            <span>{text}</span>\n            <select name={name} value={options.selected} required={required} onChange={onChange}>\n                {options?.data?.map((opt) => <option key={RandomKey()} value={opt[options.value]}>{options.makeText(opt)}</option>)}\n            </select>\n        </SLalel>\n    )\n}","import { useCallback, useEffect, useState } from \"react\";\n\nimport { CompareParams, GetValueFromListByIDAndInputValue, OnChangeTransitPoint } from \"utils/effects\";\nimport { GetDataByCrieteries, POSTRequestWithParams } from \"utils/api\";\nimport { useInput } from \"utils/form\";\nimport { DateFromMilliseconds } from \"utils/content\";\nimport { Notify } from \"components/app-notification/notification\";\nimport { ClosePopup } from \"components/popup/popup\";\nimport Input from \"components/form-input/input\";\nimport SubmitBtn from \"components/submit-btn/submit\";\n\nimport styled from \"styled-components\";\nimport Select from \"components/form-select/select\";\n\nconst STravel = styled.form`\n    padding: 1rem;\n    margin: 1rem;\n    min-width: 80vw;\n\n    & .transit_points,\n    & .travelType_weigth,\n    & .departure_arrival,\n    & .contactNumber {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n\n        & > * {\n            flex-basis: 45%;\n        }\n    }\n\n    @media screen and (max-width: 600px) {\n        & .transit_points,\n        & .travelType_weigth,\n        & .departure_arrival,\n        & .contactNumber {\n            align-items: unset;\n            flex-direction: column;\n        }\n    }\n`;\n\nconst onChangeTravelType = (e, setID, setTravel) => {\n    console.log(e);\n    setID(e.target.value);\n    const op = Array.from(e.target.options).find(op => op.selected)\n    if (op) setTravel(op.textContent);\n}\n\nconst clearAll = (fields = [], setHaveWhatsUp) => {\n    fields.forEach(f => f.resetField());\n    setHaveWhatsUp(false);\n}\n\nexport default function ManageTraveler({ type = \"create\", cb, failText, successText, data }) {\n    const weight = useInput(data?.weight);\n    const departure = useInput(DateFromMilliseconds(data?.departureDatetime));\n    const arrival = useInput(DateFromMilliseconds(data?.arrivalDatetime));\n    const contactNumber = useInput(data?.contactNumber);\n    const from = useInput(data?.from);\n    const to = useInput(data?.to);\n    const travelType = useInput(data?.travelType);\n    const travelTypeID = useInput(data?.travelTypeID || 1);\n    const fromID = useInput(data?.fromID);\n    const toID = useInput(data?.toID);\n    const [isHaveWhatsUp, setHaveWhatsUp] = useState(data?.isHaveWhatsup === 1);\n    const [travelTypes, setTravelTypes] = useState();\n\n    from.base.onChange = e => OnChangeTransitPoint(from, e, fromID.setCertainValue);\n    to.base.onChange = e => OnChangeTransitPoint(to, e, toID.setCertainValue);\n\n    const getTravelTypes = useCallback(async () => {\n        const res = await GetDataByCrieteries('travelTypes');\n        if (res.err && res?.err !== \"ok\") return setTravelTypes(null);\n        return setTravelTypes(res)\n    }, [])\n\n    const onSubmit = useCallback(async (e) => {\n        e.preventDefault();\n\n        const oldParams = {\n            'travelType': data?.travelType,\n            'travelTypeID': data?.travelTypeID,\n            'fromID': data?.fromID,\n            'toID': data?.toID,\n            'from': data?.from,\n            'to': data?.to,\n            'weight': data?.weight,\n            'departureDatetime': data?.departureDatetime,\n            'arrivalDatetime': data?.arrivalDatetime,\n            'contactNumber': data?.contactNumber,\n            'isHaveWhatsUp': data?.isHaveWhatsUp,\n        }\n        const comparedParams = CompareParams({\n            'id': data?.id,\n            'travelType': travelType.base.value,\n            'travelTypeID': travelTypeID.base.value,\n            'fromID': GetValueFromListByIDAndInputValue('from-list', from.base.value),\n            'toID': GetValueFromListByIDAndInputValue('to-list', to.base.value),\n            'from': from.base.value,\n            'to': to.base.value,\n            'weight': weight.base.value,\n            'departureDatetime': Date.parse(departure.base.value),\n            'arrivalDatetime': Date.parse(arrival.base.value),\n            'contactNumber': contactNumber.base.value,\n            'isHaveWhatsUp': isHaveWhatsUp ? 1 : 0,\n        }, oldParams);\n\n        // bcs we have id on new, so <= 1\n        if (Object.values(comparedParams).length <= 1) return Notify('info', 'Нет изменений');\n\n        // send\n        const res = await POSTRequestWithParams(\"/\" + (type === \"create\" ? \"s\" : \"e\") + \"/travel\", comparedParams);\n        if (res?.err !== \"ok\") return Notify('fail', failText + \":\" + res?.err);\n        Notify('success', successText);\n\n        // do callback if edit\n        if (cb) {\n            // finally params will be\n            cb(Object.assign(oldParams, comparedParams));\n            ClosePopup()\n        } else {\n            // or clear all if create\n            const fields = [weight, departure, arrival, travelTypeID, travelType, contactNumber, from, to, fromID, toID];\n            clearAll(fields, setHaveWhatsUp)\n        }\n    }, [travelTypeID, travelType, from, to, fromID, toID, weight, departure, arrival, contactNumber, isHaveWhatsUp, type, cb, failText, successText, data]);\n\n    useEffect(() => {\n        if (travelTypes === undefined) return getTravelTypes()\n    }, [getTravelTypes, travelTypes])\n\n    return (\n        <STravel onSubmit={onSubmit}>\n            <div className=\"transit_points\">\n                <Input id=\"from\" type=\"text\" name=\"from\" list=\"from-list\" base={from.base} labelText=\"Откуда\" />\n                <datalist id=\"from-list\"></datalist>\n\n                <Input id=\"to\" type=\"text\" name=\"to\" list=\"to-list\" base={to.base} labelText=\"Куда\" />\n                <datalist id=\"to-list\"></datalist>\n            </div>\n\n            <div className=\"travelType_weigth\">\n                <Input type=\"number\" name=\"weight\" base={weight.base} labelText=\"Заберу до (в г)\" />\n                <Select name=\"travelType\" text=\"Тип транспорта\" options={{\n                    data: travelTypes,\n                    value: \"id\",\n                    selected: travelTypeID.base.value,\n                    makeText: ({ name }) => name\n                }} onChange={e => onChangeTravelType(e, travelTypeID.setCertainValue, travelType.setCertainValue)} />\n            </div>\n\n            <div className=\"departure_arrival\">\n                <Input type=\"datetime-local\" name=\"departureDatetime\" base={departure.base} labelText=\"Выезд\" />\n                <Input type=\"datetime-local\" name=\"arrivalDatetime\" base={arrival.base} labelText=\"Прибытие\" />\n            </div>\n\n            <div className=\"contactNumber\">\n                <Input type=\"tel\" name=\"contactNumber\" base={contactNumber.base} labelText=\"Контакты отправителя\" />\n                <span>\n                    <input onChange={() => setHaveWhatsUp(!isHaveWhatsUp)} type=\"checkbox\" name=\"isHaveWhatsUp\" /> Есть WhatsUp?\n                </span>\n            </div>\n\n            <SubmitBtn value={type === \"create\" ? \"Опубликовать\" : \"Изменить\"} />\n        </STravel>\n    )\n}","\nimport { useCallback, useEffect, useState } from \"react\";\n\nimport { GetDataByCrieteries, POSTRequestWithParams } from \"utils/api\";\nimport { useInput } from \"utils/form\";\nimport { RandomKey } from \"utils/content\";\nimport { Notify } from \"components/app-notification/notification\";\nimport Input from \"components/form-input/input\";\nimport SubmitBtn from \"components/submit-btn/submit\";\n\nimport styled from \"styled-components\";\n\nconst SToTopType = styled.div`\n    padding: 1rem;\n    margin: 1rem;\n`;\n\nconst SOneItem = styled.div`\n    padding: 1rem;\n    margin: 1rem;\n    display: flex;\n    flex-direction: column;\n    background: ${props => props.color ? props.color : 'var(--grayColor)'};\n    border-radius: 5px;\n    box-shadow: var(--boxShadow);\n    cursor: pointer;\n    transition: var(--transitionApp);\n\n    &:hover {\n        color: var(--onHoverColor);\n        background: var(--onHoverBG);\n    }\n\n    & b {\n        display: block;\n        padding: 5px;\n        margin: 5px;\n        color: var(--onHoverColor);\n        background: #c30000;\n        border-radius: 5px;\n        box-shadow: var(--boxShadow);\n    }\n`;\n\nconst toTopType = async (id, type, code, topID, cb) => {\n    const res = await POSTRequestWithParams(\"/e/toptype\", { 'id': id, 'type': type, 'code': code, 'topID': topID })\n    if (res.err && res.err !== \"ok\") return Notify('fail', 'Не удалось рекламировать');\n    cb()\n}\n\nconst GOnePrice = ({ id, cost, name, color, setPayed, setTopTypeID }) => {\n    const onClick = () => {\n        setPayed(true);\n        setTopTypeID(id);\n    }\n\n    return (\n        <SOneItem color={color} onClick={onClick}>\n            <span>Ваше обьявление будет рекламировано <b> {name} </b></span>\n            <span>Стоимость: <b> {cost} тг </b></span>\n        </SOneItem>\n    )\n}\n\n/**\n * \n * @param type if cost will be relative by type: parsel or travel \n * @param cb callback after click to up\n * @param id parsel/travel id \n */\nexport default function ToTopType({ cb, type, id }) {\n    const [prices, setPrices] = useState();\n    const [isPayed, setPayed] = useState();\n    const [topTypeID, setTopTypeID] = useState();\n    const code = useInput('');\n\n    const getPrices = useCallback(async () => {\n        const res = await GetDataByCrieteries('toptypes');\n        if (res.err && res.err !== \"ok\") {\n            setPrices(null);\n            return Notify('fail', \"Ошибка. Попробуйте позднее\");\n        }\n        setPrices(res)\n    }, [])\n\n    useEffect(() => {\n        if (prices === undefined) return getPrices()\n    }, [getPrices, prices])\n\n\n    if (!prices) return <div>Ошибка. Попробуйте позднее</div>\n    return (\n        <SToTopType>\n            {\n                isPayed\n                    ? <div>\n                        <Input index=\"2\" id=\"code\" type=\"text\" name=\"code\" base={code.base} labelText=\"Введите 8-значный код:\"\n                            minLength=\"8\" maxLength=\"8\" placeholder=\"Mfa7sd45\"\n                        />\n\n                        <SubmitBtn value=\"Рекламировать!\" onClick={() => toTopType(id, type, code, topTypeID, cb)} />\n                    </div>\n                    : <>\n                        <h2>Выберите на какой промежуток Вы хотите рекламировать</h2>\n\n                        <div className=\"prices\">\n                            {prices?.map(p => <GOnePrice key={RandomKey()} {...p} setPayed={setPayed} setTopTypeID={setTopTypeID} />)}\n                        </div>\n                    </>\n            }\n        </SToTopType>\n    )\n}","export const ExamplePrice = {\n    'id': 1,\n    'cost': 500,\n}","import { useCallback, useEffect, useState } from \"react\";\n\nimport { GetDataByCrieteries, POSTRequestWithParams } from \"utils/api\";\nimport { useInput } from \"utils/form\";\nimport { ClosePopup } from \"components/popup/popup\";\nimport { Notify } from \"components/app-notification/notification\";\nimport Input from \"components/form-input/input\";\nimport SubmitBtn from \"components/submit-btn/submit\";\n\nimport { ExamplePrice } from \"./ex\";\nimport styled from \"styled-components\";\n\nconst SToUp = styled.div`\n    padding: 1rem;\n    margin: 1rem;\n\n    & .price {\n        color: red;\n        font-size: 1.3rem;\n        background: yellow;\n    }\n\n    & .answer {\n        display: flex;\n        align-items: center;\n        justify-content: space-evenly;\n\n        & span {\n            padding: .5rem 1rem;\n            margin: 1rem;\n            color: var(--onHoverColor);\n            background: var(--blueColor);\n            border-radius: 10px;\n            cursor: pointer;\n            transition: var(--transtionApp);\n\n            &:nth-child(2) {\n                background: red;\n            }\n\n            &:hover{\n                background: var(--onHoverBG);\n            }\n        }\n    }\n`;\n\nconst toUp = async (id, type, code, cb) => {\n    const res = await POSTRequestWithParams(\"/e/up\", { 'id': id, 'type': type, 'code': code })\n    if (res.err && res.err !== \"ok\") return Notify('fail', 'Не удалось поднять');\n    cb()\n}\n\n/**\n * \n * @param type if cost will be relative by type: parsel or travel \n * @param cb callback after click to up\n * @param id parsel/travel id \n */\nexport default function ToUp({ cb, type, id }) {\n    const [price, setPrice] = useState();\n    const [isPayed, setPayed] = useState();\n    const code = useInput('');\n\n    const getPrice = useCallback(async () => {\n        const res = await GetDataByCrieteries('price');\n        if (res?.err !== \"ok\") return Notify('fail', \"Ошибка. Попробуйте позднее\") || setPrice(ExamplePrice)\n        setPrice(res)\n    }, [])\n\n    useEffect(() => {\n        if (!price) return getPrice()\n    }, [getPrice, price])\n\n\n    if (!price) return <div>Ошибка. Попробуйте позднее</div>\n    return (\n        <SToUp>\n            <h2>Поднять Ваше объявление?</h2>\n\n            <div className=\"price\">\n                Стоимость: {price?.cost} тг\n            </div>\n\n            <div className=\"answer\">\n                <span onClick={() => setPayed(true)}>Да</span>\n                <span onClick={ClosePopup}>Нет</span>\n            </div>\n\n            {\n                isPayed &&\n                <div>\n                    <Input index=\"2\" id=\"code\" type=\"text\" name=\"code\" base={code.base} labelText=\"Введите 8-значный код:\"\n                        minLength=\"8\" maxLength=\"8\" placeholder=\"Mfa7sd45\"\n                    />\n\n                    <SubmitBtn value=\"Поднять!\" onClick={() => toUp(id, type, code, cb)} />\n                </div>\n            }\n        </SToUp>\n    )\n}","import { Notify } from \"components/app-notification/notification\";\nimport { PopupOpen } from \"components/popup/popup\";\nimport ManageParsel from \"components/parsel/manage/manage\";\nimport ManageTraveler from \"components/traveler/manage/manage\";\nimport ToTopType from \"components/to-toptype/toptype\";\nimport ToUp from \"components/to-up/up\";\n\n\nimport { GetDataByCrieteries, POSTRequestWithParams } from \"./api\";\n// just debounce\nexport function Debounce(fn, ms) {\n    let timeOut;\n    return (...args) => {\n        clearTimeout(timeOut);\n        timeOut = setTimeout(() => { fn(...args) }, ms)\n    }\n}\n\nexport const DbnceCities = Debounce(async(e) => {\n    const res = await GetDataByCrieteries(\"search\", { 'type': 'cities', 'q': e.target.value });\n    if (res.err) return Notify(\"fail\", \"Не удалось загрузить города\");\n\n    const options = res.map(({ id, name }) => {\n        const op = document.createElement(\"option\");\n        op.value = name;\n        op.textContent = id;\n        return op;\n    })\n\n    const dt = document.getElementById(e.target.list.id);\n    if (!dt) return;\n    dt.innerHTML = \"\";\n    dt.append(...options);\n}, 500)\n\n// show & hide password by changing input type\nexport const ShowAndHidePassword = (e, passElem, passwordToggle) => {\n    const elem = e.target;\n    passwordToggle.toggleType();\n    elem.classList.toggle('fa-eye-slash');\n    if (passwordToggle.state === \"password\") passElem.setAttribute('type', 'text');\n    else passElem.setAttribute('type', 'password');\n}\n\n/**\n * for lazy load and keeping focus with scrolling\n * @param e event\n * @param childrenClass get parent by childs classnames\n * @param isStopLoad stop load or no\n * @param isScrollingToTop load on scroll to top or bottom\n * @param loadCallback what do after react edge\n */\nexport const ScrollHandler = Debounce(async(e, isStopLoad, isScrollingToTop = false, loadCallback = async() => {}, childrenClass) => {\n    if (isStopLoad) return;\n\n    const parent = childrenClass ? document.getElementsByClassName(childrenClass)[0].parentNode : e.target;\n    const pRec = parent.getBoundingClientRect();\n    if (\n        (isScrollingToTop && parent.scrollTop === 0) ||\n        (!isScrollingToTop && parent.scrollTop >= Math.round((parent.scrollHeight - pRec.height) * .75))\n    ) {\n        const priorEdgeChildNum = isScrollingToTop ? 0 : parent.childElementCount - 1;\n\n        if (await loadCallback()) {\n            setTimeout(() => {\n                // smooth scroll\n                const el = parent.childNodes[priorEdgeChildNum];\n                if (el) el.scrollIntoView({ behavior: \"smooth\" });\n            }, 100);\n        }\n    }\n}, 100);\n\nexport const EditItem = async(type, data, cb) =>\n    PopupOpen(type === \"parsel\" ? ManageParsel : ManageTraveler, { 'cb': cb, 'data': data, 'type': 'edit' })\n\nexport const RemoveItem = async(id, type, cb) => {\n    const res = await POSTRequestWithParams(\"/r/\" + (type === \"parsel\" ? \"parsel\" : 'travel'), { 'id': id })\n    if (res.err && res.err !== \"ok\") return Notify('fail', 'Не удалено');\n    cb()\n}\n\nexport const TopItem = async(id, type, cb) => PopupOpen(ToUp, { 'cb': cb, \"type\": type, 'id': id })\n\nexport const PaintItem = async(id, type, cb) => PopupOpen(ToTopType, { 'cb': cb, \"type\": type, 'id': id })\n\nconst removeEmptyFields = (obj = {}) => {\n    for (let [k, v] of Object.entries(obj))\n        if (v === \"\" || !v) delete obj[k];\n    return obj\n}\n\nexport const CompareParams = (newParams, currentParams) => {\n    const res = {};\n    newParams = removeEmptyFields(newParams);\n    for (let [k, v] of Object.entries(newParams)) {\n        if (newParams[k] !== currentParams[k]) {\n            res[k] = v;\n        }\n    }\n    return res;\n}\n\nexport const GetValueFromListByIDAndInputValue = (listID, inputValue) => {\n    const list = document.getElementById(listID);\n    if (!list) return;\n    const dt = Array.from(list.childNodes)\n    const op = dt.find(option => option.value.includes(inputValue));\n    if (op) return op.textContent;\n}\n\nexport const OnChangeTransitPoint = async(point, e) => {\n    point.setCertainValue(e.target.value);\n    DbnceCities(e);\n}","import { useCallback, useState } from \"react\";\n\nimport { Notify } from \"components/app-notification/notification\";\n\nimport { GetDataByCrieteries } from \"./api\";\n\n// for lazy load\nexport const useFromTo = (initState = [], step = 10) => {\n    const [fromToState, setFromToState] = useState({\n        'start': 0,\n        'isStopLoad': false,\n        'isLoaded': false,\n        'datalist': initState,\n    });\n\n    const setDataList = state => setFromToState(Object.assign({}, fromToState, { 'datalist': state }));\n\n    const getPart = useCallback(async(getWhat = \"\", params = {}, failText = \"\", isAppToEnd = true, isNeedClear = false) => {\n        if (getWhat === \"\" || failText === \"\") return Notify('fail', failText);\n\n        const res = await GetDataByCrieteries(getWhat, {\n            ...params,\n            'from': isNeedClear ? 0 : fromToState.start,\n            'step': step\n        });\n\n        if (res.err && res.err !== 'ok') {\n            fromToState.isStopLoad = true;\n            fromToState.isLoaded = true;\n            setFromToState(Object.assign({}, fromToState));\n            return Notify('fail', failText + \" : \" + res.err);\n        }\n\n        if (!fromToState.isLoaded) fromToState.isLoaded = true;\n        if (isNeedClear) {\n            fromToState.start = 0;\n            fromToState.datalist = res;\n            fromToState.isStopLoad = false;\n        } else if (isAppToEnd) fromToState.datalist = [...fromToState.datalist, ...res];\n        else fromToState.datalist = [...res, ...fromToState.datalist];\n\n        if (res.length < step) fromToState.isStopLoad = true;\n        else fromToState.start += step;\n\n        setFromToState(Object.assign({}, fromToState));\n        return true;\n    }, [fromToState, step])\n\n    const zeroState = async() => setFromToState({\n        'start': 0,\n        'isStopLoad': false,\n        'isLoaded': false,\n        'datalist': initState,\n    });\n\n    return {\n        'datalist': fromToState.datalist,\n        'isStopLoad': fromToState.isStopLoad,\n        'isLoaded': fromToState.isLoaded,\n        setDataList,\n        getPart,\n        zeroState,\n    }\n}","import { useCallback, useEffect, useState } from \"react\";\n\nimport { GetDataByCrieteries } from \"utils/api\";\nimport { RandomKey, DateFromMilliseconds } from \"utils/content\";\nimport { EditItem, PaintItem, RemoveItem, TopItem } from \"utils/effects\";\nimport { Notify } from \"components/app-notification/notification\";\n\nimport styled from \"styled-components\"\n\nconst SParsel = styled.div`\n    position: relative;\n    padding: 1rem;\n    min-height: 30vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    background: ${props => props.color ? props.color : 'white'};\n    border: 1px solid black;\n    border-radius: 10px;\n\n    & .info {\n        display: flex;\n        justify-content: space-between;\n\n        & .general_info {\n            display: flex;\n            flex-direction: column;\n\n            & .price b {\n                text-decoration: underline;\n            }\n        }\n\n        & .other_info  {\n            & .phones > * {\n                margin: .5rem;\n                padding: .5rem;\n                font-size: 4rem;\n                border-radius: 10px;\n                cursor: pointer;\n                transition: var(--transitionApp);\n\n                &:hover {\n                    color: var(--onHoverColor);\n                    background: var(--blueColor);\n                }\n            }\n\n            & .expire {\n                margin: .5rem;\n            }\n        }\n    }\n\n    & .photos {\n        display: flex;\n        flex-wrap: wrap;\n\n        & span {\n            max-width: 20vw;\n            display: block;\n            align-self: end;\n            margin: 5px;\n            border-radius: 5px;\n            background: #000000a3;\n\n            & img {\n                width: 100%;\n            }\n        }\n    }\n\n    & .manage {\n        position: absolute;\n        right: 0;\n        top: 0;\n        padding: .5rem;\n        margin: .5rem;    \n        background: #2f3a64;\n        color: var(--onHoverColor);\n        font-size: 1rem;\n        border-radius: 5px;\n\n        & .manage-action {\n            cursor: pointer;\n            margin: .5rem;\n            transition: var(--transitionApp);\n            text-align: right;\n            vertical-align: middle;\n            \n            &:hover {\n                background: var(--darkGreyColor);\n            }\n        }\n\n        & .manage-actions {\n            display: flex;\n            flex-direction: column;\n        }\n    }\n\n    @media screen and (max-width: 600px) {\n        & .info {\n            flex-direction: column;\n\n            & .phones {\n                display: flex;\n                align-items: center;\n                justify-content: space-evenly;\n            }\n        }\n\n        & .manage {\n            font-size: 1.5rem;\n        }\n    }\n`;\n\nexport default function Parsel({ data, isMy = false, changeItem, removeItem }) {\n    const [photos, setPhotos] = useState();\n    const [isOpened, setOpened] = useState(false);\n\n    const getPhotos = useCallback(async () => {\n        const res = await GetDataByCrieteries(\"images\", { \"id\": data.id });\n        if (res?.err === \"n/d\") return setPhotos(null);\n        if (res.err && res.err !== \"ok\") return Notify('fail', \"Не удалось загрузить прикрепленные фото\");\n        return setPhotos(res?.data || res);\n    }, [data]);\n\n    useEffect(() => {\n        if (photos === undefined) return getPhotos()\n    }, [getPhotos, photos])\n\n    return (\n        <SParsel className=\"parsel\" color={data.color}>\n            <div className=\"info\">\n                <div className=\"general_info\">\n                    <span>{data.from}-{data.to}</span>\n                    <span>{data.title}</span>\n                    <span>Вес: {data.weight/1000} кг</span>\n                    <span className=\"price\">Цена: <b> {data.price} </b> тг</span>\n                </div>\n\n                <div className=\"other_info\">\n                    <div className=\"phones\">\n                        {\n                            data.isHaveWhatsUp === 1 &&\n                            <a target=\"_blank\" rel=\"noreferrer\" href={`https://api.whatsapp.com/send?phone=${data.contactNumber}&text=\"Добрый день, пишу из приложения Жибек насчет вашей посылки: ${data.title}\"`}>\n                                <i className=\"fa fa-whatsapp\" aria-hidden=\"true\"></i>\n                            </a>\n                        }\n\n                        <span onClick={() => window.open(\"tel:\" + data.contactNumber)}>\n                            <i className=\"fa fa-phone\" aria-hidden=\"true\"></i>\n                        </span>\n                    </div>\n                    <div className=\"expire\">\n                        <span>Надо доставить до: {DateFromMilliseconds(data.expireDatetime, false)}</span>\n                    </div>\n                </div>\n            </div>\n\n            {\n                photos\n                    ? <div className=\"photos\">\n                        {photos?.map(({ src }) => <span key={RandomKey()}><img src={src} alt=\"\" /></span>)}\n                    </div>\n                    : <div className=\"photos\"> Нет фото</div>\n            }\n\n            {\n                isMy &&\n                <div className=\"manage\">\n                    <div className=\"manage-action\" onClick={() => setOpened(!isOpened)}>\n                        <span>Действия</span>\n                    </div>\n\n                    {\n                        isOpened &&\n                        <div className=\"manage-actions\">\n                            <span className=\"manage-action\"\n                                onClick={() => EditItem(\"parsel\", {...data, 'photos': photos}, newData => changeItem(data.id, newData))}\n                            >\n                                <i className=\"fa fa-pencil\" aria-hidden=\"true\">Редактировать</i>\n                            </span>\n                            <span className=\"manage-action\" onClick={() => RemoveItem(data.id, \"parsel\", () => removeItem(data.id))}>\n                                <i className=\"fa fa-trash\" aria-hidden=\"true\">Удалить</i>\n                            </span>\n                            <span className=\"manage-action\" onClick={() => PaintItem(data.id, \"parsel\", newData => changeItem(data.id, Object.assign({}, data, newData)))}>\n                                <i className=\"fa fa-paint-brush\" aria-hidden=\"true\">Покрасить</i>\n                            </span>\n                            <span className=\"manage-action\" onClick={() => TopItem(data.id, \"parsel\", newData => changeItem(data.id, Object.assign({}, data, newData)))}>\n                                <i className=\"fa fa-level-up\" aria-hidden=\"true\">Поднять</i>\n                            </span>\n                        </div>\n                    }\n                </div>\n            }\n        </SParsel>\n    )\n}","import { useState } from \"react\";\n\nimport { DateFromMilliseconds } from \"utils/content\";\nimport { EditItem, PaintItem, RemoveItem, TopItem } from \"utils/effects\";\n\nimport styled from \"styled-components\";\n\nconst STraveler = styled.div`\n    position: relative;\n    padding: 1rem;\n    min-height: 30vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    background: ${props => props.color ? props.color : 'white'};\n    border: 1px solid black;\n    border-radius: 10px;\n\n    & .info {\n        display: flex;\n        justify-content: space-between;\n\n        & .general_info {\n            display: flex;\n\n            & div {\n                display: flex;\n                flex-direction: column;\n                margin: 1rem;\n            }\n\n            & .weigth b {\n                text-decoration: underline;\n            }\n        }\n\n        & .other_info  {\n            & .phones > * {\n                margin: .5rem;\n                padding: .5rem;\n                font-size: 4rem;\n                border-radius: 10px;\n                cursor: pointer;\n                transition: var(--transitionApp);\n\n                &:hover {\n                    color: var(--onHoverColor);\n                    background: var(--blueColor);\n                }\n            }\n        }\n    }\n\n    & .manage {\n        position: absolute;\n        right: 0;\n        top: 0;\n        padding: .5rem;\n        margin: .5rem;    \n        background: #2f3a64;\n        color: var(--onHoverColor);\n        font-size: 1rem;\n        border-radius: 5px;\n\n        & .manage-action {\n            cursor: pointer;\n            margin: .5rem;\n            transition: var(--transitionApp);\n            text-align: right;\n            vertical-align: middle;\n            \n            &:hover {\n                background: var(--darkGreyColor);\n            }\n        }\n\n        & .manage-actions {\n            display: flex;\n            flex-direction: column;\n        }\n    }\n\n    @media screen and (max-width: 600px) {\n        & .info {\n            flex-direction: column;\n\n            & .phones {\n                display: flex;\n                align-items: center;\n                justify-content: space-evenly;\n            }\n        }\n\n        & .manage {\n            font-size: 1.5rem;\n        }\n    }\n`;\n\nexport default function Traveler({ data, isMy = false, changeItem, removeItem }) {\n    const [isOpened, setOpened] = useState(false);\n\n    return (\n        <STraveler className=\"traveler\" color={data.color}>\n            <div className=\"info\">\n                <div className=\"general_info\">\n                    <div className=\"common\">\n                        <span>{data.from}-{data.to}</span>\n                        <span className=\"weight\">Заберу до: <b> {data.weight/1000} </b> кг</span>\n                        <span>Тип транспорта: {data.travelType}</span>\n                    </div>\n\n                    <div className=\"dates\">\n                        <span> <b> Выезд: </b> {DateFromMilliseconds(data.departureDatetime, false)}</span>\n                        <span> <b> Прибытие: </b> {DateFromMilliseconds(data.arrivalDatetime, false)}</span>\n                    </div>\n                </div>\n\n                <div className=\"other_info\">\n                    <div className=\"phones\">\n                        {\n                            data.isHaveWhatsUp === 1 &&\n                            <a target=\"_blank\" rel=\"noreferrer\" href={`https://api.whatsapp.com/send?phone=${data.contactNumber}&text=\"Добрый день, пишу из приложения Жибек насчет передачи посылки\"`}>\n                                <i className=\"fa fa-whatsapp\" aria-hidden=\"true\"></i>\n                            </a>\n                        }\n\n                        <span onClick={() => window.open(\"tel:\" + data.contactNumber)}>\n                            <i className=\"fa fa-phone\" aria-hidden=\"true\"></i>\n                        </span>\n                    </div>\n\n                </div>\n            </div>\n\n            {\n                isMy &&\n                <div className=\"manage\">\n                    <div className=\"manage-action\" onClick={() => setOpened(!isOpened)}>\n                        <span>Действия</span>\n                    </div>\n\n                    {\n                        isOpened &&\n                        <div className=\"manage-actions\">\n                            <span className=\"manage-action\"\n                                onClick={\n                                    () =>\n                                        EditItem(\n                                            \"traveler\",\n                                            data,\n                                            newData => changeItem(data.id, newData)\n                                        )\n                                }\n                            >\n                                <i className=\"fa fa-pencil\" aria-hidden=\"true\">Редактировать</i>\n                            </span>\n                            <span className=\"manage-action\" onClick={() => RemoveItem(data.id, \"traveler\", () => removeItem(data.id))}>\n                                <i className=\"fa fa-trash\" aria-hidden=\"true\">Удалить</i>\n                            </span>\n                            <span className=\"manage-action\" onClick={() => PaintItem(data.id, \"traveler\", newData => changeItem(data.id, Object.assign({}, data, newData)))}>\n                                <i className=\"fa fa-paint-brush\" aria-hidden=\"true\">Покрасить</i>\n                            </span>\n                            <span className=\"manage-action\" onClick={() => TopItem(data.id, \"traveler\", newData => changeItem(data.id, Object.assign({}, data, newData)))}>\n                                <i className=\"fa fa-level-up\" aria-hidden=\"true\">Поднять</i>\n                            </span>\n                        </div>\n                    }\n                </div>\n            }\n        </STraveler>\n    )\n}","import { useEffect, useState } from \"react\";\n\nimport { ScrollHandler } from \"utils/effects\";\nimport { useFromTo } from \"utils/hooks\";\nimport { RandomKey } from \"utils/content\";\nimport Parsel from \"components/parsel/parsel\";\nimport Traveler from \"components/traveler/traveler\";\n\nimport styled from \"styled-components\";\n\nconst SHistory = styled.section`\n    padding: 1rem;\n\n    & .history-tabs {\n        display: flex;\n        align-items: center;\n\n        & span {\n            margin: .5rem;\n            padding: 1rem;\n            color: var(--onHoverColor);\n            border-radius: 10px;\n            transition: var(--transitionApp);\n            cursor: pointer;\n\n            &.active,\n            &:hover {\n                background: var(--blueColor);\n            }\n        }\n    }\n\n    & .history {\n        padding: 1rem;\n        max-height: 60vh;\n        overflow: auto;\n        border-radius: 10px;\n        background: var(--offHoverBG);\n    }\n`\n\nconst loadHistory = (getType, getTypeOnRus, getPart) => getPart(getType, { 'type': 'user' }, 'Не удалось загрузить ' + getTypeOnRus)\n\nconst configHistoryParams = tab => {\n    if (tab === 0) return ['parsels', 'посылки', Parsel];\n    return ['travelers', 'путешествия', Traveler]\n}\n\nexport default function History() {\n    const [tab, setTab] = useState(0);\n    const { datalist, isStopLoad, isLoaded, getPart, zeroState, setDataList } = useFromTo()\n\n    const [getType, getTypeOnRus, Item] = configHistoryParams(tab);\n\n    const changeItem = (id, newData) => {\n        const index = datalist.findIndex(d => d.id === id)\n        datalist[index] = newData\n        setDataList([...datalist]);\n    }\n\n    const removeItem = id => setDataList([...datalist.filter(d => d.id !== id)])\n\n    useEffect(() => {\n        if (datalist.length === 0 && !isLoaded) {\n            loadHistory(getType, getTypeOnRus, getPart)\n        }\n    }, [datalist, isLoaded, getType, getTypeOnRus, tab, getPart, zeroState]);\n\n    return (\n        <SHistory>\n            <div className=\"history-tabs\">\n                <span className={tab === 0 ? 'active' : ''} onClick={() => setTab(0) || zeroState()}>Ваши посылки</span>\n                <span className={tab === 1 ? 'active' : ''} onClick={() => setTab(1) || zeroState()}>Ваши путешествия</span>\n            </div>\n\n            {\n                datalist.length > 0\n                ? <div className=\"history\" onScroll={e => ScrollHandler(e, isStopLoad, false, () => loadHistory(getType, getTypeOnRus, getPart))}>\n                    {datalist.map(d => <Item key={RandomKey()} data={d} isMy={true} changeItem={changeItem} removeItem={removeItem} />)}\n                </div>\n                : <div className=\"history\">Отсутствует</div>\n            }\n        </SHistory>\n\n    )\n}","import { useCallback, useEffect, useState } from \"react\";\n\nimport { GetDataByCrieteries } from \"utils/api\";\nimport Input from \"components/form-input/input\";\nimport Select from \"components/form-select/select\";\n\nexport default function PhoneField({ index, base, required }) {\n    const [codes, setCodes] = useState();\n\n    const getCodes = useCallback(async () => {\n        const res = await GetDataByCrieteries('countryCodes');\n        if (res.err && res?.err !== \"ok\") return setCodes(null);\n        return setCodes(res)\n    }, [])\n\n    useEffect(() => {\n        if (codes === undefined) return getCodes()\n    }, [getCodes, codes])\n\n\n    if (!codes) return null;\n    return (\n        <div>\n            <Input index={index} id=\"phone\" type=\"tel\" name=\"phone\" base={base} labelText=\"Телефон:\"\n                minLength=\"10\" maxLength=\"15\" placeholder=\"7777777777\" required={required}\n            />\n\n            <Select text=\"Код страны:\" name=\"countryCode\" required={required} options={{\n                data: codes,\n                value: \"code\",\n                makeText: ({code, country}) => `${code} (${country})`\n            }} />\n        </div>\n    )\n}","import { ShowAndHidePassword } from 'utils/effects';\nimport Input from '../form-input/input';\n\nimport styled from 'styled-components';\n\nconst SPasswordWrapper = styled.div`\n    display: flex;\n    align-items: baseline;\n    cursor: pointer;\n\n    & input {\n        margin: 0 1rem;\n        flex-grow: 1;\n    }\n\n    & i {\n        padding: 5px;\n        background: var(--offHoverBG);\n        border-radius: 5px;\n        box-shadow: 2px 2px 2px 0 #00000061;\n    }\n`;\n\nexport default function PasswordField({ index, id, required, hidden = false, labelText, placeholder, pass, passToggle }) {\n    return (\n        <SPasswordWrapper>\n            <Input index={index} id={id} type=\"password\" name=\"password\" base={pass.base} required={required}\n                minLength=\"8\" maxLength=\"30\" placeholder={placeholder} labelText={labelText} hidden={hidden}\n            />\n\n            {\n                !hidden &&\n                <i className=\"fa fa-eye fa-eye-slash\"\n                    aria-hidden=\"true\"\n                    title=\"show/hide password\"\n                    onClick={e => {\n                        ShowAndHidePassword(e, document.getElementById(id), passToggle);\n                    }}\n                ></i>\n            }\n        </SPasswordWrapper>\n    )\n}","import { useState } from \"react\";\n\nimport { USER } from \"constants/constants\";\nimport { SubmitFormData, useInput, useTogglePassword } from \"utils/form\";\nimport { UserOnline } from \"utils/user\";\nimport { Notify } from \"components/app-notification/notification\";\nimport PhoneField from \"components/phone-field/field\";\nimport SubmitBtn from \"components/submit-btn/submit\";\nimport Input from \"components/form-input/input\";\nimport PasswordField from \"components/password-field/password\";\n\nimport styled from \"styled-components\";\n\nlet afterStyles = [];\n\nconst SForms = styled.form `\n    padding: 2rem;\n`;\n\nexport default function EditProfile() {\n    const nickname = useInput('');\n    const phone = useInput('');\n    const pass = useInput('');\n    const passToggle = useTogglePassword()\n    const code = useInput('');\n    const [step, setStep] = useState(1);\n\n    const fields = [phone, nickname, pass, code]; // fields for reset\n\n    const onSuccessStep1 = (data) => {\n        Notify('success', \"Отправлено смс на номер \" + data?.login + \". Возьмите оттуда код подтверждения\")\n        setStep(2);\n    }\n    const onSuccessStep2 = () => {\n        UserOnline(USER.id)\n        Notify('success', `Вы успешно изменили ваши данные.`)\n    }\n    const onFail = err => Notify('fail', 'Ошибка регистрации:' + err);\n\n    return (\n        step === 1\n            ? <SForms action=\"/e/user/confirm\" onSubmit={async (e) => {\n                afterStyles = await SubmitFormData(e, afterStyles, fields, undefined, onSuccessStep1, onFail, false);\n            }}>\n                <h3>Смена данных(шаг 1). Введите только то, что хотите</h3>\n\n                <PhoneField index=\"0\" base={phone.base} required={false} />\n\n                <Input index=\"1\" id=\"nickname\" type=\"text\" name=\"nickname\" base={nickname.base} labelText=\"Имя(никнейм):\"\n                    minLength=\"3\" maxLength=\"20\" placeholder={USER.nickname} required={false}\n                />\n                <PasswordField index=\"2\" id=\"password\" name=\"password\" labelText=\"Пароль:\"\n                    placeholder=\"User1234\" pass={pass} passToggle={passToggle} required={false}\n                />\n\n                <SubmitBtn value=\"Отправить!\" />\n            </SForms>\n\n            : <SForms action=\"/e/user\" onSubmit={async (e) => {\n                afterStyles = await SubmitFormData(e, afterStyles, fields, undefined, onSuccessStep2, onFail);\n            }}>\n                <h3>Смена данных(шаг 2)</h3>\n\n                <input hidden type=\"tel\" name=\"phone\" {...phone.base} />\n                <input hidden type=\"text\" name=\"nickname\" {...nickname.base} />\n                <input hidden type=\"password\"  name=\"password\" {...pass.base} />\n        \n                <Input index=\"3\" id=\"code\" type=\"text\" name=\"code\" base={code.base} labelText=\"8-значный код:\"\n                    minLength=\"8\" maxLength=\"8\" placeholder=\"Mfa7sd45\"\n                />\n\n                <SubmitBtn value=\"Отправить!\" />\n            </SForms>\n    )\n}","import { useState } from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\n\nimport { USER } from 'constants/constants';\nimport { SignOut } from 'utils/user';\nimport { PopupOpen } from 'components/popup/popup';\n\nimport History from './history/history';\nimport EditProfile from './edit-profile/profile';\nimport styled from 'styled-components';\n\nconst SAside = styled.aside`\n    grid-area: aside;\n    position: fixed;\n    left: 100vw;\n    padding: 1rem;\n    width: 80vw;\n    height: 100vh;\n    background: #2b2b2be0;\n    transition: var(--transitionApp);\n    z-index: 10;\n    opacity: .9;\n\n    &.open {\n        transform: translate(-80vw);\n    }\n\n    & .open-btn {\n        position: absolute;\n        right: 100%;\n        top: 80%;\n        padding: 1rem;\n        border-radius: 5px;\n        font-size: 1.5rem;\n        color: white;\n        background:var(--blueColor);\n        z-index: 15;\n        cursor: pointer;\n    }\n`\n\nconst SUser = styled.div`\n    margin: 1rem;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    & > * {\n        display: flex;\n        align-items: center;\n    }\n`\n\nconst SLogo = styled.div`\n    margin: auto;\n    width: 10vw;\n    display: block;\n    overflow: hidden;\n    transition: var(--transitionApp);\n\n    &:hover {\n        filter: brightness(0.5);\n    }\n\n    & img {\n        height: 100%;\n        width: 100%;\n    }\n`\n\nconst SNickname = styled.div`\n    margin: .5rem;\n    padding: .5rem;\n    width: max-content;\n    max-width: 100%;\n    text-transform: uppercase;\n    font-weight: bold;\n    text-align: center;\n    word-break: break-all;\n    background: var(--onHoverColor);\n    border-radius: 5px;\n    transition: var(--transitionApp);\n`\n\nconst SLogout = styled(SNickname)`\n    color: var(--redColor);\n    cursor: pointer;\n\n    &:hover {\n        background: var(--redColor);\n        color: var(--onHoverColor);\n    }\n`\n\nconst SEdit = styled(SNickname)`\n    cursor: pointer;\n\n    &:hover {\n        background: var(--redColor);\n        color: var(--onHoverColor);\n    }\n`;\n\nexport default function Aside() {\n    const [isOpened, setOpened] = useState(false);\n    const history = useHistory();\n\n    return (\n        <SAside className={isOpened ? \"open\" : \"\"}>\n            {/* aside open/close btn */}\n            <div className=\"open-btn\" onClick={() => setOpened(!isOpened)}>\n                <i className=\"fa fa-bars\" aria-hidden=\"true\"></i>\n            </div>\n\n            {\n                isOpened &&\n                <>\n                    <SLogo as={NavLink} to=\"/\" >\n                        <img src=\"/assets/app/logo192.png\" alt=\"logo\" />\n                    </SLogo>\n\n                    <SUser>\n                        {\n                            USER.status === \"online\"\n                                ? <div>\n                                    <SNickname>\n                                        <i className=\"fa fa-user\" aria-hidden=\"true\"></i>\n                                        {USER.nickname} ({USER.phoneNumber})\n                                    </SNickname>\n                                    <SEdit onClick={()=>PopupOpen(EditProfile, {})}>\n                                        <i className=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                                    </SEdit>\n                                </div>\n                                : <SNickname>Здесь будет ваше имя</SNickname>\n                        }\n\n                        {\n                            USER.status === \"online\"\n                                ? <SLogout onClick={() => SignOut(history)}>\n                                    <i className=\"fa fa-sign-out\" aria-hidden=\"true\"></i>\n                                    Выход\n                                </SLogout>\n                                : <SLogout onClick={() => history.push(\"/sign\")}>\n                                    <i className=\"fa fa-sign-in\" aria-hidden=\"true\"></i>\n                                    Войти\n                                </SLogout>\n                        }\n                    </SUser>\n\n                    {\n                        USER.status === \"online\" && <History />\n                    }\n                </>\n            }\n        </SAside>\n    )\n}","import { NavLink } from 'react-router-dom';\n\nimport styled from 'styled-components';\n\nconst SHeader = styled.header`\n    grid-area: header;\n    position: fixed;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    padding: 1rem;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    background: var(--blueColor);\n    z-index: 5;\n`;\n\nconst SNavLink = styled(NavLink)`\n    margin: 0.5rem 0;\n    padding: 0.5rem;\n    flex-basis: 20%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border: 1px solid #231E2F;\n    border-radius: 5px;\n    color: var(--onHoverColor);\n    text-shadow: 1px 1px 5px black;\n    text-decoration: none;\n    text-transform: uppercase;\n    transition: var(--transitionApp);\n\n    &.active,\n    &:hover {\n        background: var(--onHoverColor);\n    }\n`\n\n// Generate navlink\nconst GNavLink = ({isExact, to, linkText}) => {\n    return (\n        <SNavLink exact={isExact} activeClassName=\"active\" to={to}>\n            <span className=\"nav-link-text\">{linkText}</span>\n        </SNavLink>\n    )\n}\n\nexport default function Header() {\n    return (\n        <SHeader>\n            <GNavLink isExact={true} to=\"/parsel\"       linkText=\"Отправит посылку\" />\n            <GNavLink isExact={true} to=\"/parsels\"      linkText=\"Лента посылок\" />\n            <GNavLink isExact={true} to=\"/traveler\"     linkText=\"Я попутчик\" />\n            <GNavLink isExact={true} to=\"/travelers\"    linkText=\"Лента попутчиков\" />\n        </SHeader>\n    )\n}","import { useState } from 'react';\nimport { useHistory } from 'react-router';\n\nimport { SubmitFormData, useInput } from 'utils/form';\nimport { Notify } from 'components/app-notification/notification';\nimport Input from 'components/form-input/input';\nimport SubmitBtn from 'components/submit-btn/submit';\nimport PhoneField from 'components/phone-field/field';\n\nlet afterStyles = []; // form handle all ::after notifications\n\nexport default function SignUp() {\n    const nickname = useInput('');\n    const phone = useInput('');\n    const code = useInput('');\n    const [step, setStep] = useState(1);\n    const history = useHistory();\n\n    const fields = [phone, nickname, code]; // fields for reset\n\n    const onSuccessStep1 = () => {\n        Notify('success', \"Отправлено смс на номер \" + phone.base.value + \". Возьмите оттуда код подтверждения\")\n        setStep(2);\n    }\n    const onSuccessStep2 = data => {\n        Notify('success', `Вы успешно зарегистрированы. Ваш логин: \"${data?.login}\" и временный пароль:\"${data?.password}\"`, false)\n        history.push(\"/parsel\")\n    }\n    const onFail = err => Notify('fail', 'Ошибка регистрации:' + err);\n\n    return (\n        step === 1\n            ? <form action=\"/sign/sms/up\" onSubmit={async (e) => {\n                afterStyles = await SubmitFormData(e, afterStyles, fields, undefined, onSuccessStep1, onFail, false);\n            }}>\n                <h3>Регистрация(шаг 1)</h3>\n\n                <PhoneField index=\"0\" base={phone.base} />\n\n                <SubmitBtn value=\"Отправить!\" />\n            </form>\n\n            : <form action=\"/sign/up\" onSubmit={async (e) => {\n                afterStyles = await SubmitFormData(e, afterStyles, fields, undefined, onSuccessStep2, onFail);\n            }}>\n                <h3>Регистрация(шаг 2)</h3>\n\n                <Input index=\"1\" id=\"nickname\" type=\"text\" name=\"nickname\" base={nickname.base} labelText=\"Имя(никнейм):\"\n                    minLength=\"3\" maxLength=\"20\" placeholder=\"Miron\"\n                />\n                <Input index=\"2\" id=\"code\" type=\"text\" name=\"code\" base={code.base} labelText=\"8-значный код:\"\n                    minLength=\"8\" maxLength=\"8\" placeholder=\"Mfa7sd45\"\n                />\n                <SubmitBtn value=\"Отправить!\" />\n            </form>\n    )\n}\n","import { useHistory } from 'react-router';\n\nimport { SubmitFormData, useInput, useTogglePassword } from 'utils/form';\nimport { UserOnline } from 'utils/user';\nimport { Notify } from 'components/app-notification/notification';\nimport Input from 'components/form-input/input';\nimport PasswordField from 'components/password-field/password';\nimport SubmitBtn from 'components/submit-btn/submit';\n\nlet afterStyles = []; // form handle all ::after notifications\n\nexport default function SignIn() {\n    const login = useInput();\n    const pass = useInput();\n    const passToggle = useTogglePassword();\n    const fields = [login, pass];\n    const history = useHistory()\n\n    // custom validation\n    const customValidation = () =>\n        (!(/[a-z]+/g.test(pass.base.value) && /[A-Z]+/g.test(pass.base.value) && /[0-9]+/g.test(pass.base.value))) ? [1] : [];\n\n    const onSuccess = async (data) => {\n        const isOnline = await UserOnline(data.id);\n        if (isOnline) {\n            Notify('success', \"Вход произведен\");\n            history.push('/parsel');\n        } else Notify('fail', \"Ошибка входа\")\n    }\n    const onFail = err => Notify('fail', \"Ошибка входа:\" + err);\n\n    return (\n        <form action=\"/sign/in\" onSubmit={async (e) => {\n            afterStyles = await SubmitFormData(e, afterStyles, fields, customValidation, onSuccess, onFail);\n        }}>\n            <h3>Вход</h3>\n\n            <Input index=\"0\" id=\"login\" name=\"phone\" type=\"tel\" base={login.base} labelText=\"Логин:\"\n                minLength=\"11\" maxLength=\"15\" placeholder=\"87777777777\"\n            />\n            <PasswordField index=\"1\" id=\"password\" name=\"password\" labelText=\"Пароль:\"\n                placeholder=\"User1234\" pass={pass} passToggle={passToggle}\n            />\n\n            <SubmitBtn value=\"Отправить!\" />\n        </form>\n    )\n}","import { useState } from 'react';\nimport { useHistory } from 'react-router';\n\nimport { SubmitFormData, useInput, useTogglePassword } from 'utils/form';\nimport { Notify } from 'components/app-notification/notification';\nimport Input from 'components/form-input/input';\nimport SubmitBtn from 'components/submit-btn/submit';\nimport PasswordField from 'components/password-field/password';\nimport PhoneField from 'components/phone-field/field';\n\nlet afterStyles = []; // form handle all ::after notifications\n\nexport default function Restore() {\n    const phone = useInput();\n    const code = useInput('');\n    const pass = useInput('');\n    const passToggle = useTogglePassword()\n    const [step, setStep] = useState(1);\n    const history = useHistory();\n    const fields = [phone, pass, code]; // fields for reset\n\n    const onSuccessStep1 = () => {\n        Notify('success', \"Отправлено смс на номер \" + phone.base.value + \". Возьмите оттуда код подтверждения\");\n        setStep(2);\n    }\n    const onSuccessStep2 = () => {\n        Notify('success', \"Пароль успешно изменен.\");\n        history.push(\"/parsel\")\n    }\n    const onFail = err => Notify('fail', 'Ошибка восстановления:' + err);\n\n    return step === 1\n        ? <form action=\"/sign/sms/ch\" onSubmit={async (e) => {\n            afterStyles = await SubmitFormData(e, afterStyles, fields, undefined, onSuccessStep1, onFail, false);\n        }}>\n            <h3>Восстановление пароля(шаг 1)</h3>\n\n            <PhoneField index=\"0\" base={phone.base} />\n\n            <SubmitBtn value=\"Отправить!\" />\n        </form>\n\n        : <form action=\"/sign/re\" onSubmit={async (e) => {\n            afterStyles = await SubmitFormData(e, afterStyles, fields, undefined, onSuccessStep2, onFail);\n        }}>\n            <h3>Восстановление пароля(шаг 2)</h3>\n\n            <PasswordField index=\"1\" id=\"password\" name=\"password\" labelText=\"Новый пароль:\"\n                placeholder=\"User1234\" pass={pass} passToggle={passToggle}\n            />\n\n            <Input index=\"2\" id=\"code\" type=\"text\" name=\"code\" base={code.base} labelText=\"8-значный код:\"\n                minLength=\"8\" maxLength=\"8\" placeholder=\"Mfa7sd45\"\n            />\n            <SubmitBtn value=\"Отправить!\" />\n        </form>\n}","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { USER } from 'constants/constants';\nimport { RandomKey } from 'utils/content';\n\nimport SignUp from './up/up';\nimport SignIn from './in/in';\nimport ResetPassword from './reset/reset';\nimport styled from 'styled-components';\n\nconst SSign = styled.section`\n    height: 100%;\n    margin-bottom: 1rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    align-items: center;\n\n    & .logo {\n        max-width: 40vw;\n        max-height: 40vh;\n\n        & img {\n            width: 100%;\n            height: 100%;\n        }\n    }\n\n    & .main-action {\n        min-width: 60vw;\n        padding: 2rem;\n        border-radius: 10px;\n        background: #fdfdfd;\n        box-shadow: var(--boxShadow);\n    }\n\n    & .other-actions {\n        display: flex;\n        flex-direction: column;\n\n        & span {\n            margin: .5rem;\n            padding: .5rem;\n            border-radius: 5px;\n            cursor: pointer;\n            transition: var(--transitionApp);\n\n            &:hover {\n                background: var(--onHoverBG);\n                color:  var(--onHoverColor);\n            }\n        }\n    }\n`;\n\nconst GSignAction = ({ action, setAction }) => {\n    let mainAction;\n    let otherActions = []\n    if (action === \"up\") {\n        mainAction = <SignUp />;\n        otherActions = [<GInAction key={RandomKey()} setAction={setAction} />, <GResetAction key={RandomKey()} setAction={setAction} />];\n    } else if (action === \"reset\") {\n        mainAction = <ResetPassword />;\n        otherActions = [<GUpAction key={RandomKey()} setAction={setAction} />, <GInAction key={RandomKey()} setAction={setAction} />];\n    } else {\n        mainAction = <SignIn />;\n        otherActions = [<GUpAction key={RandomKey()} setAction={setAction} />, <GResetAction key={RandomKey()} setAction={setAction} />];\n    }\n    return (\n        <>\n            <div className=\"main-action\">{mainAction}</div>\n            <div className=\"other-actions\">\n                {otherActions}\n            </div>\n        </>\n    )\n}\n\nconst GInAction = ({ setAction }) => <span onClick={() => setAction(\"in\")}>Войти</span>\nconst GUpAction = ({ setAction }) => <span onClick={() => setAction(\"up\")}>Нет аккаунта? Зарегистроваться</span>\nconst GResetAction = ({ setAction }) => <span onClick={() => setAction(\"reset\")}>Забыли пароль?</span>\n\nexport default function Sign() {\n    const [action, setAction] = useState(\"in\");\n\n    return (\n        <SSign>\n            <div className=\"logo\">\n                <img src=\"/assets/app/logo512.png\" alt=\"logo\" />\n            </div>\n\n            <GSignAction action={action} setAction={setAction} />\n\n            <Link to=\"/\" onClick={()=>USER.guest = true}>Войти как гость</Link>\n\n            <Link download={true} to=\"/assets/rights/name.txt\">Пользовательское соглашение</Link>\n        </SSign>\n    )\n}","import { Link } from \"react-router-dom\"\n\nimport styled from \"styled-components\"\n\nconst S404 = styled.section`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n\n    & h2 {\n        font-size: 10rem;\n        color: var(--redColor);\n    }\n\n    & h3 {\n        font-size: 5rem;\n        color: var(--darkRedColor);\n    }\n\n    & a {\n        padding: 1rem;\n        border-radius: 5px;\n    }\n`;\n\nexport default function Page404() {\n    return (\n        <S404>\n            <h2>404</h2>\n            <h3>Not found</h3>\n\n            <Link to=\"/parsel\">Go home</Link>\n        </S404>\n    )\n}","import { USER } from \"constants/constants\"\nimport ManageParsel from \"components/parsel/manage/manage\";\n\nimport styled from \"styled-components\";\n\nconst SParsel = styled.section`\n    padding: 1rem;\n    margin: 1rem;\n\n    & .parsel_create_tip {\n        padding: 1rem;\n        margin: 1rem;\n        border-radius: 10px;\n        text-align: center;\n        background: #f5f000;\n    }\n`;\n\nconst SParselGuest = styled.section`\n    padding: 1rem;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport default function ParselPage() {\n    if (USER.status !== \"online\" || USER.guest) return <SParselGuest>Войдите, чтобы создать посылки</SParselGuest>\n    return (\n        <SParsel>\n            <div className=\"parsel_create_tip\">\n                Заполните данные, и ваша посылка попадет в ленту посылок, оттуда люди могут увидеть и забрать Вашу посылку\n            </div>\n\n            <ManageParsel failText=\"Не удалось создать посылку\" successText=\"Создана посылка\" />\n        </SParsel>\n    )\n}","import { useCallback } from \"react\";\n\nimport { GetValueFromListByIDAndInputValue, OnChangeTransitPoint, ScrollHandler } from \"utils/effects\";\nimport { useInput } from \"utils/form\";\nimport { RandomKey, ValidateParselTravelerSearch } from \"utils/content\";\nimport { useFromTo } from \"utils/hooks\";\nimport Input from \"components/form-input/input\";\nimport Parsel from \"components/parsel/parsel\";\n\nimport styled from \"styled-components\";\n\nconst SParsels = styled.section`\n    & .filters {\n        display: flex;\n        flex-wrap: wrap;\n        align-items: center;\n        justify-content: space-evenly;\n        padding: 1rem;\n        background: var(--blueColor);\n\n        & * {\n            color: var(--onHoverColor);\n        }\n\n        & .search_btn {\n            padding: .5rem 1rem;\n            background: var(--darkGreyColor);\n            border-radius: 10px;\n            cursor: pointer;\n            box-shadow: var(--boxShadow);\n            transition: var(--transitionApp);\n\n            &:hover {\n                background: var(--onHoverBG);\n            }\n        }\n    }\n\n    @media screen and (max-width: 600px) {\n        & .filters {\n            justify-content: start;\n        }\n    }\n`;\n\n\nexport default function ParselsPage() {\n    const from = useInput('');\n    const to = useInput('');\n    const fromID = useInput('');\n    const toID = useInput('');\n    const startDT = useInput('');\n    const endDT = useInput('');\n\n    from.base.onChange = e => OnChangeTransitPoint(from, e, fromID.setCertainValue);\n    to.base.onChange = e => OnChangeTransitPoint(to, e, toID.setCertainValue);\n\n    const { datalist, isStopLoad, getPart } = useFromTo([], 5);\n\n    const loadParsels = useCallback((clear = false) => {\n        const params = ValidateParselTravelerSearch(\n            GetValueFromListByIDAndInputValue(\"from-list\", from.base.value), GetValueFromListByIDAndInputValue(\"to-list\", to.base.value),\n            Date.parse(startDT.base.value), Date.parse(endDT.base.value)\n        )\n        if (!params) return;\n        getPart(\"parsels\", params, 'Не удалось загрузить посылки', true, clear === true ? true : false)\n    }, [from, to, startDT, endDT, getPart])\n\n    // set scroll handler\n    document.body.onscroll = e => ScrollHandler(e, isStopLoad, false, loadParsels, \"parsel\");\n\n    return (\n        <SParsels>\n            <div className=\"filters\">\n                <Input id=\"from\" type=\"text\" name=\"from\" list=\"from-list\" base={from.base} labelText=\"Откуда\" />\n                <datalist id=\"from-list\"></datalist>\n\n                <Input id=\"to\" type=\"text\" name=\"to\" list=\"to-list\" base={to.base} labelText=\"Куда\" />\n                <datalist id=\"to-list\"></datalist>\n\n                <Input type=\"date\" name=\"startDT\" base={startDT.base} required={false} labelText=\"С:\" />\n                <Input type=\"date\" name=\"endDT\" base={endDT.base} required={false} labelText=\"До:\" />\n\n                <span className=\"search_btn\" onClick={() => loadParsels(true)}>\n                    <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\n                </span>\n            </div>\n\n            {\n                datalist &&\n                <div className=\"parsels\">\n                    {datalist?.map(p => <Parsel key={RandomKey()} data={p} />)}\n                </div>\n            }\n        </SParsels>\n    )\n}","import { USER } from \"constants/constants\"\nimport ManageTraveler from \"components/traveler/manage/manage\";\n\nimport styled from \"styled-components\";\n\nconst STravel = styled.section`\n    padding: 1rem;\n    margin: 1rem;\n\n    & .travel_create_tip {\n        padding: 1rem;\n        margin: 1rem;\n        border-radius: 10px;\n        text-align: center;\n        background: #f5f000;\n    }\n`;\n\nconst STravelGuest = styled.section`\n    padding: 1rem;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport default function TravelerPage() {\n    if (USER.status !== \"online\" || USER.guest) return <STravelGuest>Войдите, чтобы стать попутчиком</STravelGuest>\n    return (\n        <STravel>\n            <div className=\"travel_create_tip\">\n                Заполните данные, и Ваша заявка попадет в ленту попутчиков, оттуда Вас заметят люди, которые хотят отправить посылку, а Вы заработаете\n            </div>\n\n            <ManageTraveler failText=\"Не удалось создать объявление попутчика\" successText=\"Объявление попутчика создан\" />\n        </STravel>\n    )\n}","import { useCallback } from \"react\";\n\nimport { GetValueFromListByIDAndInputValue, OnChangeTransitPoint, ScrollHandler } from \"utils/effects\";\nimport { useInput } from \"utils/form\";\nimport { RandomKey, ValidateParselTravelerSearch } from \"utils/content\";\nimport { useFromTo } from \"utils/hooks\";\nimport Input from \"components/form-input/input\";\nimport Traveler from \"components/traveler/traveler\";\n\nimport styled from \"styled-components\";\n\nconst STravelers = styled.section`\n    & .filters {\n        display: flex;\n        flex-wrap: wrap;\n        align-items: center;\n        justify-content: space-evenly;\n        padding: 1rem;\n        background: var(--blueColor);\n\n        & * {\n            color: var(--onHoverColor);\n        }\n\n        & .search_btn {\n            padding: .5rem 1rem;\n            background: var(--darkGreyColor);\n            border-radius: 10px;\n            cursor: pointer;\n            box-shadow: var(--boxShadow);\n            transition: var(--transitionApp);\n\n            &:hover {\n                background: var(--onHoverBG);\n            }\n        }\n    }\n\n    @media screen and (max-width: 600px) {\n        & .filters {\n            justify-content: start;\n        }\n    }\n`;\n\nexport default function TravelersPage() {\n    const from = useInput('');\n    const to = useInput('');\n    const fromID = useInput('');\n    const toID = useInput('');\n    const departure = useInput('');\n    const arrival = useInput('');\n\n    from.base.onChange = e => OnChangeTransitPoint(from, e, fromID.setCertainValue);\n    to.base.onChange = e => OnChangeTransitPoint(to, e, toID.setCertainValue);\n\n    const { datalist, isStopLoad, getPart } = useFromTo()\n\n    const loadTravelers = useCallback((clear = false) => {\n        const params = ValidateParselTravelerSearch(\n            GetValueFromListByIDAndInputValue(\"from-list\", from.base.value), GetValueFromListByIDAndInputValue(\"to-list\", to.base.value),\n            Date.parse(departure.base.value), Date.parse(arrival.base.value)\n        )\n        if (!params) return;\n        getPart(\"travelers\", params, 'Не удалось загрузить попутчиков', true, clear === true ? true : false)\n    }, [from, to, departure, arrival, getPart])\n\n    // set scroll handler\n    document.body.onscroll = e => ScrollHandler(e, isStopLoad, false, loadTravelers, \"traveler\");\n\n    return (\n        <STravelers>\n            <div className=\"filters\">\n                <Input id=\"from\" type=\"text\" name=\"from\" list=\"from-list\" base={from.base} labelText=\"Откуда\" />\n                <datalist id=\"from-list\"></datalist>\n\n                <Input id=\"to\" type=\"text\" name=\"to\" list=\"to-list\" base={to.base} labelText=\"Куда\" />\n                <datalist id=\"to-list\"></datalist>\n\n                <Input type=\"date\" name=\"departure\" base={departure.base} labelText=\"Выезд:\" />\n                <Input type=\"date\" name=\"arrival\" base={arrival.base} labelText=\"Прибытие:\" />\n\n                <span className=\"search_btn\" onClick={() => loadTravelers(true)}>\n                    <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\n                </span>\n            </div>\n\n            {\n                datalist &&\n                <div className=\"travelers\">\n                    {datalist?.map(p => <Traveler key={RandomKey()} data={p} />)}\n                </div>\n            }\n        </STravelers>\n    )\n}","import { useHistory } from 'react-router';\nimport { Switch, Route } from 'react-router-dom';\n\nimport { RandomKey } from 'utils/content';\nimport SignPage from 'routes/sign/sign';\nimport Page404 from 'routes/404/404';\nimport ParselPage from 'routes/parsel/parsel';\nimport ParselsPage from 'routes/parsels/parsels';\nimport TravelerPage from 'routes/traveler/traveler';\nimport TravelersPage from 'routes/travelers/travelers';\nimport Popup from 'components/popup/popup';\nimport AppNotifications from 'components/app-notification/notification';\n\nimport styled from 'styled-components';\n\nconst SMain = styled.main`\n    grid-area: main;\n    background: var(--greyColor);\n`;\n\n// app's routes\nconst ROUTES = [{\n    href: \"/sign\",\n    isExact: false,\n    component: SignPage,\n}, {\n    href: \"/parsel\",\n    isExact: true,\n    component: ParselPage,\n},{\n    href: \"/parsels\",\n    isExact: true,\n    component: ParselsPage,\n},{\n    href: \"/traveler\",\n    isExact: true,\n    component: TravelerPage,\n}, {\n    href: \"/travelers\",\n    isExact: true,\n    component: TravelersPage,\n}]\n\nexport default function DefineRoutes() {\n    const history = useHistory();\n\n    if (history.location.pathname === \"/\") return history.push(\"/parsel\")\n    return (\n        <SMain>\n            <Switch>\n                {\n                    ROUTES.map(\n                        ({ href, component, isExact }) => <Route key={RandomKey()} exact={isExact} path={href} component={component} />\n                    )\n                }\n                <Route component={Page404} />\n            </Switch>\n\n            {/* popups */}\n            <Popup />\n            <AppNotifications />\n        </SMain>\n    )\n}","import { useEffect } from 'react';\nimport { useHistory } from 'react-router';\n\nimport { USER } from 'constants/constants';\nimport { IS_SIGN } from 'utils/content';\nimport Aside from 'components/aside/aside';\nimport Header from 'components/header/header';\nimport Main from 'components/routes/routes';\n\nimport './App.css';\nimport styled from 'styled-components';\n\nconst SApp = styled.div`\n  \tdisplay: grid;\n    grid-template-areas: ${props => props.isSign ? \"'main'\" : '\"main aside\" \"header aside\"'};\n    grid-template-rows: ${props => props.isSign ? \"1fr\" : '1fr 7vh'};\n    grid-template-columns: ${props => props.isSign ? '1fr' : '1fr 0fr'};\n    min-height: 100vh;\n\n\t@media screen and (max-width: 600px) {\n\t\t& {\n\t\t\tgrid-template-areas: '\"main aside\" \"header aside\"';\n\t\t\tgrid-template-columns: 1fr;\n\t\t\tgrid-template-rows: 1fr 0fr;\n\t\t}\n\t}\n`;\n\nexport default function App() {\n    const isSign = IS_SIGN();\n    const history = useHistory();\n\n    useEffect(() => {\n        if (USER.status === \"online\") return isSign && history.push(\"/parsel\")\n        if (!USER.guest) return history.push('/sign');\n    }, [history, isSign]);\n\n    return (\n        <SApp isSign={isSign}>\n            {\n                isSign\n                    ? null\n                    : <>\n                        <Aside />\n                        <Header />\n                    </>\n            }\n\n            <Main />\n        </SApp>\n    )\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport { IsLogged, UserOnline } from 'utils/user';\nimport App from './App'\n\nimport reportWebVitals from './reportWebVitals';\n\nconst check = async () => {\n  const id = await IsLogged();\n  if (id) return await UserOnline(id);\n}\n\nconst init = async () => {\n  await check();\n  ReactDOM.render(\n    <React.StrictMode >\n      <Router >\n        <App />\n      </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\ninit();\n\nreportWebVitals();\n"],"sourceRoot":""}
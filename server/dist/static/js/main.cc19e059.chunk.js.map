{"version":3,"sources":["components/app-notification/notification.jsx","constants/constants.js","utils/api.js","utils/content.jsx","utils/user.js","components/aside/aside.jsx","components/header/header.jsx","utils/form.js","components/form-input/input.jsx","components/submit-btn/submit.jsx","components/phone-field/field.jsx","routes/sign/up/up.jsx","utils/effects.js","components/password-field/password.jsx","routes/sign/in/in.jsx","routes/sign/reset/reset.jsx","routes/sign/sign.jsx","routes/404/404.jsx","components/popup/popup.jsx","components/routes/routes.jsx","routes/home/home.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["interID","USER","id","phone","nickname","status","guest","formDataToString","data","FormData","res","entries","k","v","slice","Fetching","action","a","method","undefined","err","fetchOption","encodeURI","fetch","then","json","catch","Object","assign","prepareDataToFetch","datas","append","GetDataByCrieteries","datatype","criteries","POSTRequestWithParams","to","params","IS_SIGN","decodeURI","useLocation","pathname","split","includes","RandomKey","Math","round","random","SAppNotifications","styled","div","SAppNotification","SCloseNotification","add","removeNotification","Notify","type","content","isAutoClose","length","setInterval","clearInterval","Notification","setTimeout","noteContent","Function","className","onClick","Notifications","useState","ntfs","setNTFS","filter","item","props","key","IsLogged","changeUserData","Date","now","toString","UserOnline","UserOffline","SignOut","history","push","SAside","aside","SAsideTop","SLogo","SNickname","SLogout","SNavs","nav","SNavLink","NavLink","GNavLink","isExact","linkText","exact","activeClassName","Aside","isOpened","setOpened","useHistory","as","src","alt","SHeader","header","Header","useInput","initValue","value","setValue","handleChange","e","target","resetField","setCertainValue","base","onChange","useTogglePassword","initState","state","changeType","toggleType","BaseFormValidation","resIndexs","i","values","test","NotifyInvalidField","selector","field","afterStyle","document","createElement","innerHTML","head","appendChild","ResetForm","fields","forEach","ClearAllNotifications","afterStyles","AS","remove","setNotificationIfExist","BIndexs","CIndexs","index","SubmitFormData","customValidation","onSuccess","onFail","isReset","preventDefault","form","getAttribute","SFormField","SFormInputWrapper","SFormInputLabel","label","SFormInput","input","SFormInputNotification","Label","required","labelText","htmlFor","Input","name","minLength","maxLength","min","max","disabled","placeholder","SSubmitBtn","SubmitBtn","SLalel","PhoneField","codes","setCodes","getCodes","useCallback","useEffect","map","code","country","SignUp","step","setStep","onSuccessStep1","onSuccessStep2","password","onSubmit","fn","ms","timeOut","Debounce","isStopLoad","isScrollingToTop","loadCallback","parent","pRec","getBoundingClientRect","scrollTop","scrollHeight","height","priorEdgeChildNum","childElementCount","el","childNodes","scrollIntoView","behavior","SPasswordWrapper","PasswordField","pass","passToggle","title","passElem","passwordToggle","elem","classList","toggle","setAttribute","ShowAndHidePassword","getElementById","SignIn","login","Restore","SSign","GSignAction","mainAction","setAction","otherActions","GInAction","GUpAction","GResetAction","S404","section","Page404","SDisplayFlexCenter","css","SPopup","SPopupClose","SContentWrapper","close","closeCB","Popup","popup","setPopup","setOpenedState","Component","componentArgs","SMain","main","ROUTES","href","component","download","DefineRoutes","path","SApp","isSign","App","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","check","ReactDOM","render","StrictMode","init"],"mappings":"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","file":"static/js/main.cc19e059.chunk.js","sourcesContent":["import { useState } from 'react';\n\nimport { RandomKey } from 'utils/content';\n\nimport styled from 'styled-components';\n\nconst SAppNotifications = styled.div`\n    position: fixed;\n    right: 0;\n    bottom: 0;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n    z-index: 20;\n`\n\nconst SAppNotification = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: max-content;\n    max-width: 50vw;\n    margin: .5rem;\n    padding: 1rem;\n    color: white;\n    border-radius: 5px;\n    background: #002358;\n`;\n\nconst SCloseNotification = styled.div`\n    padding: 5px;\n    margin-left: 10px;\n    height: 1.5rem;\n    width: 1.5rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: var(--redColor);\n    background: var(--darkRedColor);\n    border-radius: 50%;\n    cursor: pointer;\n`;\n\nlet add = () => {};\nlet removeNotification = id => {};\nlet interID;\n\nexport const Notify = (type, content, isAutoClose) => {\n    if (add.length !== 0) return add(type, content, isAutoClose);\n    interID = setInterval(() => {\n        if (add.length !== 0) {\n            clearInterval(interID);\n            add(type, content, isAutoClose);\n        }\n    }, 0);\n}\n\nconst Notification = ({ id = 0, type = \"fail\", content, isAutoClose = true }) => {\n    if (!content) return null;\n    if (isAutoClose) setTimeout(() => removeNotification(id), 5000);\n\n    let noteContent = content\n    if (content instanceof Function) noteContent = content(); \n\n    return (\n        <SAppNotification>\n            <div className=\"notification-content\">{noteContent}</div>\n            <SCloseNotification onClick={()=>removeNotification(id)}>\n                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n            </SCloseNotification>\n        </SAppNotification>\n    )\n}\n\nexport default function Notifications() {\n    const [ntfs, setNTFS] = useState([]);\n\n    removeNotification = id => setNTFS(ntfs.filter(item => item.props.id !== id));\n    add = (type, content, isAutoClose)  => {\n        const key = RandomKey();\n        setNTFS([...ntfs, <Notification key={key} id={key} type={type} content={content} isAutoClose={isAutoClose} />]);\n    }\n\n    return <SAppNotifications>{ntfs}</SAppNotifications>;\n}","// current user data\nexport const USER = {\n    id: -1,\n    phone: '',\n    nickname: 'nickname',\n    status: '',\n    guest: false,\n};","const formDataToString = (data = new FormData()) => {\n    let res = \"\";\n    for (let [k, v] of data.entries())\n        res += k + \"=\" + v + \"&\"\n    return res.slice(0, -1)\n}\n\n// use fetching by both method\nexport const Fetching = async(action, data, method = \"POST\") => {\n    if (action === undefined) return { err: \"action undefined\" };\n\n    const fetchOption = { 'method': method, 'mode': 'cors', 'credentials': 'include' };\n    if (method === \"GET\") action += \"?\" + encodeURI(formDataToString(data));\n    else fetchOption[\"body\"] = data;\n\n    return await fetch(action, fetchOption)\n        .then(res => res.json())\n        .catch(err => Object.assign({}, { 'err': \"500: \" + err }));\n}\n\n// convert from object to FormData\nconst prepareDataToFetch = (datas = {}) => {\n    const data = new FormData();\n    for (let [k, v] of Object.entries(datas)) data.append(k, v);\n    return data;\n}\n\n// get data by criteries & type\nexport const GetDataByCrieteries = async(datatype, criteries = {}) => {\n    const data = prepareDataToFetch(criteries);\n    const res = await Fetching(\"/api/\" + datatype, data, 'GET');\n    if (res.err !== 'ok') return { 'err': res.err }\n    return res.data;\n}\n\n// send post req to host with params\nexport const POSTRequestWithParams = async(to, params = {}) => {\n    const data = prepareDataToFetch(params);\n    return await Fetching(to, data);\n}","import { useLocation } from \"react-router\";\n\nexport const GET_CUR_PATHNAME = () => decodeURI(useLocation().pathname);\nexport const IS_SIGN = () => GET_CUR_PATHNAME().split('/').includes(\"sign\");\n\n// return two digit string\nexport const IsTwoDigit = data => parseInt(data) < 10 ? \"0\".concat(data) : data;\n\n// generate date(15/12/2020 09:09) from milliseconds\nexport const DateFromMilliseconds = milliseconds => {\n    const datetime = new Date(parseInt(milliseconds));\n    return [IsTwoDigit(datetime.getDate()), IsTwoDigit(datetime.getMonth() + 1), datetime.getFullYear()].join('/') +\n        \" \" +\n        [IsTwoDigit(datetime.getHours()), IsTwoDigit(datetime.getMinutes())].join(':');\n}\n\n// calculate time after thing created\nexport const CalculateRelativeDatetime = (datetime = Date.now().toString()) => {\n    const now = Date.now();\n    const given = parseInt(datetime);\n\n    const delims = [[60, \"мин.\"], [60, \"ч.\"], [24, \"д.\"], [7, 30, \"нед.\"], [30, 365, \"мес.\"], [365, \"лет\"]]\n    const isPast = (now - given) > 0 ? true : false;\n    let diff = Math.abs(now - given) / 1000;\n    let diffType = \"секунд\";\n\n    const returnDate = () => {\n        diff = Math.floor(diff);\n\n        if (!isPast) return [\"через\", IsTwoDigit(diff), diffType].join(' ');\n\n        const isToday = Math.abs(now - given) < 86400000;\n        return [isToday ? 'сегодня' : '', IsTwoDigit(diff), diffType, \"назад\"].join(' ');\n    }\n\n    // calculate difference\n    for (let i = 0; i < delims.length; i++) {\n        const cur_del = delims[i]\n        if (cur_del.length === 2) {\n            if (diff > cur_del[0]) {\n                diff /= cur_del[0];\n                diffType = cur_del[1];\n                continue\n            }\n            break\n        }\n        if (cur_del[0] < diff && diff < cur_del[1]) {\n            diff /= cur_del[0];\n            diffType = cur_del[2];\n            continue\n        }\n        break\n    }\n    return returnDate();\n}\n\nexport const RandomKey = () => Math.round(Math.random() * Math.random() * 100000000);","import { USER } from 'constants/constants';\nimport { GetDataByCrieteries, POSTRequestWithParams } from './api';\nimport { Notify } from 'components/app-notification/notification';\n\nexport const IsLogged = async() => {\n    const res = await POSTRequestWithParams('/sign/status');\n    if (res.err !== 'ok') {\n        Notify('fail', res.err);\n        return false;\n    }\n    return res.data.id;\n}\n\n// change USER const\nconst changeUserData = async(id) => {\n    if (id !== undefined) {\n        const res = (await GetDataByCrieteries('user', { id: id }));\n        if (res.err && res.err !== \"ok\") {\n            return Notify('fail', \"Ошибка входа в аккаунт. Не верные данные\")\n        }\n        for (let [k, v] of Object.entries(res[0])) USER[k] = v;\n        USER.status = 'online';\n        return true;\n    } else {\n        for (let k in USER) USER[k] = '';\n        USER.status = Date.now().toString();\n        USER.nickname = \"nickname\";\n        return true;\n    }\n}\n\n// Switch to online\nexport const UserOnline = async(id) => await changeUserData(id);;\n\n// Switch to offline\nexport const UserOffline = async() => await changeUserData();\n\n// send to server signal about sign out\nexport const SignOut = async(history) => {\n    Notify('info', \"Производится выход...\");\n    const res = await POSTRequestWithParams(\"/sign/out\");\n    if (res.err !== \"ok\") return false;\n    const isSignOuted = await UserOffline();\n    if (!isSignOuted) return;\n    history.push('/sign/in');\n    Notify('success', \"Выход произведен\");\n}","import { useState } from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\n\nimport { USER } from 'constants/constants';\nimport { SignOut } from 'utils/user';\n\nimport styled from 'styled-components';\n\nconst SAside = styled.aside`\n    grid-area: aside;\n    padding: 1rem;\n    max-width: 30vw;\n\n    @media screen and (max-width: 600px) {\n        position: fixed;\n        right: -100vw;\n        height: 100vh;\n        width: 80vw;\n        max-width: 80vw;\n        z-index: 10;\n        opacity: .9;\n        transition: calc(var(--transitionApp)*2);\n        \n        &.open {\n            transform: translate(-100vw);\n        }\n    }\n`\n\nconst SAsideTop = styled.div`\n    margin: 1rem;\n`\n\nconst SLogo = styled.div`\n    margin: auto;\n    overflow: hidden;\n    transition: var(--transitionApp);\n\n    &:hover {\n        filter: brightness(0.5);\n    }\n\n    & img {\n        height: 100%;\n        width: 100%;\n    }\n`\n\nconst SNickname = styled.div`\n    margin: .5rem auto;\n    padding: .5rem;\n    width: max-content;\n    max-width: 100%;\n    text-transform: uppercase;\n    color: var(--purpleColor);\n    font-weight: bold;\n    text-align: center;\n    word-break: break-all;\n    background: var(--onHoverColor);\n    border-radius: 5px;\n    transition: .5s;\n`\n\nconst SLogout = styled(SNickname)`\n    color: var(--redColor);\n    cursor: pointer;\n    transition: var(--transitionApp);\n\n    &:hover {\n        background: var(--redColor);\n        color: var(--onHoverColor);\n    }\n`\n\nconst SNavs = styled.nav`\n    padding: 1rem;\n    display: flex;\n    flex-direction: column;\n    background: var(--navsBG);\n`\n\nconst SNavLink = styled(NavLink)`\n    margin: 0.5rem 0;\n    padding: 0.5rem;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    background: var(--purpleColor);\n    border: 1px solid #231E2F;\n    border-radius: 5px;\n    color: var(--onHoverColor);\n    text-shadow: 1px 1px 5px black;\n    text-decoration: none;\n    text-transform: uppercase;\n    transition: var(--transitionApp);\n\n    &.active,\n    &:hover {\n        color: var(--purpleColor);\n        text-shadow: none;\n        background: var(--onHoverColor);\n    }\n`\n\n// Generate navlink\nconst GNavLink = ({isExact, to, linkText}) => {\n    return (\n        <SNavLink exact={isExact} activeClassName=\"active\" to={to}>\n            <span className=\"nav-link-text\">{linkText}</span>\n        </SNavLink>\n    )\n}\n\nexport default function Aside() {\n    const [isOpened, setOpened] = useState(false);\n    const history = useHistory();\n\n    return (\n        <SAside className=\"aside\" onClick={()=> setOpened(!isOpened)}>\n            <SAsideTop>\n                <SLogo as={NavLink} to=\"/\" >\n                    <img src=\"/img/logo192.png\" alt=\"wnet logo\" />\n                </SLogo>\n\n                <SAsideTop>\n                    <SNickname>{USER.nickname}</SNickname>\n                    <SLogout onClick={() => SignOut(history)}></SLogout>\n                </SAsideTop>\n            </SAsideTop>\n\n            <SNavs>\n                <GNavLink\n                    isExact={true}\n                    to=\"/\" \n                    linkText=\"\"\n                />\n            </SNavs>\n\n        </SAside>\n    )\n}","import styled from 'styled-components';\n\nconst SHeader = styled.header`\n    grid-area: header;\n    padding: 1rem;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    background: var(--purpleColor);\n\n    @media screen and (max-width: 600px) {\n        position: fixed;\n        left: 0;\n        right: 0;\n        height: 7vh;\n        z-index: 5;\n    }\n`;\n\nexport default function Header() {\n    return (\n        <SHeader>\n            \n        </SHeader>\n    )\n}","import { useState } from 'react';\n\nimport { Fetching } from './api';\n\n// useInput custom react hook\nexport const useInput = (initValue = '') => {\n    const [value, setValue] = useState(initValue);\n    const handleChange = e => setValue(e.target.value);\n    const resetField = () => setValue('');\n    const setCertainValue = v => setValue(v);\n\n    return {\n        base: {\n            value,\n            onChange: handleChange,\n        },\n        resetField,\n        setCertainValue\n    }\n}\n\n// for show/hide password\nexport const useTogglePassword = (initState = 'password') => {\n    const [state, changeType] = useState(initState);\n    const toggleType = () => changeType(state === 'password' ? 'text' : 'password');\n\n    return {\n        state,\n        toggleType\n    }\n}\n\n// check xss attack\nexport const isHaveXSS = content => /<+[\\w\\s/]+>+/gm.test(content);\n\n// base validation check html validation & xss\nexport const BaseFormValidation = data => {\n    const resIndexs = [];\n    let i = 0;\n    for (let v of data.values()) {\n        if (isHaveXSS(v)) resIndexs.push(i);\n        i++;\n    }\n    return resIndexs;\n}\n\n// create one ::after notification\nexport const NotifyInvalidField = (selector, field) => {\n    const afterStyle = document.createElement('style');\n    afterStyle.innerHTML += `${selector}::after{content: 'Ошибка'; font-size: 1rem; color: red; margin: 10px;}`;\n    document.head.appendChild(afterStyle);\n    field.resetField();\n    return afterStyle;\n}\n\n// reset form by calling component method\nexport const ResetForm = fields => {\n    if (!fields) return;\n    fields.forEach(field => field.resetField());\n}\n\n// clear all custom ::after styles\nexport const ClearAllNotifications = (afterStyles = []) => afterStyles.forEach(AS => AS.remove());\n\nconst setNotificationIfExist = (BIndexs, CIndexs, afterStyles, fields) => {\n    if (!fields) return;\n    if (BIndexs.length !== 0)\n        BIndexs.forEach(index => afterStyles.push(NotifyInvalidField(`.form-field-${1+index} .form-input-notification`, fields[index])));\n    if (CIndexs && CIndexs.length !== 0)\n        CIndexs.forEach(index => afterStyles.push(NotifyInvalidField(`.form-field-${1+index} .form-input-notification`, fields[index])));\n}\n\n// submit form: check all validations, return ::after styles, notify & reset fields\nexport const SubmitFormData = async(e, afterStyles, fields, customValidation = () => {}, onSuccess = () => {}, onFail = () => {}, isReset = true) => {\n    e.preventDefault();\n    ClearAllNotifications(afterStyles);\n    afterStyles = [];\n\n    const form = e.target;\n    const action = form.getAttribute('action');\n    if (!action) return;\n    const data = new FormData(form);\n\n    // validation\n    const BIndexs = BaseFormValidation(data),\n        CIndexs = customValidation();\n\n    // notification\n    setNotificationIfExist(BIndexs, CIndexs, afterStyles, fields);\n\n    // fetching & notification\n    if ((BIndexs.length === 0 && !CIndexs) ||\n        (BIndexs.length === 0 && CIndexs && CIndexs.length === 0)) {\n        const res = await Fetching(action, data);\n\n        if (res.err === \"ok\") {\n            if (isReset) ResetForm(fields);\n            return onSuccess(res.data);\n        }\n        return onFail(res.err);\n    }\n    onFail(\"Ошибка валидации\");\n    return afterStyles;\n}","import styled from 'styled-components';\n\nconst SFormField = styled.div`\n    margin-bottom: .5rem;\n`;\n\nconst SFormInputWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    margin-bottom: .5rem;\n`;\n\nconst SFormInputLabel = styled.label`\n    white-space: nowrap;\n    color: var(--offHoverColor);\n\n    &.required::after {\n        content: '*';\n        color: var(--redColor);\n    }\n`;\n\nconst SFormInput = styled.input`\n    margin-left: 1rem;\n    padding: .5rem;\n    width: 100%;\n    font-size: 1rem;\n    color: var(--offHoverColor);\n    background: none;\n    border: none;\n    border-radius: 5px;\n    outline: none;\n    border-bottom: 1px solid var(--onHoverColor);\n    box-shadow: 4px 4px 3px 0 #00000029;\n\n    &::placeholder{\n        color: var(--darkGreyColor);\n    }\n\n    &:disabled {\n        background: var(--greyColor);\n    }\n`;\n\nconst SFormInputNotification = styled.div`\n    color: var(--darkRedColor);\n`;\n\nexport const Label = ({required, id, labelText}) => \n    <SFormInputLabel className={required?'required':''} htmlFor={id} > {labelText} </SFormInputLabel>\n\nexport default function Input({index, id, type = \"text\", name, labelText, base, minLength, maxLength, min, max, required = true, disabled = false, placeholder = \"\"}) {\n    return (\n        <SFormField className={'form-field-'+index}>\n            <SFormInputWrapper>\n                <Label required={required} id={id} labelText={labelText} />\n                <SFormInput \n                    className=\"form-input\" \n                    id={id} \n                    type={type} \n                    name={name}\n                    required={required} \n                    min={min} \n                    max={max} \n                    minLength={minLength} \n                    maxLength={maxLength}\n                    placeholder={placeholder} \n                    disabled={disabled}\n                    {...base} \n                />\n            </SFormInputWrapper>\n            <SFormInputNotification className=\"form-input-notification\" />\n        </SFormField>\n    )\n}","import styled from \"styled-components\"\n\nconst SSubmitBtn = styled.input`\n    width: 60%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin: 1rem auto;\n    padding: 1rem;\n    font-size: 1rem;\n    color: var(--offHoverColor);\n    background: var(--offHoverBG);\n    border-radius: 5px;\n    border: none;\n    box-shadow: 2px 2px 2px 0 #00000061;\n    transition: var(--transitionApp);\n    cursor: pointer;\n\n    &:hover {\n        color: var(--onHoverColor);\n        background: var(--onHoverBG);\n    }\n`;\n\nexport default function SubmitBtn({value}) {\n    return <SSubmitBtn type=\"submit\" value={value} />\n}","import { useCallback, useEffect, useState } from \"react\";\n\nimport { GetDataByCrieteries } from \"utils/api\";\nimport { RandomKey } from \"utils/content\";\nimport Input from \"components/form-input/input\";\nimport styled from \"styled-components\";\n\nconst SLalel = styled.label`\n    display: flex;\n    align-items: center;\n    white-space: nowrap;\n\n    & select {\n        margin-left: 1rem;\n        padding: .5rem;\n        width: 100%;\n        font-size: 1rem;\n        color: var(--offHoverColor);\n        background: none;\n        border: none;\n        border-radius: 5px;\n        outline: none;\n        border-bottom: 1px solid var(--onHoverColor);\n        box-shadow: 4px 4px 3px 0 #00000029;\n    }\n`;\n\nexport default function PhoneField({ index, base }) {\n    const [codes, setCodes] = useState();\n\n    const getCodes = useCallback(async () => {\n        const res = await GetDataByCrieteries('countryCodes');\n        if (res.err && res?.err !== \"ok\") return setCodes(null);\n        return setCodes(res)\n    }, [])\n\n    useEffect(() => {\n        if (codes === undefined) return getCodes()\n    }, [getCodes, codes])\n\n    // if (!codes) return null;\n    return (\n        <div>\n            <Input index={index} id=\"sign-up-phone\" type=\"tel\" name=\"phone\" base={base} labelText=\"Телефон:\"\n                minLength=\"10\" maxLength=\"15\" placeholder=\"7777777777\"\n            />\n\n            <SLalel>\n                <span>Код страны:</span>\n                <select name=\"countryCode\">{codes?.map(({ code, country }) => <option key={RandomKey()} value={code}>{code} ({country})</option>)}</select>\n            </SLalel>\n        </div>\n    )\n}","import { useState } from 'react';\nimport { useHistory } from 'react-router';\n\nimport { SubmitFormData, useInput } from 'utils/form';\nimport { Notify } from 'components/app-notification/notification';\nimport Input from 'components/form-input/input';\nimport SubmitBtn from 'components/submit-btn/submit';\nimport PhoneField from 'components/phone-field/field';\n\nlet afterStyles = []; // form handle all ::after notifications\n\nexport default function SignUp() {\n    const nickname = useInput('');\n    const phone = useInput('');\n    const code = useInput('');\n    const [step, setStep] = useState(1);\n    const history = useHistory();\n\n    const fields = [phone, nickname, code]; // fields for reset\n\n    const onSuccessStep1 = () => {\n        Notify('success', \"Отправлено смс на номер \" + phone.base.value + \". Возьмите оттуда код подтверждения\")\n        setStep(2);\n    }\n    const onSuccessStep2 = data => {\n        Notify('success', `Вы успешно зарегистрированы. Ваш логин: \"${phone.base.value}\" и временный пароль:\"${data?.password}\"`, false)\n        history.push(\"/\")\n    }\n    const onFail = err => Notify('fail', 'Ошибка регистрации:' + err);\n\n    return (\n        step === 1\n            ? <form action=\"/sign/sms/up\" onSubmit={async (e) => {\n                afterStyles = await SubmitFormData(e, afterStyles, fields, undefined, onSuccessStep1, onFail, false);\n            }}>\n                <h3>Регистрация(шаг 1)</h3>\n\n                <PhoneField index=\"0\" base={phone.base} />\n\n                <SubmitBtn value=\"Отправить!\" />\n            </form>\n\n            : <form action=\"/sign/up\" onSubmit={async (e) => {\n                afterStyles = await SubmitFormData(e, afterStyles, fields, undefined, onSuccessStep2, onFail);\n            }}>\n                <h3>Регистрация(шаг 2)</h3>\n\n                <Input disabled={true} index=\"0\" id=\"sign-up-phone\" type=\"tel\" name=\"phone\" base={phone.base} labelText=\"Телефон:\"/>\n                <Input index=\"2\" id=\"sign-up-code\" type=\"text\" name=\"code\" base={code.base} labelText=\"8-значный код:\"\n                    minLength=\"8\" maxLength=\"8\" placeholder=\"Mfa7sd45\"\n                />\n                <Input index=\"1\" id=\"sign-up-nickname\" type=\"text\" name=\"nickname\" base={nickname.base} labelText=\"Имя(никнейм):\"\n                    minLength=\"3\" maxLength=\"20\" placeholder=\"Miron\"\n                />\n                <SubmitBtn value=\"Отправить!\" />\n            </form>\n\n    )\n}\n","// just debounce\nexport function Debounce(fn, ms) {\n    let timeOut;\n    return (...args) => {\n        clearTimeout(timeOut);\n        timeOut = setTimeout(() => { fn(...args) }, ms)\n    }\n}\n\n// show & hide password by changing input type\nexport const ShowAndHidePassword = (e, passElem, passwordToggle) => {\n    const elem = e.target;\n    passwordToggle.toggleType();\n    elem.classList.toggle('fa-eye-slash');\n    if (passwordToggle.state === \"password\") passElem.setAttribute('type', 'text');\n    else passElem.setAttribute('type', 'password');\n}\n\n/**\n * for lazy load and keeping focus with scrolling\n * @param e event\n * @param isStopLoad stop load or no\n * @param className for getting priorEdgeChild\n * @param isScrollingToTop load on scroll to top or bottom\n * @param loadCallback what do after react edge\n */\nexport const ScrollHandler = Debounce(async(e, isStopLoad, isScrollingToTop = false, loadCallback = async() => {}) => {\n    if (isStopLoad) return;\n\n    const parent = e.target;\n    const pRec = parent.getBoundingClientRect();\n    if (\n        (isScrollingToTop && parent.scrollTop === 0) ||\n        (!isScrollingToTop && parent.scrollTop >= Math.round((parent.scrollHeight - pRec.height) * .75))\n    ) {\n        const priorEdgeChildNum = isScrollingToTop ? 0 : parent.childElementCount - 1;\n\n        if (await loadCallback()) {\n            setTimeout(() => {\n                // smooth scroll\n                const el = parent.childNodes[priorEdgeChildNum];\n                if (el) el.scrollIntoView({ behavior: \"smooth\" });\n            }, 100);\n        }\n    }\n}, 100);","import { ShowAndHidePassword } from 'utils/effects';\nimport Input from '../form-input/input';\n\nimport styled from 'styled-components';\n\nconst SPasswordWrapper = styled.div`\n    display: flex;\n    align-items: baseline;\n    cursor: pointer;\n\n    & input {\n        margin: 0 1rem;\n        flex-grow: 1;\n    }\n\n    & i {\n        padding: 5px;\n        background: var(--offHoverBG);\n        border-radius: 5px;\n        box-shadow: 2px 2px 2px 0 #00000061;\n    }\n`;\n\nexport default function PasswordField({index, id, required, labelText, placeholder, pass, passToggle}) {\n    return (\n        <SPasswordWrapper>\n            <Input index={index} id={id} type=\"password\" name=\"password\" base={pass.base} required={required}\n                minLength=\"8\" maxLength=\"30\" placeholder={placeholder} labelText={labelText}\n            />\n            \n            <i  className=\"fa fa-eye fa-eye-slash\" \n                aria-hidden=\"true\" \n                title=\"show/hide password\"\n                onClick={ e => {\n                    ShowAndHidePassword(e, document.getElementById(id), passToggle);\n                }} \n            ></i>\n        </SPasswordWrapper>\n    )\n}","import { SubmitFormData, useInput, useTogglePassword } from 'utils/form';\nimport { UserOnline } from 'utils/user';\nimport { Notify } from 'components/app-notification/notification';\nimport Input from 'components/form-input/input';\nimport PasswordField from 'components/password-field/password';\nimport SubmitBtn from 'components/submit-btn/submit';\n\nlet afterStyles = []; // form handle all ::after notifications\n\nexport default function SignIn({ history }) {\n    const login = useInput();\n    const pass = useInput();\n    const passToggle = useTogglePassword();\n    const fields = [login, pass];\n\n    // custom validation\n    const customValidation = () =>\n        (!(/[a-z]+/g.test(pass.base.value) && /[A-Z]+/g.test(pass.base.value) && /[0-9]+/g.test(pass.base.value))) ? [1] : [];\n\n    const onSuccess = async (data) => {\n        const isOnline = await UserOnline(data.id);\n        if (isOnline) {\n            Notify('success', \"Вход произведен\");\n            history.push('/');\n        } else Notify('fail', \"Ошибка входа\")\n    }\n    const onFail = err => Notify('fail', \"Ошибка входа:\" + err);\n\n    return (\n        <form action=\"/sign/in\" onSubmit={async (e) => {\n            afterStyles = await SubmitFormData(e, afterStyles, fields, customValidation, onSuccess, onFail);\n        }}>\n            <h3>Вход</h3>\n\n            <Input index=\"0\" id=\"sign-in-login\" name=\"phone\" type=\"tel\" base={login.base} labelText=\"Логин:\"\n                minLength=\"11\" maxLength=\"11\" placeholder=\"87777777777\"\n            />\n            <PasswordField index=\"1\" id=\"sign-in-password\" name=\"password\" labelText=\"Пароль:\"\n                placeholder=\"User1234\" pass={pass} passToggle={passToggle}\n            />\n\n            <SubmitBtn value=\"Отправить!\" />\n        </form>\n    )\n}","import { useState } from 'react';\nimport { useHistory } from 'react-router';\n\nimport { SubmitFormData, useInput, useTogglePassword } from 'utils/form';\nimport { Notify } from 'components/app-notification/notification';\nimport Input from 'components/form-input/input';\nimport SubmitBtn from 'components/submit-btn/submit';\nimport PasswordField from 'components/password-field/password';\nimport PhoneField from 'components/phone-field/field';\n\nlet afterStyles = []; // form handle all ::after notifications\n\nexport default function Restore() {\n    const phone = useInput();\n    const code = useInput('');\n    const pass = useInput('');\n    const passToggle = useTogglePassword()\n    const [step, setStep] = useState(1);\n    const history = useHistory();\n    const fields = [phone, pass, code]; // fields for reset\n\n    const onSuccessStep1 = () => {\n        Notify('success', \"Отправлено смс на номер \" + phone.base.value + \". Возьмите оттуда код подтверждения\")\n        setStep(2);\n    }\n    const onSuccessStep2 = () => {\n        Notify('success', \"Пароль успешно изменен.\")\n        history.push(\"/\")\n    }\n    const onFail = err => Notify('fail', 'Ошибка восстановления:' + err);\n\n    return step === 1\n        ? <form action=\"/sign/sms/ch\" onSubmit={async (e) => {\n            afterStyles = await SubmitFormData(e, afterStyles, fields, undefined, onSuccessStep1, onFail, false);\n        }}>\n            <h3>Восстановление пароля(шаг 1)</h3>\n\n            <PhoneField index=\"0\" base={phone.base} />\n\n            <SubmitBtn value=\"Отправить!\" />\n        </form>\n\n        : <form action=\"/sign/re\" onSubmit={async (e) => {\n            afterStyles = await SubmitFormData(e, afterStyles, fields, undefined, onSuccessStep2, onFail);\n        }}>\n            <h3>Восстановление пароля(шаг 2)</h3>\n\n            <Input disabled={true} index=\"0\" id=\"sign-up-phone\" type=\"tel\" name=\"phone\" base={phone.base} labelText=\"Телефон:\"\n            />\n            <Input index=\"2\" id=\"sign-up-code\" type=\"text\" name=\"code\" base={code.base} labelText=\"8-значный код:\"\n                minLength=\"8\" maxLength=\"8\" placeholder=\"Mfa7sd45\"\n            />\n            <PasswordField index=\"2\" id=\"sign-in-password\" name=\"password\" labelText=\"Новый пароль:\"\n                placeholder=\"User1234\" pass={pass} passToggle={passToggle}\n            />\n            <SubmitBtn value=\"Отправить!\" />\n        </form>\n}","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { RandomKey } from 'utils/content';\n\nimport SignUp from './up/up';\nimport SignIn from './in/in';\nimport ResetPassword from './reset/reset';\nimport styled from 'styled-components';\n\nconst SSign = styled.div`\n    height: 100%;\n    margin-bottom: 1rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    align-items: center;\n\n    & .logo {\n        max-width: 40vw;\n        max-height: 40vh;\n\n        & img {\n            width: 100%;\n            height: 100%;\n        }\n    }\n\n    & .main-action {\n        min-width: 60vw;\n        padding: 2rem;\n        border-radius: 10px;\n        background: #fdfdfd;\n        box-shadow: var(--boxShadow);\n    }\n\n    & .other-actions {\n        display: flex;\n        flex-direction: column;\n\n        & span {\n            margin: .5rem;\n            padding: .5rem;\n            border-radius: 5px;\n            cursor: pointer;\n            transition: var(--transitionApp);\n\n            &:hover {\n                background: var(--onHoverBG);\n                color:  var(--onHoverColor);\n            }\n        }\n    }\n`;\n\nconst GSignAction = ({ action, setAction }) => {\n    let mainAction;\n    let otherActions = []\n    if (action === \"up\") {\n        mainAction = <SignUp />;\n        otherActions = [<GInAction key={RandomKey()} setAction={setAction} />, <GResetAction key={RandomKey()} setAction={setAction} />];\n    } else if (action === \"reset\") {\n        mainAction = <ResetPassword />;\n        otherActions = [<GUpAction key={RandomKey()} setAction={setAction} />, <GInAction key={RandomKey()} setAction={setAction} />];\n    } else {\n        mainAction = <SignIn />;\n        otherActions = [<GUpAction key={RandomKey()} setAction={setAction} />, <GResetAction key={RandomKey()} setAction={setAction} />];\n    }\n    return (\n        <>\n            <div className=\"main-action\">{mainAction}</div>\n            <div className=\"other-actions\">\n                {otherActions}\n            </div>\n        </>\n    )\n}\n\nconst GInAction = ({ setAction }) => <span onClick={() => setAction(\"in\")}>Войти</span>\nconst GUpAction = ({ setAction }) => <span onClick={() => setAction(\"up\")}>Нет аккаунта? Зарегистроваться</span>\nconst GResetAction = ({ setAction }) => <span onClick={() => setAction(\"reset\")}>Забыли пароль?</span>\n\nexport default function Sign() {\n    const [action, setAction] = useState(\"in\");\n\n    return (\n        <SSign>\n            <div className=\"logo\">\n                <img src=\"/assets/app/logo512.png\" alt=\"logo\" />\n            </div>\n\n            <GSignAction action={action} setAction={setAction} />\n\n            <Link download to=\"/assets/name.txt\">Пользовательское соглашение</Link>\n        </SSign>\n    )\n}","import { Link } from \"react-router-dom\"\n\nimport styled from \"styled-components\"\n\nconst S404 = styled.section`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    & h2 {\n        \n    }\n`;\n\nexport default function Page404() {\n    return (\n        <S404>\n            <h2>404</h2>\n            <h3>Not found</h3>\n\n            <Link to=\"/\">Go home</Link>\n        </S404>\n    )\n}","import { useState } from 'react';\n\nimport styled, { css } from 'styled-components';\n\nconst SDisplayFlexCenter = css`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst SPopup = styled.div`\n    position: fixed;\n    left: 50%;\n    top: 50%;\n    width: 0;\n    height: 0;\n    ${SDisplayFlexCenter};\n    background: #000000ab;\n    border-radius: 5px;\n    transition: var(--transitionApp);\n    opacity: 0;\n    z-index: -10;\n\n    &.opened {\n        left: 0;\n        top: 0;\n        width: 100vw;\n        height: 100vh;\n        opacity: 1;\n        z-index: 20;\n    }\n`;\n\nconst SPopupClose = styled.div`\n    position: absolute;\n    right: 20px;\n    top: 10px;\n    width: 1rem;\n    height: 1rem;\n    padding: 5px;\n    ${SDisplayFlexCenter};\n    background: var(--redColor);\n    border-radius: 100%;\n    transition: var(--transitionApp);\n    cursor: pointer;\n\n    &:hover{\n        background: var(--darkRedColor);\n    }\n`;\n\nconst SContentWrapper = styled.div`\n    max-height: 90vh;\n    max-width: 80vw;\n    height: max-content;\n    width: max-content;\n    ${SDisplayFlexCenter};\n    flex-direction: column;\n    border-radius: 10px;\n    background: #ffffffc7;\n`;\n\nlet add = ()=>{};\nlet close = ()=>{};\nlet closeCB = ()=>{};\nexport const PopupOpen = (Component, componentArgs = {}) => {\n    add(Component, componentArgs);\n    if (componentArgs.closeCB) closeCB = componentArgs.closeCB;\n}\nexport const ClosePopup = () => close();\n\nexport default function Popup() {\n    const [popup, setPopup] = useState(null);\n    const [isOpened, setOpenedState] = useState(false);\n    add = (Component, componentArgs) => setPopup(<Component {...componentArgs}/>) || setOpenedState(true);\n    close = () => {\n        setOpenedState(false) || setPopup(null);\n        closeCB();\n    }\n    \n    return (\n        <SPopup className={`${isOpened ? 'opened' : ''}`} >\n            <SPopupClose onClick={close}>\n                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n            </SPopupClose>\n\n            <SContentWrapper>\n                {popup}\n            </SContentWrapper>\n        </SPopup>\n    )\n}","import { Switch, Route } from 'react-router-dom';\n\nimport { RandomKey } from 'utils/content';\nimport HomePage from 'routes/home/home';\nimport SignPage from 'routes/sign/sign';\nimport Page404 from 'routes/404/404';\nimport Popup from 'components/popup/popup';\nimport AppNotifications from 'components/app-notification/notification';\n\nimport styled from 'styled-components';\n\nconst SMain = styled.main`\n    grid-area: main;\n    background: var(--greyColor);\n`;\n\n// app's routes\nconst ROUTES = [{\n    href: \"/\",\n    isExact: true,\n    component: HomePage,\n}, {\n    href: \"/sign\",\n    isExact: false,\n    component: SignPage,\n}]\n\nexport default function DefineRoutes() {\n    return (\n        <SMain>\n            <Switch>\n                {\n                    ROUTES.map(\n                        ({ href, component, isExact }) => <Route key={RandomKey()} exact={isExact} path={href} component={component} />\n                    )\n                }\n                <Route component={Page404} />\n            </Switch>\n\n            {/* popups */}\n            <Popup />\n            <AppNotifications />\n        </SMain>\n    )\n}","export default function HomePage() {\n    return (\n        <div>home</div>\n    )\n}","import { useEffect } from 'react';\nimport { useHistory } from 'react-router';\n\nimport { USER } from 'constants/constants';\nimport { IS_SIGN } from 'utils/content';\nimport Aside from 'components/aside/aside';\nimport Header from 'components/header/header';\nimport Main from 'components/routes/routes';\n\nimport './App.css';\nimport styled from 'styled-components';\n\nconst SApp = styled.div`\n  \tdisplay: grid;\n    grid-template-areas: ${props => props.isSign ? \"'main'\" : '\"main aside\" \"header aside\"'};\n    grid-template-rows: ${props => props.isSign ? \"1fr\" : '1fr 7vh'};\n    grid-template-columns: ${props => props.isSign ? '1fr' : '8fr 2fr'};\n    min-height: 100vh;\n\n\t@media screen and (max-width: 600px) {\n\t\t& {\n\t\t\tgrid-template-areas: '\"main aside\" \"header aside\"';\n\t\t\tgrid-template-columns: 1fr;\n\t\t\tgrid-template-rows: 1fr 0fr;\n\t\t}\n\t}\n`;\n\nexport default function App() {\n    const isSign = IS_SIGN();\n    const history = useHistory();\n\n    useEffect(() => {\n        if (USER.status === \"online\") return isSign && history.push(\"/\")\n        if (!USER.guest) return history.push('/sign');\n    }, [history, isSign]);\n\n    return (\n        <SApp isSign={isSign}>\n            {\n                isSign\n                    ? null\n                    : <>\n                        <Aside />\n                        <Header />\n                    </>\n            }\n\n            <Main />\n        </SApp>\n    )\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport { IsLogged, UserOnline } from 'utils/user';\nimport App from './App'\n\nimport reportWebVitals from './reportWebVitals';\n\nconst check = async () => {\n  const id = await IsLogged();\n  if (id) return await UserOnline(id);\n}\n\nconst init = async () => {\n  await check();\n  ReactDOM.render(\n    <React.StrictMode >\n      <Router >\n        <App />\n      </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\ninit();\n\nreportWebVitals();\n"],"sourceRoot":""}
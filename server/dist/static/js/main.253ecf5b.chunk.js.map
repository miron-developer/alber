{"version":3,"sources":["components/app-notification/notification.jsx","constants/constants.js","utils/api.js","utils/content.jsx","utils/user.js","components/popup/popup.jsx","utils/form.js","utils/file.js","components/form-input/input.jsx","components/submit-btn/submit.jsx","components/preloaded-files-plash/plash.jsx","components/clips/clips.jsx","components/clipped-files-plash/plash.jsx","components/parsel/manage/manage.jsx","components/form-select/select.jsx","components/traveler/manage/manage.jsx","components/to-toptype/toptype.jsx","components/to-up/ex.jsx","components/to-up/up.jsx","utils/effects.js","components/parsel/parsel.jsx","components/traveler/traveler.jsx","components/aside/history/history.jsx","utils/hooks.js","components/phone-field/field.jsx","components/password-field/password.jsx","components/aside/edit-profile/profile.jsx","components/aside/aside.jsx","components/header/header.jsx","routes/sign/up/up.jsx","routes/sign/in/in.jsx","routes/sign/reset/reset.jsx","routes/sign/sign.jsx","routes/404/404.jsx","routes/parsel/parsel.jsx","routes/parsels/parsels.jsx","routes/traveler/traveler.jsx","routes/travelers/travelers.jsx","components/routes/routes.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["interID","USER","id","phoneNumber","nickname","status","guest","formDataToString","data","FormData","res","entries","k","v","slice","Fetching","action","a","method","undefined","err","fetchOption","encodeURI","fetch","then","json","catch","Object","assign","prepareDataToFetch","datas","append","GetDataByCrieteries","datatype","criteries","POSTRequestWithParams","to","params","IS_SIGN","decodeURI","useLocation","pathname","split","includes","IsTwoDigit","parseInt","concat","DateFromMilliseconds","milliseconds","isForInput","datetime","Date","isNaN","str","getFullYear","getMonth","getDate","join","getHours","getMinutes","RandomKey","Math","round","random","SAppNotifications","styled","div","SAppNotification","SCloseNotification","add","removeNotification","Notify","type","content","isAutoClose","length","setInterval","clearInterval","Notification","setTimeout","noteContent","Function","className","onClick","Notifications","useState","ntfs","setNTFS","filter","item","props","key","IsLogged","changeUserData","now","toString","UserOnline","UserOffline","SignOut","history","push","SDisplayFlexCenter","css","SPopup","SPopupBG","SPopupClose","SContentWrapper","close","closeCB","PopupOpen","Component","componentArgs","ClosePopup","Popup","popup","setPopup","isOpened","setOpenedState","useInput","initValue","value","setValue","handleChange","e","target","resetField","setCertainValue","base","onChange","useTogglePassword","initState","state","changeType","toggleType","BaseFormValidation","resIndexs","i","values","test","NotifyInvalidField","selector","field","afterStyle","document","createElement","innerHTML","head","appendChild","ResetForm","fields","forEach","ClearAllNotifications","afterStyles","AS","remove","setNotificationIfExist","BIndexs","CIndexs","index","SubmitFormData","customValidation","onSuccess","onFail","isReset","preventDefault","form","getAttribute","UploadFile","file","whomFile","whomID","SFormField","SFormInputWrapper","SFormInputLabel","label","SFormInput","input","SFormInputNotification","Label","required","labelText","htmlFor","Input","name","minLength","maxLength","list","min","max","hidden","placeholder","SSubmitBtn","SubmitBtn","SFilesPlash","SFileUploadWrapper","SRemoveFile","RenderUploadedFile","filename","src","removeFile","alt","PreloadedFilesPlash","preloadedFiles","map","SClipItem","color","ClipOneBtn","srcIcon","ClipPlash","setFiles","preloadedCB","files","addToPlash","accept","cb","click","addEventListener","stopImmediatePropagation","URL","createObjectURL","PreloadFile","SClippedFileWrapper","size","SClippedFileSrc","RenderClippedFile","stopPropagation","ClippedFiles","SParsel","removePhoto","clearAll","setHaveWhatsUp","setPreloaded","f","ManageParsel","failText","successText","weight","price","title","expire","expireDatetime","contactNumber","from","fromID","toID","isHaveWhatsUp","OnChangeTransitPoint","photos","setPhotos","ph","onSubmit","useCallback","oldParams","comparedParams","CompareParams","GetValueFromListByIDAndInputValue","parse","defaultChecked","SLalel","Select","text","options","selected","opt","makeText","STravel","ManageTraveler","departure","departureDatetime","arrival","arrivalDatetime","travelType","travelTypeID","isHaveWhatsup","travelTypes","setTravelTypes","getTravelTypes","useEffect","console","log","setID","setTravel","op","Array","find","textContent","onChangeTravelType","SToTopType","SOneItem","toTopType","code","topID","GOnePrice","cost","setPayed","setTopTypeID","ToTopType","prices","setPrices","isPayed","topTypeID","getPrices","p","ExamplePrice","SToUp","toUp","ToUp","setPrice","getPrice","Debounce","fn","ms","timeOut","args","clearTimeout","DbnceCities","dt","getElementById","ScrollHandler","isStopLoad","isScrollingToTop","loadCallback","parent","pRec","getBoundingClientRect","scrollTop","scrollHeight","height","priorEdgeChildNum","childElementCount","el","childNodes","scrollIntoView","behavior","EditItem","RemoveItem","TopItem","PaintItem","newParams","currentParams","obj","removeEmptyFields","listID","inputValue","option","point","Parsel","isMy","changeItem","removeItem","setOpened","getPhotos","rel","href","window","open","newData","STraveler","Traveler","SHistory","section","loadHistory","getType","getTypeOnRus","getPart","History","tab","setTab","step","fromToState","setFromToState","setDataList","getWhat","isAppToEnd","isNeedClear","start","isLoaded","datalist","zeroState","useFromTo","configHistoryParams","Item","findIndex","d","onScroll","PhoneField","codes","setCodes","getCodes","country","SPasswordWrapper","PasswordField","pass","passToggle","passElem","passwordToggle","elem","classList","toggle","setAttribute","ShowAndHidePassword","SForms","EditProfile","phone","setStep","onSuccessStep1","login","onSuccessStep2","SAside","aside","SUser","SLogo","SNickname","SLogout","SEdit","Aside","useHistory","as","NavLink","SHeader","header","SNavLink","GNavLink","isExact","linkText","exact","activeClassName","Header","SignUp","password","SignIn","Restore","SSign","GSignAction","mainAction","setAction","otherActions","GInAction","GUpAction","GResetAction","S404","Page404","SParselGuest","SParsels","STravelGuest","SMain","main","ROUTES","component","download","startDT","endDT","parsels","setParsels","getParsels","travelers","setTravelers","getTravelers","DefineRoutes","location","path","SApp","isSign","App","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","check","ReactDOM","render","StrictMode","init"],"mappings":"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","file":"static/js/main.253ecf5b.chunk.js","sourcesContent":["import { useState } from 'react';\n\nimport { RandomKey } from 'utils/content';\n\nimport styled from 'styled-components';\n\nconst SAppNotifications = styled.div`\n    position: fixed;\n    right: 0;\n    bottom: 0;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n    z-index: 20;\n`\n\nconst SAppNotification = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: max-content;\n    max-width: 50vw;\n    margin: .5rem;\n    padding: 1rem;\n    color: white;\n    border-radius: 5px;\n    background: #596d8c;\n    box-shadow: var(--boxShadow);\n`;\n\nconst SCloseNotification = styled.div`\n    padding: 5px;\n    margin-left: 10px;\n    height: 1.5rem;\n    width: 1.5rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: var(--redColor);\n    background: var(--darkRedColor);\n    border-radius: 50%;\n    cursor: pointer;\n`;\n\nlet add = () => {};\nlet removeNotification = id => {};\nlet interID;\n\nexport const Notify = (type, content, isAutoClose) => {\n    if (add.length !== 0) return add(type, content, isAutoClose);\n    interID = setInterval(() => {\n        if (add.length !== 0) {\n            clearInterval(interID);\n            add(type, content, isAutoClose);\n        }\n    }, 0);\n}\n\nconst Notification = ({ id = 0, type = \"fail\", content, isAutoClose = true }) => {\n    if (!content) return null;\n    if (isAutoClose) setTimeout(() => removeNotification(id), 5000);\n\n    let noteContent = content\n    if (content instanceof Function) noteContent = content(); \n\n    return (\n        <SAppNotification>\n            <div className=\"notification-content\">{noteContent}</div>\n            <SCloseNotification onClick={()=>removeNotification(id)}>\n                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n            </SCloseNotification>\n        </SAppNotification>\n    )\n}\n\nexport default function Notifications() {\n    const [ntfs, setNTFS] = useState([]);\n\n    removeNotification = id => setNTFS(ntfs.filter(item => item.props.id !== id));\n    add = (type, content, isAutoClose)  => {\n        const key = RandomKey();\n        setNTFS([...ntfs, <Notification key={key} id={key} type={type} content={content} isAutoClose={isAutoClose} />]);\n    }\n\n    return <SAppNotifications>{ntfs}</SAppNotifications>;\n}","// current user data\nexport const USER = {\n    id: -1,\n    phoneNumber: '',\n    nickname: 'nickname',\n    status: '',\n    guest: false,\n};","const formDataToString = (data = new FormData()) => {\n    let res = \"\";\n    for (let [k, v] of data.entries())\n        res += k + \"=\" + v + \"&\"\n    return res.slice(0, -1)\n}\n\n// use fetching by both method\nexport const Fetching = async(action, data, method = \"POST\") => {\n    if (action === undefined) return { err: \"action undefined\" };\n\n    const fetchOption = { 'method': method, 'mode': 'cors', 'credentials': 'include' };\n    if (method === \"GET\") action += \"?\" + encodeURI(formDataToString(data));\n    else fetchOption[\"body\"] = data;\n\n    return await fetch(action, fetchOption)\n        .then(res => res.json())\n        .catch(err => Object.assign({}, { 'err': \"500: \" + err }));\n}\n\n// convert from object to FormData\nconst prepareDataToFetch = (datas = {}) => {\n    const data = new FormData();\n    for (let [k, v] of Object.entries(datas)) data.append(k, v);\n    return data;\n}\n\n// get data by criteries & type\nexport const GetDataByCrieteries = async(datatype, criteries = {}) => {\n    const data = prepareDataToFetch(criteries);\n    const res = await Fetching(\"/api/\" + datatype, data, 'GET');\n    if (res.err !== 'ok') return { 'err': res.err }\n    return res.data;\n}\n\n// send post req to host with params\nexport const POSTRequestWithParams = async(to, params = {}) => {\n    const data = prepareDataToFetch(params);\n    return await Fetching(to, data);\n}","import { useLocation } from \"react-router\";\n\nexport const GET_CUR_PATHNAME = () => decodeURI(useLocation().pathname);\nexport const IS_SIGN = () => GET_CUR_PATHNAME().split('/').includes(\"sign\");\n\n// return two digit string\nexport const IsTwoDigit = data => parseInt(data) < 10 ? \"0\".concat(data) : data;\n\n// generate date(15/12/2020 09:09) from milliseconds\nexport const DateFromMilliseconds = (milliseconds, isForInput = true) => {\n    const datetime = new Date(parseInt(milliseconds));\n    if (isNaN(datetime)) return;\n    const str = [datetime.getFullYear(), IsTwoDigit(datetime.getMonth() + 1), IsTwoDigit(datetime.getDate())].join('-') +\n        (isForInput ? \"T\" : \" \") +\n        [IsTwoDigit(datetime.getHours()), IsTwoDigit(datetime.getMinutes())].join(\":\")\n    return str;\n}\n\n// calculate time after thing created\nexport const CalculateRelativeDatetime = (datetime = Date.now().toString()) => {\n    const now = Date.now();\n    const given = parseInt(datetime);\n\n    const delims = [[60, \"мин.\"], [60, \"ч.\"], [24, \"д.\"], [7, 30, \"нед.\"], [30, 365, \"мес.\"], [365, \"лет\"]]\n    const isPast = (now - given) > 0 ? true : false;\n    let diff = Math.abs(now - given) / 1000;\n    let diffType = \"секунд\";\n\n    const returnDate = () => {\n        diff = Math.floor(diff);\n\n        if (!isPast) return [\"через\", IsTwoDigit(diff), diffType].join(' ');\n\n        const isToday = Math.abs(now - given) < 86400000;\n        return [isToday ? 'сегодня' : '', IsTwoDigit(diff), diffType, \"назад\"].join(' ');\n    }\n\n    // calculate difference\n    for (let i = 0; i < delims.length; i++) {\n        const cur_del = delims[i]\n        if (cur_del.length === 2) {\n            if (diff > cur_del[0]) {\n                diff /= cur_del[0];\n                diffType = cur_del[1];\n                continue\n            }\n            break\n        }\n        if (cur_del[0] < diff && diff < cur_del[1]) {\n            diff /= cur_del[0];\n            diffType = cur_del[2];\n            continue\n        }\n        break\n    }\n    return returnDate();\n}\n\nexport const RandomKey = () => Math.round(Math.random() * Math.random() * 100000000);","import { USER } from 'constants/constants';\nimport { GetDataByCrieteries, POSTRequestWithParams } from './api';\nimport { Notify } from 'components/app-notification/notification';\n\nexport const IsLogged = async() => {\n    const res = await POSTRequestWithParams('/sign/status');\n    if (res.err !== 'ok') {\n        Notify('fail', res.err);\n        return false;\n    }\n    return res.data.id;\n}\n\n// change USER const\nconst changeUserData = async(id) => {\n    if (id !== undefined) {\n        const res = (await GetDataByCrieteries('user', { id: id }));\n        if (res.err && res.err !== \"ok\") {\n            return Notify('fail', \"Ошибка входа в аккаунт. Не верные данные\")\n        }\n        for (let [k, v] of Object.entries(res[0])) USER[k] = v;\n        USER.status = 'online';\n        return true;\n    } else {\n        for (let k in USER) USER[k] = '';\n        USER.status = Date.now().toString();\n        USER.nickname = \"nickname\";\n        return true;\n    }\n}\n\n// Switch to online\nexport const UserOnline = async(id) => await changeUserData(id);;\n\n// Switch to offline\nexport const UserOffline = async() => await changeUserData();\n\n// send to server signal about sign out\nexport const SignOut = async(history) => {\n    Notify('info', \"Производится выход...\");\n    const res = await POSTRequestWithParams(\"/sign/out\");\n    if (res.err !== \"ok\") return Notify('fail', \"Ошибка: выход не произведен\");;\n    const isSignOuted = await UserOffline();\n    if (!isSignOuted) return;\n    history.push('/sign/in');\n    Notify('success', \"Выход произведен\");\n}","import { useState } from 'react';\n\nimport styled, { css } from 'styled-components';\n\nconst SDisplayFlexCenter = css`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst SPopup = styled.div`\n    position: fixed;\n    left: 50%;\n    top: 50%;\n    width: 0;\n    height: 0;\n    ${SDisplayFlexCenter};\n    border-radius: 5px;\n    transition: var(--transitionApp);\n    opacity: 0;\n    z-index: -10;\n\n    &.opened {\n        left: 0;\n        top: 0;\n        width: 100vw;\n        height: 100vh;\n        opacity: 1;\n        z-index: 20;\n    }\n`;\n\n\nconst SPopupBG = styled.div`\n    position: absolute;\n    width: 100vw;\n    height: 100vh;\n    background: #000000ab;\n`;\n\nconst SPopupClose = styled.div`\n    position: absolute;\n    right: 20px;\n    top: 10px;\n    width: 1rem;\n    height: 1rem;\n    padding: 5px;\n    ${SDisplayFlexCenter};\n    background: var(--redColor);\n    border-radius: 100%;\n    transition: var(--transitionApp);\n    cursor: pointer;\n\n    &:hover{\n        background: var(--darkRedColor);\n    }\n`;\n\nconst SContentWrapper = styled.div`\n    max-height: 90vh;\n    max-width: 80vw;\n    height: max-content;\n    width: max-content;\n    ${SDisplayFlexCenter};\n    flex-direction: column;\n    border-radius: 10px;\n    background: #ffffffc7;\n    z-index: 20;\n\n    & > * {\n        overflow: auto;\n    }\n`;\n\nlet add = ()=>{};\nlet close = ()=>{};\nlet closeCB = ()=>{};\nexport const PopupOpen = (Component, componentArgs = {}) => {\n    add(Component, componentArgs);\n    if (componentArgs.closeCB) closeCB = componentArgs.closeCB;\n}\nexport const ClosePopup = () => close();\n\nexport default function Popup() {\n    const [popup, setPopup] = useState(null);\n    const [isOpened, setOpenedState] = useState(false);\n    add = (Component, componentArgs) => setPopup(<Component {...componentArgs}/>) || setOpenedState(true);\n    close = () => {\n        setOpenedState(false) || setPopup(null);\n        closeCB();\n    }\n    \n    return (\n        <SPopup className={`${isOpened ? 'opened' : ''}`} >\n            <SPopupBG onClick={close}/>\n\n            <SPopupClose onClick={close}>\n                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n            </SPopupClose>\n\n            <SContentWrapper>\n                {popup}\n            </SContentWrapper>\n        </SPopup>\n    )\n}","import { useState } from 'react';\n\nimport { Fetching } from './api';\n\n// useInput custom react hook\nexport const useInput = (initValue = '') => {\n    const [value, setValue] = useState(initValue);\n    const handleChange = e => setValue(e.target.value);\n    const resetField = () => setValue('');\n    const setCertainValue = v => setValue(v);\n\n    return {\n        base: {\n            value,\n            onChange: handleChange,\n        },\n        resetField,\n        setCertainValue\n    }\n}\n\n// for show/hide password\nexport const useTogglePassword = (initState = 'password') => {\n    const [state, changeType] = useState(initState);\n    const toggleType = () => changeType(state === 'password' ? 'text' : 'password');\n\n    return {\n        state,\n        toggleType\n    }\n}\n\n// check xss attack\nexport const isHaveXSS = content => /<+[\\w\\s/]+>+/gm.test(content);\n\n// base validation check html validation & xss\nexport const BaseFormValidation = data => {\n    const resIndexs = [];\n    let i = 0;\n    for (let v of data.values()) {\n        if (isHaveXSS(v)) resIndexs.push(i);\n        i++;\n    }\n    return resIndexs;\n}\n\n// create one ::after notification\nexport const NotifyInvalidField = (selector, field) => {\n    const afterStyle = document.createElement('style');\n    afterStyle.innerHTML += `${selector}::after{content: 'Ошибка'; font-size: 1rem; color: red; margin: 10px;}`;\n    document.head.appendChild(afterStyle);\n    field.resetField();\n    return afterStyle;\n}\n\n// reset form by calling component method\nexport const ResetForm = fields => {\n    if (!fields) return;\n    fields.forEach(field => field.resetField());\n}\n\n// clear all custom ::after styles\nexport const ClearAllNotifications = (afterStyles = []) => afterStyles.forEach(AS => AS.remove());\n\nconst setNotificationIfExist = (BIndexs, CIndexs, afterStyles, fields) => {\n    if (!fields) return;\n    if (BIndexs.length !== 0)\n        BIndexs.forEach(index => afterStyles.push(NotifyInvalidField(`.form-field-${1+index} .form-input-notification`, fields[index])));\n    if (CIndexs && CIndexs.length !== 0)\n        CIndexs.forEach(index => afterStyles.push(NotifyInvalidField(`.form-field-${1+index} .form-input-notification`, fields[index])));\n}\n\n// submit form: check all validations, return ::after styles, notify & reset fields\nexport const SubmitFormData = async(e, afterStyles, fields, customValidation = () => {}, onSuccess = () => {}, onFail = () => {}, isReset = true) => {\n    e.preventDefault();\n    ClearAllNotifications(afterStyles);\n    afterStyles = [];\n\n    const form = e.target;\n    const action = form.getAttribute('action');\n    if (!action) return;\n    const data = new FormData(form);\n\n    // validation\n    const BIndexs = BaseFormValidation(data),\n        CIndexs = customValidation();\n\n    // notification\n    setNotificationIfExist(BIndexs, CIndexs, afterStyles, fields);\n\n    // fetching & notification\n    if ((BIndexs.length === 0 && !CIndexs) ||\n        (BIndexs.length === 0 && CIndexs && CIndexs.length === 0)) {\n        const res = await Fetching(action, data);\n\n        if (res.err === \"ok\") {\n            if (isReset) ResetForm(fields);\n            return onSuccess(res.data);\n        }\n        return onFail(res.err);\n    }\n    onFail(\"Ошибка валидации\");\n    return afterStyles;\n}","import { POSTRequestWithParams } from \"utils/api\";\n\n// preload file\nexport const PreloadFile = (accept, cb = (file, src, type) => {}) => {\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.accept = accept;\n    input.click();\n\n    input.addEventListener('change', async(e) => {\n        e.stopImmediatePropagation();\n        const file = input.files[0];\n\n        if (file) cb(file, URL.createObjectURL(file), file.type);\n    });\n}\n\n// upload file to server\nexport const UploadFile = async(type, file, whomFile, whomID) => {\n    if (!type || !file || !whomFile) return { err: 'deficite data' };\n    const params = {\n        'type': type,\n        'file': file,\n        'whomFile': whomFile,\n    }\n    if (whomID) params['whomID'] = whomID;\n\n    const res = await POSTRequestWithParams('/s/image', params);\n    if (res.err !== \"ok\") return null;\n    return res.data;\n}","import styled from 'styled-components';\n\nconst SFormField = styled.div`\n    margin-bottom: .5rem;\n`;\n\nconst SFormInputWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    margin-bottom: .5rem;\n`;\n\nconst SFormInputLabel = styled.label`\n    white-space: nowrap;\n    color: var(--offHoverColor);\n\n    &.required::after {\n        content: '*';\n        color: var(--redColor);\n    }\n`;\n\nconst SFormInput = styled.input`\n    margin-left: 1rem;\n    padding: .5rem;\n    width: 100%;\n    font-size: 1rem;\n    color: var(--offHoverColor);\n    background: none;\n    border: none;\n    border-radius: 5px;\n    outline: none;\n    border-bottom: 1px solid var(--onHoverColor);\n    box-shadow: 4px 4px 3px 0 #00000029;\n\n    &::placeholder{\n        color: var(--darkGreyColor);\n    }\n\n    &:disabled {\n        background: var(--greyColor);\n    }\n`;\n\nconst SFormInputNotification = styled.div`\n    color: var(--darkRedColor);\n`;\n\nexport const Label = ({ required, id, labelText }) =>\n    <SFormInputLabel className={required ? 'required' : ''} htmlFor={id} > {labelText} </SFormInputLabel>\n\nexport default function Input({ index, id, type = \"text\", name, labelText, base, minLength, maxLength, list, min, max, required = true, hidden = false, placeholder = \"\" }) {\n    return hidden\n        ? <input type={type} value={base.value} name={name} hidden />\n        : (\n            <SFormField className={'form-field-' + index}>\n                <SFormInputWrapper>\n                    <Label required={required} id={id} labelText={labelText} />\n                    <SFormInput\n                        className=\"form-input\"\n                        id={id}\n                        type={type}\n                        name={name}\n                        required={required}\n                        min={min}\n                        max={max}\n                        minLength={minLength}\n                        maxLength={maxLength}\n                        placeholder={placeholder}\n                        hidden={hidden}\n                        list={list}\n                        {...base}\n                    />\n                </SFormInputWrapper>\n                <SFormInputNotification className=\"form-input-notification\" />\n            </SFormField>\n        )\n}","import styled from \"styled-components\"\n\nconst SSubmitBtn = styled.input`\n    width: 60%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin: 1rem auto;\n    padding: 1rem;\n    font-size: 1rem;\n    color: var(--offHoverColor);\n    background: var(--offHoverBG);\n    border-radius: 5px;\n    border: none;\n    box-shadow: 2px 2px 2px 0 #00000061;\n    transition: var(--transitionApp);\n    cursor: pointer;\n\n    &:hover {\n        color: var(--onHoverColor);\n        background: var(--onHoverBG);\n    }\n`;\n\nexport default function SubmitBtn({value, onClick}) {\n    return <SSubmitBtn type=\"submit\" value={value} onClick={onClick} />\n}","import { RandomKey } from \"utils/content\";\n\nimport styled from \"styled-components\";\n\nconst SFilesPlash = styled.div`\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 100%;\n    background: #000000ad;\n    overflow: auto;\n    white-space: nowrap;\n`;\n\nconst SFileUploadWrapper = styled.div`\n    position: relative;\n    width:  4rem;\n    display: inline-block;\n    margin: .5rem;\n    padding: .5rem;\n    overflow: hidden;\n\n    & > * {\n        width: 100%;\n        color: var(--onHoverColor);\n    }\n`;\n\nconst SRemoveFile = styled.div`\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 1rem;\n    height: 1rem;\n    padding: 5px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: var(--redColor);\n    border-radius: 100%;\n    transition: var(--transitionApp);\n    cursor: pointer;\n\n    &:hover{\n        background: var(--darkRedColor);\n    }\n`;\n\nconst RenderUploadedFile = ({filename, src, removeFile}) => {\n    return (\n        <SFileUploadWrapper>\n            <SRemoveFile onClick={()=>removeFile(filename)}>\n                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n            </SRemoveFile>\n\n            <img src={src} alt=\"uploaded img\" />\n            <div>{filename}</div>\n        </SFileUploadWrapper>\n    )\n}\n\nexport default function PreloadedFilesPlash({ preloadedFiles, removeFile = ()=>{}}) {\n    return (\n        <SFilesPlash>\n            {\n                preloadedFiles.map(\n                    file => <RenderUploadedFile key={RandomKey()} {...file} removeFile={filename => removeFile(filename)} />\n                )\n            }\n        </SFilesPlash>\n    )\n}","import { PreloadFile } from \"utils/file\";\nimport PreloadedFilesPlash from '../preloaded-files-plash/plash';\n\nimport styled from \"styled-components\";\n\nconst SClipItem = styled.div`\n    width: 3rem;\n    height: 3rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: ${props => props.color ? props.color : 'rgba(255, 255, 255, 0.38)'}; \n    border-radius: 50px;\n    cursor: pointer;\n\n    & img {\n        width: 80%;\n        height: 80%;\n    }\n\n    &:hover {\n        background: var(--purpleColor);\n    }\n`;\n\nconst ClipOneBtn = ({ color, alt, srcIcon, onClick }) => {\n    return (\n        <SClipItem color={color} onClick={onClick}>\n            <img src={srcIcon} alt={alt} />\n        </SClipItem>\n    )\n}\n\nexport default function ClipPlash({ preloadedFiles = [], setFiles = () => { } }) {\n    const addToPlash = (...files) => setFiles([...preloadedFiles, ...files]);\n    const removeFile = filename => setFiles(preloadedFiles.filter(file => file.filename !== filename))\n\n    const preloadedCB = (file, src, type) => {\n        addToPlash({\n            'type': type,\n            'file': file,\n            'src': src,\n            'filename': file.name,\n        });\n    }\n\n    return (\n        <>\n            <ClipOneBtn alt=\"clip\" srcIcon=\"/assets/app/send-gallery.png\" onClick={() => PreloadFile('image/*', preloadedCB)} />\n            <PreloadedFilesPlash preloadedFiles={preloadedFiles} removeFile={removeFile} />\n        </>\n    )\n}","import { RandomKey } from \"utils/content\";\nimport { PopupOpen } from \"../popup/popup\";\n\nimport styled from \"styled-components\";\n\nconst SFilesPlash = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    background: #000000ad;\n`;\n\nconst SClippedFileWrapper = styled.div`\n    position: relative;\n    max-width:  ${props => props.size ? props.size : '15rem'};\n    width: max-content;\n    max-height: ${props => props.size ? props.size : '15rem'};\n    margin: .5rem;\n    padding: .5rem;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: 'space-between';\n    color: var(--onHoverColor);\n    background: #000000ad;\n    border-radius: 10px;\n    cursor: pointer;\n`;\n\nconst SClippedFileSrc = styled.div`\n    width: 100%;\n    \n    & > * {\n        max-width: 100%;\n    }\n`;\n\nconst SRemoveFile = styled.div`\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 1rem;\n    height: 1rem;\n    padding: 5px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: var(--redColor);\n    border-radius: 100%;\n    transition: var(--transitionApp);\n    cursor: pointer;\n\n    &:hover{\n        background: var(--darkRedColor);\n    }\n`;\n\n\nconst RenderClippedFile = ({ id, filename, src, size, onClick = () => { }, removeFile }) => {\n    return (\n        <SClippedFileWrapper size={size} onClick={onClick} >\n            <SRemoveFile onClick={e => e.stopPropagation() || removeFile(id, src)}>\n                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n            </SRemoveFile>\n\n            <SClippedFileSrc>\n                <img src={src} alt=\"uploaded img\" />\n            </SClippedFileSrc>\n            <span>{filename}</span>\n        </SClippedFileWrapper>\n    )\n}\n\nexport default function ClippedFiles({ files = [], removeFile}) {\n    return (\n        <SFilesPlash>\n            {\n                files?.map(\n                    file => <RenderClippedFile key={RandomKey()} {...file} \n                        onClick={e => e.preventDefault() || PopupOpen(RenderClippedFile, { ...file, 'size': '100%' })} \n                        removeFile={removeFile}\n                    />\n                )\n            }\n        </SFilesPlash>\n    )\n}","import { useCallback, useState } from \"react\";\n\nimport { CompareParams, GetValueFromListByIDAndInputValue, OnChangeTransitPoint } from \"utils/effects\";\nimport { POSTRequestWithParams } from \"utils/api\";\nimport { useInput } from \"utils/form\";\nimport { UploadFile } from \"utils/file\";\nimport { DateFromMilliseconds } from \"utils/content\";\nimport { Notify } from \"components/app-notification/notification\";\nimport { ClosePopup } from \"components/popup/popup\";\nimport Input from \"components/form-input/input\";\nimport SubmitBtn from \"components/submit-btn/submit\";\nimport ClipPlash from \"components/clips/clips\";\nimport ClippedFiles from \"components/clipped-files-plash/plash\";\n\nimport styled from \"styled-components\";\n\nconst SParsel = styled.form`\n    padding: 1rem;\n    margin: 1rem;\n    min-width: 80vw;\n\n    & .transit_points,\n    & .price_weigth,\n    & .title_expire,\n    & .contactNumber {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n\n        & > * {\n            flex-basis: 45%;\n        }\n    }\n\n    & .photos {\n        position: relative;\n        margin-bottom: 10rem;\n        padding: 1rem;\n        display: flex;\n        align-items: center;\n\n        &.clipped {\n            margin-bottom: 0;\n            flex-direction: column;\n            align-items: unset;\n        }\n    }\n\n    @media screen and (max-width: 600px) {\n        & .transit_points,\n        & .price_weigth,\n        & .title_expire,\n        & .contactNumber {\n            align-items: unset;\n            flex-direction: column;\n        }\n    }\n`;\n\nconst removeFile = async (id, src, removePhoto) => {\n    const res = await POSTRequestWithParams(\"/r/image\", { 'id': id, 'src': src });\n    if (res?.err !== \"ok\") return Notify('fail', \"Фото не удалилось, попробуйте позднее, или сообщите в службу поддрежки\")\n    removePhoto(id);\n    return Notify('success', \"Фото удалено\")\n}\n\nconst clearAll = (fields = [], setHaveWhatsUp, setPreloaded) => {\n    fields.forEach(f => f.resetField());\n    setHaveWhatsUp(false);\n    setPreloaded([]);\n}\n\nexport default function ManageParsel({ type = \"create\", cb, failText, successText, data }) {\n    const weight = useInput(data?.weight);\n    const price = useInput(data?.price);\n    const title = useInput(data?.title);\n    const expire = useInput(DateFromMilliseconds(data?.expireDatetime));\n    const contactNumber = useInput(data?.contactNumber);\n    const from = useInput(data?.from);\n    const to = useInput(data?.to);\n    const fromID = useInput(data?.fromID);\n    const toID = useInput(data?.toID);\n    const [isHaveWhatsUp, setHaveWhatsUp] = useState(data?.isHaveWhatsUp === 1);\n\n    from.base.onChange = e => OnChangeTransitPoint(from, e, fromID.setCertainValue);\n    to.base.onChange = e => OnChangeTransitPoint(to, e, toID.setCertainValue);\n\n    const [photos, setPhotos] = useState(data?.photos);\n    const [preloadedFiles, setPreloaded] = useState([]);\n\n    const removePhoto = id => setPhotos(photos.filter(ph => ph.id !== id))\n\n    const onSubmit = useCallback(async (e) => {\n        e.preventDefault();\n\n        const oldParams = {\n            'title': data?.title,\n            'fromID': data?.fromID,\n            'toID': data?.toID,\n            'from': data?.from,\n            'to': data?.to,\n            'weight': data?.weight,\n            'price': data?.price,\n            'expireDatetime': data?.expireDatetime,\n            'contactNumber': data?.contactNumber,\n            'isHaveWhatsUp': data?.isHaveWhatsUp,\n        }\n        const comparedParams = CompareParams({\n            'id': data?.id,\n            'title': title.base.value,\n            'fromID': GetValueFromListByIDAndInputValue('from-list', from.base.value),\n            'toID': GetValueFromListByIDAndInputValue('to-list', to.base.value),\n            'from': from.base.value,\n            'to': to.base.value,\n            'weight': weight.base.value,\n            'price': price.base.value,\n            'expireDatetime': Date.parse(expire.base.value),\n            'contactNumber': contactNumber.base.value,\n            'isHaveWhatsUp': isHaveWhatsUp ? 1 : 0,\n        }, oldParams);\n\n        // bcs we have id on new so <= 1\n        if (Object.values(comparedParams).length <= 1 && preloadedFiles.length === 0) return Notify('info', 'Нет изменений');\n\n        // send to edit\n        const res = await POSTRequestWithParams(\"/\" + (type === \"create\" ? \"s\" : \"e\") + \"/parsel\", comparedParams);\n        if (res?.err !== \"ok\") return Notify('fail', failText + \":\" + res?.err);\n        Notify('success', successText);\n\n        // upload images\n        preloadedFiles.forEach(ph => UploadFile(ph.type, ph.file, \"parsel\", type === \"create\" ? res?.data : data?.id))\n\n        // do callback if edit\n        if (cb) {\n            // finally params will be\n            cb(Object.assign(oldParams, comparedParams));\n            ClosePopup();\n        } else {\n            // or clear all if create\n            const fields = [weight, price, title, expire, contactNumber, from, to, fromID, toID];\n            clearAll(fields, setHaveWhatsUp, setPreloaded)\n        }\n    }, [title, from, to, fromID, toID, weight, price, expire, contactNumber, isHaveWhatsUp, preloadedFiles, type, cb, failText, successText, data]);\n\n    return (\n        <SParsel onSubmit={onSubmit}>\n            <div className=\"transit_points\">\n                <Input id=\"from\" type=\"text\" name=\"from\" list=\"from-list\" base={from.base} labelText=\"Откуда\" />\n                <datalist id=\"from-list\"></datalist>\n\n                <Input id=\"to\" type=\"text\" name=\"to\" list=\"to-list\" base={to.base} labelText=\"Куда\" />\n                <datalist id=\"to-list\"></datalist>\n            </div>\n\n            <div className=\"price_weigth\">\n                <Input type=\"number\" name=\"weight\" base={weight.base} labelText=\"Вес (в г)\" />\n                <Input type=\"number\" name=\"price\" base={price.base} labelText=\"Цена (в тг)\" />\n            </div>\n\n            <div className=\"title_expire\">\n                <Input type=\"text\" name=\"title\" base={title.base} labelText=\"Заголовок вашей посылки\" />\n                <Input type=\"datetime-local\" name=\"expireDatetime\" base={expire.base} labelText=\"Доставить до:\" />\n            </div>\n\n            <div className=\"contactNumber\">\n                <Input type=\"tel\" name=\"contactNumber\" base={contactNumber.base} labelText=\"Контакты отправителя\" />\n                <span>\n                    <input onChange={() => setHaveWhatsUp(!isHaveWhatsUp)} defaultChecked={isHaveWhatsUp} type=\"checkbox\" name=\"isHaveWhatsup\" /> Есть WhatsUp?\n                </span>\n            </div>\n\n            {\n                type !== \"create\" && photos && photos.length > 0 &&\n                <div className=\"photos clipped\">\n                    <span>Чтобы удалить фото, нажмите крестик на фото </span>\n                    <ClippedFiles files={photos} removeFile={(id, src) => removeFile(id, src, removePhoto)} />\n                </div>\n            }\n\n            <div className=\"photos\">\n                <span>Чтобы прикрепить фото, нажмите здесь {\"->\"}</span>\n                <ClipPlash setFiles={setPreloaded} preloadedFiles={preloadedFiles} />\n            </div>\n\n            <SubmitBtn value={type === \"create\" ? \"Опубликовать\" : \"Изменить\"} />\n        </SParsel>\n    )\n}","import { RandomKey } from \"utils/content\";\n\nimport styled from \"styled-components\";\n\nconst SLalel = styled.label`\n    display: flex;\n    align-items: center;\n    white-space: nowrap;\n\n    & select {\n        margin-left: 1rem;\n        padding: .5rem;\n        width: 100%;\n        font-size: 1rem;\n        color: var(--offHoverColor);\n        background: none;\n        border: none;\n        border-radius: 5px;\n        outline: none;\n        border-bottom: 1px solid var(--onHoverColor);\n        box-shadow: 4px 4px 3px 0 #00000029;\n    }\n`;\nexport default function Select({ name, text, required = true, options, onChange }) {\n    return (\n        <SLalel>\n            <span>{text}</span>\n            <select name={name} value={options.selected} required={required} onChange={onChange}>\n                {options?.data?.map((opt) => <option key={RandomKey()} value={opt[options.value]}>{options.makeText(opt)}</option>)}\n            </select>\n        </SLalel>\n    )\n}","import { useCallback, useEffect, useState } from \"react\";\n\nimport { CompareParams, GetValueFromListByIDAndInputValue, OnChangeTransitPoint } from \"utils/effects\";\nimport { GetDataByCrieteries, POSTRequestWithParams } from \"utils/api\";\nimport { useInput } from \"utils/form\";\nimport { DateFromMilliseconds } from \"utils/content\";\nimport { Notify } from \"components/app-notification/notification\";\nimport { ClosePopup } from \"components/popup/popup\";\nimport Input from \"components/form-input/input\";\nimport SubmitBtn from \"components/submit-btn/submit\";\n\nimport styled from \"styled-components\";\nimport Select from \"components/form-select/select\";\n\nconst STravel = styled.form`\n    padding: 1rem;\n    margin: 1rem;\n    min-width: 80vw;\n\n    & .transit_points,\n    & .travelType_weigth,\n    & .departure_arrival,\n    & .contactNumber {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n\n        & > * {\n            flex-basis: 45%;\n        }\n    }\n\n    @media screen and (max-width: 600px) {\n        & .transit_points,\n        & .travelType_weigth,\n        & .departure_arrival,\n        & .contactNumber {\n            align-items: unset;\n            flex-direction: column;\n        }\n    }\n`;\n\nconst onChangeTravelType = (e, setID, setTravel) => {\n    console.log(e);\n    setID(e.target.value);\n    const op = Array.from(e.target.options).find(op => op.selected)\n    if (op) setTravel(op.textContent);\n}\n\nconst clearAll = (fields = [], setHaveWhatsUp) => {\n    fields.forEach(f => f.resetField());\n    setHaveWhatsUp(false);\n}\n\nexport default function ManageTraveler({ type = \"create\", cb, failText, successText, data }) {\n    const weight = useInput(data?.weight);\n    const departure = useInput(DateFromMilliseconds(data?.departureDatetime));\n    const arrival = useInput(DateFromMilliseconds(data?.arrivalDatetime));\n    const contactNumber = useInput(data?.contactNumber);\n    const from = useInput(data?.from);\n    const to = useInput(data?.to);\n    const travelType = useInput(data?.travelType);\n    const travelTypeID = useInput(data?.travelTypeID || 1);\n    const fromID = useInput(data?.fromID);\n    const toID = useInput(data?.toID);\n    const [isHaveWhatsUp, setHaveWhatsUp] = useState(data?.isHaveWhatsup === 1);\n    const [travelTypes, setTravelTypes] = useState();\n\n    from.base.onChange = e => OnChangeTransitPoint(from, e, fromID.setCertainValue);\n    to.base.onChange = e => OnChangeTransitPoint(to, e, toID.setCertainValue);\n\n    const getTravelTypes = useCallback(async () => {\n        const res = await GetDataByCrieteries('travelTypes');\n        if (res.err && res?.err !== \"ok\") return setTravelTypes(null);\n        return setTravelTypes(res)\n    }, [])\n\n    const onSubmit = useCallback(async (e) => {\n        e.preventDefault();\n\n        const oldParams = {\n            'travelType': data?.travelType,\n            'travelTypeID': data?.travelTypeID,\n            'fromID': data?.fromID,\n            'toID': data?.toID,\n            'from': data?.from,\n            'to': data?.to,\n            'weight': data?.weight,\n            'departureDatetime': data?.departureDatetime,\n            'arrivalDatetime': data?.arrivalDatetime,\n            'contactNumber': data?.contactNumber,\n            'isHaveWhatsUp': data?.isHaveWhatsUp,\n        }\n        const comparedParams = CompareParams({\n            'id': data?.id,\n            'travelType': travelType.base.value,\n            'travelTypeID': travelTypeID.base.value,\n            'fromID': GetValueFromListByIDAndInputValue('from-list', from.base.value),\n            'toID': GetValueFromListByIDAndInputValue('to-list', to.base.value),\n            'from': from.base.value,\n            'to': to.base.value,\n            'weight': weight.base.value,\n            'departureDatetime': Date.parse(departure.base.value),\n            'arrivalDatetime': Date.parse(arrival.base.value),\n            'contactNumber': contactNumber.base.value,\n            'isHaveWhatsUp': isHaveWhatsUp ? 1 : 0,\n        }, oldParams);\n\n        // bcs we have id on new, so <= 1\n        if (Object.values(comparedParams).length <= 1) return Notify('info', 'Нет изменений');\n\n        // send\n        const res = await POSTRequestWithParams(\"/\" + (type === \"create\" ? \"s\" : \"e\") + \"/travel\", comparedParams);\n        if (res?.err !== \"ok\") return Notify('fail', failText + \":\" + res?.err);\n        Notify('success', successText);\n\n        // do callback if edit\n        if (cb) {\n            // finally params will be\n            cb(Object.assign(oldParams, comparedParams));\n            ClosePopup()\n        } else {\n            // or clear all if create\n            const fields = [weight, departure, arrival, travelTypeID, travelType, contactNumber, from, to, fromID, toID];\n            clearAll(fields, setHaveWhatsUp)\n        }\n    }, [travelTypeID, travelType, from, to, fromID, toID, weight, departure, arrival, contactNumber, isHaveWhatsUp, type, cb, failText, successText, data]);\n\n    useEffect(() => {\n        if (travelTypes === undefined) return getTravelTypes()\n    }, [getTravelTypes, travelTypes])\n\n    console.log('travls', travelTypeID, travelType);\n\n    return (\n        <STravel onSubmit={onSubmit}>\n            <div className=\"transit_points\">\n                <Input id=\"from\" type=\"text\" name=\"from\" list=\"from-list\" base={from.base} labelText=\"Откуда\" />\n                <datalist id=\"from-list\"></datalist>\n\n                <Input id=\"to\" type=\"text\" name=\"to\" list=\"to-list\" base={to.base} labelText=\"Куда\" />\n                <datalist id=\"to-list\"></datalist>\n            </div>\n\n            <div className=\"travelType_weigth\">\n                <Input type=\"number\" name=\"weight\" base={weight.base} labelText=\"Заберу до (в г)\" />\n                <Select name=\"travelType\" text=\"Тип транспорта\" options={{\n                    data: travelTypes,\n                    value: \"id\",\n                    selected: travelTypeID.base.value,\n                    makeText: ({ name }) => name\n                }} onChange={e => onChangeTravelType(e, travelTypeID.setCertainValue, travelType.setCertainValue)} />\n            </div>\n\n            <div className=\"departure_arrival\">\n                <Input type=\"datetime-local\" name=\"departureDatetime\" base={departure.base} labelText=\"Выезд\" />\n                <Input type=\"datetime-local\" name=\"arrivalDatetime\" base={arrival.base} labelText=\"Прибытие\" />\n            </div>\n\n            <div className=\"contactNumber\">\n                <Input type=\"tel\" name=\"contactNumber\" base={contactNumber.base} labelText=\"Контакты отправителя\" />\n                <span>\n                    <input onChange={() => setHaveWhatsUp(!isHaveWhatsUp)} type=\"checkbox\" name=\"isHaveWhatsUp\" /> Есть WhatsUp?\n                </span>\n            </div>\n\n            <SubmitBtn value={type === \"create\" ? \"Опубликовать\" : \"Изменить\"} />\n        </STravel>\n    )\n}","\nimport { useCallback, useEffect, useState } from \"react\";\n\nimport { GetDataByCrieteries, POSTRequestWithParams } from \"utils/api\";\nimport { useInput } from \"utils/form\";\nimport { RandomKey } from \"utils/content\";\nimport { Notify } from \"components/app-notification/notification\";\nimport Input from \"components/form-input/input\";\nimport SubmitBtn from \"components/submit-btn/submit\";\n\nimport styled from \"styled-components\";\n\nconst SToTopType = styled.div`\n    padding: 1rem;\n    margin: 1rem;\n`;\n\nconst SOneItem = styled.div`\n    padding: 1rem;\n    margin: 1rem;\n    display: flex;\n    flex-direction: column;\n    background: ${props => props.color ? props.color : 'var(--grayColor)'};\n    border-radius: 5px;\n    box-shadow: var(--boxShadow);\n    cursor: pointer;\n    transition: var(--transitionApp);\n\n    &:hover {\n        color: var(--onHoverColor);\n        background: var(--onHoverBG);\n    }\n\n    & b {\n        display: block;\n        padding: 5px;\n        margin: 5px;\n        color: var(--onHoverColor);\n        background: #c30000;\n        border-radius: 5px;\n        box-shadow: var(--boxShadow);\n    }\n`;\n\nconst toTopType = async (id, type, code, topID, cb) => {\n    const res = await POSTRequestWithParams(\"/e/toptype\", { 'id': id, 'type': type, 'code': code, 'topID': topID })\n    if (res.err && res.err !== \"ok\") return Notify('fail', 'Не удалось рекламировать');\n    cb()\n}\n\nconst GOnePrice = ({ id, cost, name, color, setPayed, setTopTypeID }) => {\n    const onClick = () => {\n        setPayed(true);\n        setTopTypeID(id);\n    }\n\n    return (\n        <SOneItem color={color} onClick={onClick}>\n            <span>Ваше обьявление будет рекламировано <b> {name} </b></span>\n            <span>Стоимость: <b> {cost} тг </b></span>\n        </SOneItem>\n    )\n}\n\n/**\n * \n * @param type if cost will be relative by type: parsel or travel \n * @param cb callback after click to up\n * @param id parsel/travel id \n */\nexport default function ToTopType({ cb, type, id }) {\n    const [prices, setPrices] = useState();\n    const [isPayed, setPayed] = useState();\n    const [topTypeID, setTopTypeID] = useState();\n    const code = useInput('');\n\n    const getPrices = useCallback(async () => {\n        const res = await GetDataByCrieteries('toptypes');\n        if (res.err && res.err !== \"ok\") {\n            setPrices(null);\n            return Notify('fail', \"Ошибка. Попробуйте позднее\");\n        }\n        setPrices(res)\n    }, [])\n\n    useEffect(() => {\n        if (prices === undefined) return getPrices()\n    }, [getPrices, prices])\n\n\n    if (!prices) return <div>Ошибка. Попробуйте позднее</div>\n    return (\n        <SToTopType>\n            {\n                isPayed\n                    ? <div>\n                        <Input index=\"2\" id=\"code\" type=\"text\" name=\"code\" base={code.base} labelText=\"Введите 8-значный код:\"\n                            minLength=\"8\" maxLength=\"8\" placeholder=\"Mfa7sd45\"\n                        />\n\n                        <SubmitBtn value=\"Рекламировать!\" onClick={() => toTopType(id, type, code, topTypeID, cb)} />\n                    </div>\n                    : <>\n                        <h2>Выберите на какой промежуток Вы хотите рекламировать</h2>\n\n                        <div className=\"prices\">\n                            {prices?.map(p => <GOnePrice key={RandomKey()} {...p} setPayed={setPayed} setTopTypeID={setTopTypeID} />)}\n                        </div>\n                    </>\n            }\n        </SToTopType>\n    )\n}","export const ExamplePrice = {\n    'id': 1,\n    'cost': 500,\n}","import { useCallback, useEffect, useState } from \"react\";\n\nimport { GetDataByCrieteries, POSTRequestWithParams } from \"utils/api\";\nimport { useInput } from \"utils/form\";\nimport { ClosePopup } from \"components/popup/popup\";\nimport { Notify } from \"components/app-notification/notification\";\nimport Input from \"components/form-input/input\";\nimport SubmitBtn from \"components/submit-btn/submit\";\n\nimport { ExamplePrice } from \"./ex\";\nimport styled from \"styled-components\";\n\nconst SToUp = styled.div`\n    padding: 1rem;\n    margin: 1rem;\n\n    & .price {\n        color: red;\n        font-size: 1.3rem;\n        background: yellow;\n    }\n\n    & .answer {\n        display: flex;\n        align-items: center;\n        justify-content: space-evenly;\n\n        & span {\n            padding: .5rem 1rem;\n            margin: 1rem;\n            color: var(--onHoverColor);\n            background: var(--blueColor);\n            border-radius: 10px;\n            cursor: pointer;\n            transition: var(--transtionApp);\n\n            &:nth-child(2) {\n                background: red;\n            }\n\n            &:hover{\n                background: var(--onHoverBG);\n            }\n        }\n    }\n`;\n\nconst toUp = async (id, type, code, cb) => {\n    const res = await POSTRequestWithParams(\"/e/up\", { 'id': id, 'type': type, 'code': code })\n    if (res.err && res.err !== \"ok\") return Notify('fail', 'Не удалось поднять');\n    cb()\n}\n\n/**\n * \n * @param type if cost will be relative by type: parsel or travel \n * @param cb callback after click to up\n * @param id parsel/travel id \n */\nexport default function ToUp({ cb, type, id }) {\n    const [price, setPrice] = useState();\n    const [isPayed, setPayed] = useState();\n    const code = useInput('');\n\n    const getPrice = useCallback(async () => {\n        const res = await GetDataByCrieteries('price');\n        if (res?.err !== \"ok\") return Notify('fail', \"Ошибка. Попробуйте позднее\") || setPrice(ExamplePrice)\n        setPrice(res)\n    }, [])\n\n    useEffect(() => {\n        if (!price) return getPrice()\n    }, [getPrice, price])\n\n\n    if (!price) return <div>Ошибка. Попробуйте позднее</div>\n    return (\n        <SToUp>\n            <h2>Поднять Ваше объявление?</h2>\n\n            <div className=\"price\">\n                Стоимость: {price?.cost} тг\n            </div>\n\n            <div className=\"answer\">\n                <span onClick={() => setPayed(true)}>Да</span>\n                <span onClick={ClosePopup}>Нет</span>\n            </div>\n\n            {\n                isPayed &&\n                <div>\n                    <Input index=\"2\" id=\"code\" type=\"text\" name=\"code\" base={code.base} labelText=\"Введите 8-значный код:\"\n                        minLength=\"8\" maxLength=\"8\" placeholder=\"Mfa7sd45\"\n                    />\n\n                    <SubmitBtn value=\"Поднять!\" onClick={() => toUp(id, type, code, cb)} />\n                </div>\n            }\n        </SToUp>\n    )\n}","import { Notify } from \"components/app-notification/notification\";\nimport { PopupOpen } from \"components/popup/popup\";\nimport ManageParsel from \"components/parsel/manage/manage\";\nimport ManageTraveler from \"components/traveler/manage/manage\";\nimport ToTopType from \"components/to-toptype/toptype\";\nimport ToUp from \"components/to-up/up\";\n\n\nimport { GetDataByCrieteries, POSTRequestWithParams } from \"./api\";\n// just debounce\nexport function Debounce(fn, ms) {\n    let timeOut;\n    return (...args) => {\n        clearTimeout(timeOut);\n        timeOut = setTimeout(() => { fn(...args) }, ms)\n    }\n}\n\nexport const DbnceCities = Debounce(async(e) => {\n    const res = await GetDataByCrieteries(\"search\", { 'type': 'cities', 'q': e.target.value });\n    if (res.err) return Notify(\"fail\", \"Не удалось загрузить города\");\n\n    const options = res.map(({ id, name }) => {\n        const op = document.createElement(\"option\");\n        op.value = name;\n        op.textContent = id;\n        return op;\n    })\n\n    const dt = document.getElementById(e.target.list.id);\n    if (!dt) return;\n    dt.innerHTML = \"\";\n    dt.append(...options);\n}, 500)\n\n// show & hide password by changing input type\nexport const ShowAndHidePassword = (e, passElem, passwordToggle) => {\n    const elem = e.target;\n    passwordToggle.toggleType();\n    elem.classList.toggle('fa-eye-slash');\n    if (passwordToggle.state === \"password\") passElem.setAttribute('type', 'text');\n    else passElem.setAttribute('type', 'password');\n}\n\n/**\n * for lazy load and keeping focus with scrolling\n * @param e event\n * @param isStopLoad stop load or no\n * @param isScrollingToTop load on scroll to top or bottom\n * @param loadCallback what do after react edge\n */\nexport const ScrollHandler = Debounce(async(e, isStopLoad, isScrollingToTop = false, loadCallback = async() => {}) => {\n    if (isStopLoad) return;\n\n    const parent = e.target;\n    const pRec = parent.getBoundingClientRect();\n    if (\n        (isScrollingToTop && parent.scrollTop === 0) ||\n        (!isScrollingToTop && parent.scrollTop >= Math.round((parent.scrollHeight - pRec.height) * .75))\n    ) {\n        const priorEdgeChildNum = isScrollingToTop ? 0 : parent.childElementCount - 1;\n\n        if (await loadCallback()) {\n            setTimeout(() => {\n                // smooth scroll\n                const el = parent.childNodes[priorEdgeChildNum];\n                if (el) el.scrollIntoView({ behavior: \"smooth\" });\n            }, 100);\n        }\n    }\n}, 100);\n\nexport const EditItem = async(type, data, cb) =>\n    PopupOpen(type === \"parsel\" ? ManageParsel : ManageTraveler, { 'cb': cb, 'data': data, 'type': 'edit' })\n\nexport const RemoveItem = async(id, type, cb) => {\n    const res = await POSTRequestWithParams(\"/r/\" + (type === \"parsel\" ? \"parsel\" : 'travel'), { 'id': id })\n    if (res.err && res.err !== \"ok\") return Notify('fail', 'Не удалено');\n    cb()\n}\n\nexport const TopItem = async(id, type, cb) => PopupOpen(ToUp, { 'cb': cb, \"type\": type, 'id': id })\n\nexport const PaintItem = async(id, type, cb) => PopupOpen(ToTopType, { 'cb': cb, \"type\": type, 'id': id })\n\nconst removeEmptyFields = (obj = {}) => {\n    for (let [k, v] of Object.entries(obj))\n        if (v === \"\" || !v) delete obj[k];\n    return obj\n}\n\nexport const CompareParams = (newParams, currentParams) => {\n    const res = {};\n    newParams = removeEmptyFields(newParams);\n    for (let [k, v] of Object.entries(newParams)) {\n        if (newParams[k] !== currentParams[k]) {\n            res[k] = v;\n        }\n    }\n    return res;\n}\n\nexport const GetValueFromListByIDAndInputValue = (listID, inputValue) => {\n    const dt = Array.from(document.getElementById(listID).childNodes)\n    if (dt.length === 0) return;\n    const op = dt.find(option => option.value.includes(inputValue));\n    if (op) return op.textContent;\n}\n\nexport const OnChangeTransitPoint = async(point, e) => {\n    point.setCertainValue(e.target.value);\n    DbnceCities(e);\n}","import { useCallback, useEffect, useState } from \"react\";\n\nimport { GetDataByCrieteries } from \"utils/api\";\nimport { RandomKey, DateFromMilliseconds } from \"utils/content\";\nimport { EditItem, PaintItem, RemoveItem, TopItem } from \"utils/effects\";\nimport { Notify } from \"components/app-notification/notification\";\n\nimport styled from \"styled-components\"\n\nconst SParsel = styled.div`\n    position: relative;\n    padding: 1rem;\n    min-height: 30vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    background: ${props => props.color ? props.color : 'white'};\n    border: 1px solid black;\n    border-radius: 10px;\n\n    & .info {\n        display: flex;\n        justify-content: space-between;\n\n        & .general_info {\n            display: flex;\n            flex-direction: column;\n\n            & .price b {\n                text-decoration: underline;\n            }\n        }\n\n        & .other_info  {\n            & .phones > * {\n                margin: .5rem;\n                padding: .5rem;\n                font-size: 4rem;\n                border-radius: 10px;\n                cursor: pointer;\n                transition: var(--transitionApp);\n\n                &:hover {\n                    color: var(--onHoverColor);\n                    background: var(--blueColor);\n                }\n            }\n\n            & .expire {\n                margin: .5rem;\n            }\n        }\n    }\n\n    & .photos {\n        display: flex;\n        flex-wrap: wrap;\n\n        & span {\n            max-width: 20vw;\n            display: block;\n            align-self: end;\n            margin: 5px;\n            border-radius: 5px;\n            background: #000000a3;\n\n            & img {\n                width: 100%;\n            }\n        }\n    }\n\n    & .manage {\n        position: absolute;\n        right: 0;\n        top: 0;\n        padding: .5rem;\n        margin: .5rem;    \n        background: #2f3a64;\n        color: var(--onHoverColor);\n        font-size: 1rem;\n        border-radius: 5px;\n\n        & .manage-action {\n            cursor: pointer;\n            margin: .5rem;\n            transition: var(--transitionApp);\n            text-align: right;\n            vertical-align: middle;\n            \n            &:hover {\n                background: var(--darkGreyColor);\n            }\n        }\n\n        & .manage-actions {\n            display: flex;\n            flex-direction: column;\n        }\n    }\n\n    @media screen and (max-width: 600px) {\n        & .manage {\n            font-size: 1.5rem;\n        }\n    }\n`;\n\nexport default function Parsel({ data, isMy = false, changeItem, removeItem }) {\n    const [photos, setPhotos] = useState();\n    const [isOpened, setOpened] = useState(false);\n\n    const getPhotos = useCallback(async () => {\n        const res = await GetDataByCrieteries(\"images\", { \"id\": data.id });\n        if (res?.err === \"n/d\") return setPhotos(null);\n        if (res.err && res.err !== \"ok\") return Notify('fail', \"Не удалось загрузить прикрепленные фото\");\n        return setPhotos(res?.data || res);\n    }, [data]);\n\n    useEffect(() => {\n        if (photos === undefined) return getPhotos()\n    }, [getPhotos, photos])\n\n    return (\n        <SParsel color={data.color}>\n            <div className=\"info\">\n                <div className=\"general_info\">\n                    <span>{data.from}-{data.to}</span>\n                    <span>{data.title}</span>\n                    <span>Вес: {data.weight/1000} кг</span>\n                    <span className=\"price\">Цена: <b> {data.price} </b> тг</span>\n                </div>\n\n                <div className=\"other_info\">\n                    <div className=\"phones\">\n                        {\n                            data.isHaveWhatsUp === 1 &&\n                            <a target=\"_blank\" rel=\"noreferrer\" href={`https://api.whatsapp.com/send?phone=${data.contactNumber}&text=\"Добрый день, пишу из приложения Жибек насчет вашей посылки: ${data.title}\"`}>\n                                <i className=\"fa fa-whatsapp\" aria-hidden=\"true\"></i>\n                            </a>\n                        }\n\n                        <span onClick={() => window.open(\"tel:\" + data.contactNumber)}>\n                            <i className=\"fa fa-phone\" aria-hidden=\"true\"></i>\n                        </span>\n                    </div>\n                    <div className=\"expire\">\n                        <span>Надо доставить до: {DateFromMilliseconds(data.expireDatetime, false)}</span>\n                    </div>\n                </div>\n            </div>\n\n            {\n                photos\n                    ? <div className=\"photos\">\n                        {photos?.map(({ src }) => <span key={RandomKey()}><img src={src} alt=\"\" /></span>)}\n                    </div>\n                    : <div className=\"photos\"> Нет фото</div>\n            }\n\n            {\n                isMy &&\n                <div className=\"manage\">\n                    <div className=\"manage-action\" onClick={() => setOpened(!isOpened)}>\n                        <span>Действия</span>\n                    </div>\n\n                    {\n                        isOpened &&\n                        <div className=\"manage-actions\">\n                            <span className=\"manage-action\"\n                                onClick={() => EditItem(\"parsel\", {...data, 'photos': photos}, newData => changeItem(data.id, newData))}\n                            >\n                                <i className=\"fa fa-pencil\" aria-hidden=\"true\">Редактировать</i>\n                            </span>\n                            <span className=\"manage-action\" onClick={() => RemoveItem(data.id, \"parsel\", () => removeItem(data.id))}>\n                                <i className=\"fa fa-trash\" aria-hidden=\"true\">Удалить</i>\n                            </span>\n                            <span className=\"manage-action\" onClick={() => PaintItem(data.id, \"parsel\", newData => changeItem(data.id, Object.assign({}, data, newData)))}>\n                                <i className=\"fa fa-paint-brush\" aria-hidden=\"true\">Покрасить</i>\n                            </span>\n                            <span className=\"manage-action\" onClick={() => TopItem(data.id, \"parsel\", newData => changeItem(data.id, Object.assign({}, data, newData)))}>\n                                <i className=\"fa fa-level-up\" aria-hidden=\"true\">Поднять</i>\n                            </span>\n                        </div>\n                    }\n                </div>\n            }\n        </SParsel>\n    )\n}","import { useState } from \"react\";\n\nimport { DateFromMilliseconds } from \"utils/content\";\nimport { EditItem, PaintItem, RemoveItem, TopItem } from \"utils/effects\";\n\nimport styled from \"styled-components\";\n\nconst STraveler = styled.div`\n    position: relative;\n    padding: 1rem;\n    min-height: 30vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    background: ${props => props.color ? props.color : 'white'};\n    border: 1px solid black;\n    border-radius: 10px;\n\n    & .info {\n        display: flex;\n        justify-content: space-between;\n\n        & .general_info {\n            display: flex;\n\n            & div {\n                display: flex;\n                flex-direction: column;\n                margin: 1rem;\n            }\n\n            & .weigth b {\n                text-decoration: underline;\n            }\n        }\n\n        & .other_info  {\n            & .phones > * {\n                margin: .5rem;\n                padding: .5rem;\n                font-size: 4rem;\n                border-radius: 10px;\n                cursor: pointer;\n                transition: var(--transitionApp);\n\n                &:hover {\n                    color: var(--onHoverColor);\n                    background: var(--blueColor);\n                }\n            }\n        }\n    }\n\n    & .manage {\n        position: absolute;\n        right: 0;\n        top: 0;\n        padding: .5rem;\n        margin: .5rem;    \n        background: #2f3a64;\n        color: var(--onHoverColor);\n        font-size: 1rem;\n        border-radius: 5px;\n\n        & .manage-action {\n            cursor: pointer;\n            margin: .5rem;\n            transition: var(--transitionApp);\n            text-align: right;\n            vertical-align: middle;\n            \n            &:hover {\n                background: var(--darkGreyColor);\n            }\n        }\n\n        & .manage-actions {\n            display: flex;\n            flex-direction: column;\n        }\n    }\n\n    @media screen and (max-width: 600px) {\n        & .manage {\n            font-size: 1.5rem;\n        }\n    }\n`;\n\nexport default function Traveler({ data, isMy = false, changeItem, removeItem }) {\n    const [isOpened, setOpened] = useState(false);\n\n    return (\n        <STraveler color={data.color}>\n            <div className=\"info\">\n                <div className=\"general_info\">\n                    <div className=\"common\">\n                        <span>{data.from}-{data.to}</span>\n                        <span className=\"weight\">Заберу до: <b> {data.weight/1000} </b> кг</span>\n                        <span>Тип транспорта: {data.travelType}</span>\n                    </div>\n\n                    <div className=\"dates\">\n                        <span> <b> Выезд: </b> {DateFromMilliseconds(data.departureDatetime, false)}</span>\n                        <span> <b> Прибытие: </b> {DateFromMilliseconds(data.arrivalDatetime, false)}</span>\n                    </div>\n                </div>\n\n                <div className=\"other_info\">\n                    <div className=\"phones\">\n                        {\n                            data.isHaveWhatsUp === 1 &&\n                            <a target=\"_blank\" rel=\"noreferrer\" href={`https://api.whatsapp.com/send?phone=${data.contactNumber}&text=\"Добрый день, пишу из приложения Жибек насчет передачи посылки\"`}>\n                                <i className=\"fa fa-whatsapp\" aria-hidden=\"true\"></i>\n                            </a>\n                        }\n\n                        <span onClick={() => window.open(\"tel:\" + data.contactNumber)}>\n                            <i className=\"fa fa-phone\" aria-hidden=\"true\"></i>\n                        </span>\n                    </div>\n\n                </div>\n            </div>\n\n            {\n                isMy &&\n                <div className=\"manage\">\n                    <div className=\"manage-action\" onClick={() => setOpened(!isOpened)}>\n                        <span>Действия</span>\n                    </div>\n\n                    {\n                        isOpened &&\n                        <div className=\"manage-actions\">\n                            <span className=\"manage-action\"\n                                onClick={\n                                    () =>\n                                        EditItem(\n                                            \"traveler\",\n                                            data,\n                                            newData => changeItem(data.id, newData)\n                                        )\n                                }\n                            >\n                                <i className=\"fa fa-pencil\" aria-hidden=\"true\">Редактировать</i>\n                            </span>\n                            <span className=\"manage-action\" onClick={() => RemoveItem(data.id, \"traveler\", () => removeItem(data.id))}>\n                                <i className=\"fa fa-trash\" aria-hidden=\"true\">Удалить</i>\n                            </span>\n                            <span className=\"manage-action\" onClick={() => PaintItem(data.id, \"traveler\", newData => changeItem(data.id, Object.assign({}, data, newData)))}>\n                                <i className=\"fa fa-paint-brush\" aria-hidden=\"true\">Покрасить</i>\n                            </span>\n                            <span className=\"manage-action\" onClick={() => TopItem(data.id, \"traveler\", newData => changeItem(data.id, Object.assign({}, data, newData)))}>\n                                <i className=\"fa fa-level-up\" aria-hidden=\"true\">Поднять</i>\n                            </span>\n                        </div>\n                    }\n                </div>\n            }\n        </STraveler>\n    )\n}","import { useEffect, useState } from \"react\";\n\nimport { ScrollHandler } from \"utils/effects\";\nimport { useFromTo } from \"utils/hooks\";\nimport { RandomKey } from \"utils/content\";\nimport Parsel from \"components/parsel/parsel\";\nimport Traveler from \"components/traveler/traveler\";\n\nimport styled from \"styled-components\";\n\nconst SHistory = styled.section`\n    padding: 1rem;\n\n    & .history-tabs {\n        display: flex;\n        align-items: center;\n\n        & span {\n            margin: .5rem;\n            padding: 1rem;\n            color: var(--onHoverColor);\n            border-radius: 10px;\n            transition: var(--transitionApp);\n            cursor: pointer;\n\n            &.active,\n            &:hover {\n                background: var(--blueColor);\n            }\n        }\n    }\n\n    & .history {\n        padding: 1rem;\n        max-height: 60vh;\n        overflow: auto;\n        border-radius: 10px;\n        background: var(--offHoverBG);\n    }\n`\n\nconst loadHistory = (getType, getTypeOnRus, getPart) => getPart(getType, { 'type': 'user' }, 'Не удалось загрузить ' + getTypeOnRus)\n\nconst configHistoryParams = tab => {\n    if (tab === 0) return ['parsels', 'посылки', Parsel];\n    return ['travelers', 'путешествия', Traveler]\n}\n\nexport default function History() {\n    const [tab, setTab] = useState(0);\n    const { datalist, isStopLoad, isLoaded, getPart, zeroState, setDataList } = useFromTo()\n\n    const [getType, getTypeOnRus, Item] = configHistoryParams(tab);\n\n    const changeItem = (id, newData) => {\n        const index = datalist.findIndex(d => d.id === id)\n        datalist[index] = newData\n        setDataList([...datalist]);\n    }\n\n    const removeItem = id => setDataList([...datalist.filter(d => d.id !== id)])\n\n    useEffect(() => {\n        if (datalist.length === 0 && !isLoaded) {\n            loadHistory(getType, getTypeOnRus, getPart)\n        }\n    }, [datalist, isLoaded, getType, getTypeOnRus, tab, getPart, zeroState]);\n\n    return (\n        <SHistory>\n            <div className=\"history-tabs\">\n                <span className={tab === 0 ? 'active' : ''} onClick={() => setTab(0) || zeroState()}>Ваши посылки</span>\n                <span className={tab === 1 ? 'active' : ''} onClick={() => setTab(1) || zeroState()}>Ваши путешествия</span>\n            </div>\n\n            {\n                datalist.length > 0\n                ? <div className=\"history\" onScroll={e => ScrollHandler(e, isStopLoad, false, () => loadHistory(getType, getTypeOnRus, getPart))}>\n                    {datalist.map(d => <Item key={RandomKey()} data={d} isMy={true} changeItem={changeItem} removeItem={removeItem} />)}\n                </div>\n                : <div className=\"history\">Отсутствует</div>\n            }\n        </SHistory>\n\n    )\n}","import { useCallback, useState } from \"react\";\n\nimport { Notify } from \"components/app-notification/notification\";\n\nimport { GetDataByCrieteries } from \"./api\";\n\n// for lazy load\nexport const useFromTo = (initState = [], step = 10) => {\n    const [fromToState, setFromToState] = useState({\n        'start': 0,\n        'isStopLoad': false,\n        'isLoaded': false,\n        'datalist': initState,\n    });\n\n    const setDataList = state => setFromToState(Object.assign({}, fromToState, { 'datalist': state }));\n\n    const getPart = useCallback(async(getWhat = \"\", params = {}, failText = \"\", isAppToEnd = true, isNeedClear = false) => {\n        if (getWhat === \"\" || failText === \"\") return Notify('fail', failText);\n\n        const res = await GetDataByCrieteries(getWhat, {\n            ...params,\n            'from': fromToState.start,\n            'step': step\n        });\n\n        if (res.err && res.err !== 'ok') {\n            fromToState.isStopLoad = true;\n            fromToState.isLoaded = true;\n            setFromToState(Object.assign({}, fromToState));\n            return Notify('fail', failText + \" : \" + res.err);\n        }\n\n        if (!fromToState.isLoaded) fromToState.isLoaded = true;\n        if (isNeedClear) fromToState.datalist = res;\n        else if (isAppToEnd) fromToState.datalist = [...fromToState.datalist, ...res];\n        else fromToState.datalist = [...res, ...fromToState.datalist];\n\n        if (res.length < step) fromToState.isStopLoad = true;\n        else fromToState.start += step;\n\n        setFromToState(Object.assign({}, fromToState));\n        return true;\n    }, [fromToState, step])\n\n    const zeroState = () => setFromToState(Object.assign({}, fromToState, {\n        'start': 0,\n        'isStopLoad': false,\n        'isLoaded': false,\n        'datalist': initState,\n    }));\n\n    return {\n        'datalist': fromToState.datalist,\n        'isStopLoad': fromToState.isStopLoad,\n        'isLoaded': fromToState.isLoaded,\n        setDataList,\n        getPart,\n        zeroState,\n    }\n}","import { useCallback, useEffect, useState } from \"react\";\n\nimport { GetDataByCrieteries } from \"utils/api\";\nimport Input from \"components/form-input/input\";\nimport Select from \"components/form-select/select\";\n\nexport default function PhoneField({ index, base, required }) {\n    const [codes, setCodes] = useState();\n\n    const getCodes = useCallback(async () => {\n        const res = await GetDataByCrieteries('countryCodes');\n        if (res.err && res?.err !== \"ok\") return setCodes(null);\n        return setCodes(res)\n    }, [])\n\n    useEffect(() => {\n        if (codes === undefined) return getCodes()\n    }, [getCodes, codes])\n\n\n    if (!codes) return null;\n    return (\n        <div>\n            <Input index={index} id=\"phone\" type=\"tel\" name=\"phone\" base={base} labelText=\"Телефон:\"\n                minLength=\"10\" maxLength=\"15\" placeholder=\"7777777777\" required={required}\n            />\n\n            <Select text=\"Код страны:\" name=\"countryCode\" required={required} options={{\n                data: codes,\n                value: \"code\",\n                makeText: ({code, country}) => `${code} (${country})`\n            }} />\n        </div>\n    )\n}","import { ShowAndHidePassword } from 'utils/effects';\nimport Input from '../form-input/input';\n\nimport styled from 'styled-components';\n\nconst SPasswordWrapper = styled.div`\n    display: flex;\n    align-items: baseline;\n    cursor: pointer;\n\n    & input {\n        margin: 0 1rem;\n        flex-grow: 1;\n    }\n\n    & i {\n        padding: 5px;\n        background: var(--offHoverBG);\n        border-radius: 5px;\n        box-shadow: 2px 2px 2px 0 #00000061;\n    }\n`;\n\nexport default function PasswordField({ index, id, required, hidden = false, labelText, placeholder, pass, passToggle }) {\n    return (\n        <SPasswordWrapper>\n            <Input index={index} id={id} type=\"password\" name=\"password\" base={pass.base} required={required}\n                minLength=\"8\" maxLength=\"30\" placeholder={placeholder} labelText={labelText} hidden={hidden}\n            />\n\n            {\n                !hidden &&\n                <i className=\"fa fa-eye fa-eye-slash\"\n                    aria-hidden=\"true\"\n                    title=\"show/hide password\"\n                    onClick={e => {\n                        ShowAndHidePassword(e, document.getElementById(id), passToggle);\n                    }}\n                ></i>\n            }\n        </SPasswordWrapper>\n    )\n}","import { useState } from \"react\";\n\nimport { USER } from \"constants/constants\";\nimport { SubmitFormData, useInput, useTogglePassword } from \"utils/form\";\nimport { UserOnline } from \"utils/user\";\nimport { Notify } from \"components/app-notification/notification\";\nimport PhoneField from \"components/phone-field/field\";\nimport SubmitBtn from \"components/submit-btn/submit\";\nimport Input from \"components/form-input/input\";\nimport PasswordField from \"components/password-field/password\";\n\nimport styled from \"styled-components\";\n\nlet afterStyles = [];\n\nconst SForms = styled.form `\n    padding: 2rem;\n`;\n\nexport default function EditProfile() {\n    const nickname = useInput('');\n    const phone = useInput('');\n    const pass = useInput('');\n    const passToggle = useTogglePassword()\n    const code = useInput('');\n    const [step, setStep] = useState(1);\n\n    const fields = [phone, nickname, pass, code]; // fields for reset\n\n    const onSuccessStep1 = (data) => {\n        Notify('success', \"Отправлено смс на номер \" + data?.login + \". Возьмите оттуда код подтверждения\")\n        setStep(2);\n    }\n    const onSuccessStep2 = () => {\n        UserOnline(USER.id)\n        Notify('success', `Вы успешно изменили ваши данные.`)\n    }\n    const onFail = err => Notify('fail', 'Ошибка регистрации:' + err);\n\n    return (\n        step === 1\n            ? <SForms action=\"/e/user/confirm\" onSubmit={async (e) => {\n                afterStyles = await SubmitFormData(e, afterStyles, fields, undefined, onSuccessStep1, onFail, false);\n            }}>\n                <h3>Смена данных(шаг 1). Введите только то, что хотите</h3>\n\n                <PhoneField index=\"0\" base={phone.base} required={false} />\n\n                <Input index=\"1\" id=\"nickname\" type=\"text\" name=\"nickname\" base={nickname.base} labelText=\"Имя(никнейм):\"\n                    minLength=\"3\" maxLength=\"20\" placeholder={USER.nickname} required={false}\n                />\n                <PasswordField index=\"2\" id=\"password\" name=\"password\" labelText=\"Пароль:\"\n                    placeholder=\"User1234\" pass={pass} passToggle={passToggle} required={false}\n                />\n\n                <SubmitBtn value=\"Отправить!\" />\n            </SForms>\n\n            : <SForms action=\"/e/user\" onSubmit={async (e) => {\n                afterStyles = await SubmitFormData(e, afterStyles, fields, undefined, onSuccessStep2, onFail);\n            }}>\n                <h3>Смена данных(шаг 2)</h3>\n\n                <input hidden type=\"tel\" name=\"phone\" {...phone.base} />\n                <input hidden type=\"text\" name=\"nickname\" {...nickname.base} />\n                <input hidden type=\"password\"  name=\"password\" {...pass.base} />\n        \n                <Input index=\"3\" id=\"code\" type=\"text\" name=\"code\" base={code.base} labelText=\"8-значный код:\"\n                    minLength=\"8\" maxLength=\"8\" placeholder=\"Mfa7sd45\"\n                />\n\n                <SubmitBtn value=\"Отправить!\" />\n            </SForms>\n    )\n}","import { useState } from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\n\nimport { USER } from 'constants/constants';\nimport { SignOut } from 'utils/user';\nimport { PopupOpen } from 'components/popup/popup';\n\nimport History from './history/history';\nimport EditProfile from './edit-profile/profile';\nimport styled from 'styled-components';\n\nconst SAside = styled.aside`\n    grid-area: aside;\n    position: fixed;\n    left: 100vw;\n    padding: 1rem;\n    width: 80vw;\n    height: 100vh;\n    background: #2b2b2be0;\n    transition: var(--transitionApp);\n    z-index: 10;\n    opacity: .9;\n\n    &.open {\n        transform: translate(-80vw);\n    }\n\n    & .open-btn {\n        position: absolute;\n        right: 100%;\n        top: 80%;\n        padding: 1rem;\n        border-radius: 5px;\n        font-size: 1.5rem;\n        color: white;\n        background:var(--blueColor);\n        z-index: 15;\n        cursor: pointer;\n    }\n`\n\nconst SUser = styled.div`\n    margin: 1rem;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    & > * {\n        display: flex;\n        align-items: center;\n    }\n`\n\nconst SLogo = styled.div`\n    margin: auto;\n    width: 10vw;\n    display: block;\n    overflow: hidden;\n    transition: var(--transitionApp);\n\n    &:hover {\n        filter: brightness(0.5);\n    }\n\n    & img {\n        height: 100%;\n        width: 100%;\n    }\n`\n\nconst SNickname = styled.div`\n    margin: .5rem;\n    padding: .5rem;\n    width: max-content;\n    max-width: 100%;\n    text-transform: uppercase;\n    font-weight: bold;\n    text-align: center;\n    word-break: break-all;\n    background: var(--onHoverColor);\n    border-radius: 5px;\n    transition: var(--transitionApp);\n`\n\nconst SLogout = styled(SNickname)`\n    color: var(--redColor);\n    cursor: pointer;\n\n    &:hover {\n        background: var(--redColor);\n        color: var(--onHoverColor);\n    }\n`\n\nconst SEdit = styled(SNickname)`\n    cursor: pointer;\n\n    &:hover {\n        background: var(--redColor);\n        color: var(--onHoverColor);\n    }\n`;\n\nexport default function Aside() {\n    const [isOpened, setOpened] = useState(false);\n    const history = useHistory();\n\n    return (\n        <SAside className={isOpened ? \"open\" : \"\"}>\n            {/* aside open/close btn */}\n            <div className=\"open-btn\" onClick={() => setOpened(!isOpened)}>\n                <i className=\"fa fa-bars\" aria-hidden=\"true\"></i>\n            </div>\n\n            {\n                isOpened &&\n                <>\n                    <SLogo as={NavLink} to=\"/\" >\n                        <img src=\"/assets/app/logo192.png\" alt=\"logo\" />\n                    </SLogo>\n\n                    <SUser>\n                        {\n                            USER.status === \"online\"\n                                ? <div>\n                                    <SNickname>\n                                        <i className=\"fa fa-user\" aria-hidden=\"true\"></i>\n                                        {USER.nickname} ({USER.phoneNumber})\n                                    </SNickname>\n                                    <SEdit onClick={()=>PopupOpen(EditProfile, {})}>\n                                        <i className=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                                    </SEdit>\n                                </div>\n                                : <SNickname>Здесь будет ваше имя</SNickname>\n                        }\n\n                        {\n                            USER.status === \"online\"\n                                ? <SLogout onClick={() => SignOut(history)}>\n                                    <i className=\"fa fa-sign-out\" aria-hidden=\"true\"></i>\n                                    Выход\n                                </SLogout>\n                                : <SLogout onClick={() => history.push(\"/sign\")}>\n                                    <i className=\"fa fa-sign-in\" aria-hidden=\"true\"></i>\n                                    Войти\n                                </SLogout>\n                        }\n                    </SUser>\n\n                    {\n                        USER.status === \"online\" && <History />\n                    }\n                </>\n            }\n        </SAside>\n    )\n}","import { NavLink } from 'react-router-dom';\n\nimport styled from 'styled-components';\n\nconst SHeader = styled.header`\n    grid-area: header;\n    position: fixed;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    height: 7vh;\n    padding: 1rem;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    background: var(--blueColor);\n    z-index: 5;\n`;\n\nconst SNavLink = styled(NavLink)`\n    margin: 0.5rem 0;\n    padding: 0.5rem;\n    flex-basis: 20%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border: 1px solid #231E2F;\n    border-radius: 5px;\n    color: var(--onHoverColor);\n    text-shadow: 1px 1px 5px black;\n    text-decoration: none;\n    text-transform: uppercase;\n    transition: var(--transitionApp);\n\n    &.active,\n    &:hover {\n        background: var(--onHoverColor);\n    }\n`\n\n// Generate navlink\nconst GNavLink = ({isExact, to, linkText}) => {\n    return (\n        <SNavLink exact={isExact} activeClassName=\"active\" to={to}>\n            <span className=\"nav-link-text\">{linkText}</span>\n        </SNavLink>\n    )\n}\n\nexport default function Header() {\n    return (\n        <SHeader>\n            <GNavLink isExact={true} to=\"/parsel\"       linkText=\"Отправит посылку\" />\n            <GNavLink isExact={true} to=\"/parsels\"      linkText=\"Лента посылок\" />\n            <GNavLink isExact={true} to=\"/traveler\"     linkText=\"Я попутчик\" />\n            <GNavLink isExact={true} to=\"/travelers\"    linkText=\"Лента попутчиков\" />\n        </SHeader>\n    )\n}","import { useState } from 'react';\nimport { useHistory } from 'react-router';\n\nimport { SubmitFormData, useInput } from 'utils/form';\nimport { Notify } from 'components/app-notification/notification';\nimport Input from 'components/form-input/input';\nimport SubmitBtn from 'components/submit-btn/submit';\nimport PhoneField from 'components/phone-field/field';\n\nlet afterStyles = []; // form handle all ::after notifications\n\nexport default function SignUp() {\n    const nickname = useInput('');\n    const phone = useInput('');\n    const code = useInput('');\n    const [step, setStep] = useState(1);\n    const history = useHistory();\n\n    const fields = [phone, nickname, code]; // fields for reset\n\n    const onSuccessStep1 = () => {\n        Notify('success', \"Отправлено смс на номер \" + phone.base.value + \". Возьмите оттуда код подтверждения\")\n        setStep(2);\n    }\n    const onSuccessStep2 = data => {\n        Notify('success', `Вы успешно зарегистрированы. Ваш логин: \"${data?.login}\" и временный пароль:\"${data?.password}\"`, false)\n        history.push(\"/parsel\")\n    }\n    const onFail = err => Notify('fail', 'Ошибка регистрации:' + err);\n\n    return (\n        step === 1\n            ? <form action=\"/sign/sms/up\" onSubmit={async (e) => {\n                afterStyles = await SubmitFormData(e, afterStyles, fields, undefined, onSuccessStep1, onFail, false);\n            }}>\n                <h3>Регистрация(шаг 1)</h3>\n\n                <PhoneField index=\"0\" base={phone.base} />\n\n                <SubmitBtn value=\"Отправить!\" />\n            </form>\n\n            : <form action=\"/sign/up\" onSubmit={async (e) => {\n                afterStyles = await SubmitFormData(e, afterStyles, fields, undefined, onSuccessStep2, onFail);\n            }}>\n                <h3>Регистрация(шаг 2)</h3>\n\n                <Input index=\"1\" id=\"nickname\" type=\"text\" name=\"nickname\" base={nickname.base} labelText=\"Имя(никнейм):\"\n                    minLength=\"3\" maxLength=\"20\" placeholder=\"Miron\"\n                />\n                <Input index=\"2\" id=\"code\" type=\"text\" name=\"code\" base={code.base} labelText=\"8-значный код:\"\n                    minLength=\"8\" maxLength=\"8\" placeholder=\"Mfa7sd45\"\n                />\n                <SubmitBtn value=\"Отправить!\" />\n            </form>\n    )\n}\n","import { useHistory } from 'react-router';\n\nimport { SubmitFormData, useInput, useTogglePassword } from 'utils/form';\nimport { UserOnline } from 'utils/user';\nimport { Notify } from 'components/app-notification/notification';\nimport Input from 'components/form-input/input';\nimport PasswordField from 'components/password-field/password';\nimport SubmitBtn from 'components/submit-btn/submit';\n\nlet afterStyles = []; // form handle all ::after notifications\n\nexport default function SignIn() {\n    const login = useInput();\n    const pass = useInput();\n    const passToggle = useTogglePassword();\n    const fields = [login, pass];\n    const history = useHistory()\n\n    // custom validation\n    const customValidation = () =>\n        (!(/[a-z]+/g.test(pass.base.value) && /[A-Z]+/g.test(pass.base.value) && /[0-9]+/g.test(pass.base.value))) ? [1] : [];\n\n    const onSuccess = async (data) => {\n        const isOnline = await UserOnline(data.id);\n        if (isOnline) {\n            Notify('success', \"Вход произведен\");\n            history.push('/parsel');\n        } else Notify('fail', \"Ошибка входа\")\n    }\n    const onFail = err => Notify('fail', \"Ошибка входа:\" + err);\n\n    return (\n        <form action=\"/sign/in\" onSubmit={async (e) => {\n            afterStyles = await SubmitFormData(e, afterStyles, fields, customValidation, onSuccess, onFail);\n        }}>\n            <h3>Вход</h3>\n\n            <Input index=\"0\" id=\"login\" name=\"phone\" type=\"tel\" base={login.base} labelText=\"Логин:\"\n                minLength=\"11\" maxLength=\"15\" placeholder=\"87777777777\"\n            />\n            <PasswordField index=\"1\" id=\"password\" name=\"password\" labelText=\"Пароль:\"\n                placeholder=\"User1234\" pass={pass} passToggle={passToggle}\n            />\n\n            <SubmitBtn value=\"Отправить!\" />\n        </form>\n    )\n}","import { useState } from 'react';\nimport { useHistory } from 'react-router';\n\nimport { SubmitFormData, useInput, useTogglePassword } from 'utils/form';\nimport { Notify } from 'components/app-notification/notification';\nimport Input from 'components/form-input/input';\nimport SubmitBtn from 'components/submit-btn/submit';\nimport PasswordField from 'components/password-field/password';\nimport PhoneField from 'components/phone-field/field';\n\nlet afterStyles = []; // form handle all ::after notifications\n\nexport default function Restore() {\n    const phone = useInput();\n    const code = useInput('');\n    const pass = useInput('');\n    const passToggle = useTogglePassword()\n    const [step, setStep] = useState(1);\n    const history = useHistory();\n    const fields = [phone, pass, code]; // fields for reset\n\n    const onSuccessStep1 = () => {\n        Notify('success', \"Отправлено смс на номер \" + phone.base.value + \". Возьмите оттуда код подтверждения\");\n        setStep(2);\n    }\n    const onSuccessStep2 = () => {\n        Notify('success', \"Пароль успешно изменен.\");\n        history.push(\"/parsel\")\n    }\n    const onFail = err => Notify('fail', 'Ошибка восстановления:' + err);\n\n    return step === 1\n        ? <form action=\"/sign/sms/ch\" onSubmit={async (e) => {\n            afterStyles = await SubmitFormData(e, afterStyles, fields, undefined, onSuccessStep1, onFail, false);\n        }}>\n            <h3>Восстановление пароля(шаг 1)</h3>\n\n            <PhoneField index=\"0\" base={phone.base} />\n\n            <SubmitBtn value=\"Отправить!\" />\n        </form>\n\n        : <form action=\"/sign/re\" onSubmit={async (e) => {\n            afterStyles = await SubmitFormData(e, afterStyles, fields, undefined, onSuccessStep2, onFail);\n        }}>\n            <h3>Восстановление пароля(шаг 2)</h3>\n\n            <PasswordField index=\"1\" id=\"password\" name=\"password\" labelText=\"Новый пароль:\"\n                placeholder=\"User1234\" pass={pass} passToggle={passToggle}\n            />\n\n            <Input index=\"2\" id=\"code\" type=\"text\" name=\"code\" base={code.base} labelText=\"8-значный код:\"\n                minLength=\"8\" maxLength=\"8\" placeholder=\"Mfa7sd45\"\n            />\n            <SubmitBtn value=\"Отправить!\" />\n        </form>\n}","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { USER } from 'constants/constants';\nimport { RandomKey } from 'utils/content';\n\nimport SignUp from './up/up';\nimport SignIn from './in/in';\nimport ResetPassword from './reset/reset';\nimport styled from 'styled-components';\n\nconst SSign = styled.section`\n    height: 100%;\n    margin-bottom: 1rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    align-items: center;\n\n    & .logo {\n        max-width: 40vw;\n        max-height: 40vh;\n\n        & img {\n            width: 100%;\n            height: 100%;\n        }\n    }\n\n    & .main-action {\n        min-width: 60vw;\n        padding: 2rem;\n        border-radius: 10px;\n        background: #fdfdfd;\n        box-shadow: var(--boxShadow);\n    }\n\n    & .other-actions {\n        display: flex;\n        flex-direction: column;\n\n        & span {\n            margin: .5rem;\n            padding: .5rem;\n            border-radius: 5px;\n            cursor: pointer;\n            transition: var(--transitionApp);\n\n            &:hover {\n                background: var(--onHoverBG);\n                color:  var(--onHoverColor);\n            }\n        }\n    }\n`;\n\nconst GSignAction = ({ action, setAction }) => {\n    let mainAction;\n    let otherActions = []\n    if (action === \"up\") {\n        mainAction = <SignUp />;\n        otherActions = [<GInAction key={RandomKey()} setAction={setAction} />, <GResetAction key={RandomKey()} setAction={setAction} />];\n    } else if (action === \"reset\") {\n        mainAction = <ResetPassword />;\n        otherActions = [<GUpAction key={RandomKey()} setAction={setAction} />, <GInAction key={RandomKey()} setAction={setAction} />];\n    } else {\n        mainAction = <SignIn />;\n        otherActions = [<GUpAction key={RandomKey()} setAction={setAction} />, <GResetAction key={RandomKey()} setAction={setAction} />];\n    }\n    return (\n        <>\n            <div className=\"main-action\">{mainAction}</div>\n            <div className=\"other-actions\">\n                {otherActions}\n            </div>\n        </>\n    )\n}\n\nconst GInAction = ({ setAction }) => <span onClick={() => setAction(\"in\")}>Войти</span>\nconst GUpAction = ({ setAction }) => <span onClick={() => setAction(\"up\")}>Нет аккаунта? Зарегистроваться</span>\nconst GResetAction = ({ setAction }) => <span onClick={() => setAction(\"reset\")}>Забыли пароль?</span>\n\nexport default function Sign() {\n    const [action, setAction] = useState(\"in\");\n\n    return (\n        <SSign>\n            <div className=\"logo\">\n                <img src=\"/assets/app/logo512.png\" alt=\"logo\" />\n            </div>\n\n            <GSignAction action={action} setAction={setAction} />\n\n            <Link to=\"/\" onClick={()=>USER.guest = true}>Войти как гость</Link>\n\n            <Link download={true} to=\"/assets/rights/name.txt\">Пользовательское соглашение</Link>\n        </SSign>\n    )\n}","import { Link } from \"react-router-dom\"\n\nimport styled from \"styled-components\"\n\nconst S404 = styled.section`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n\n    & h2 {\n        font-size: 10rem;\n        color: var(--redColor);\n    }\n\n    & h3 {\n        font-size: 5rem;\n        color: var(--darkRedColor);\n    }\n\n    & a {\n        padding: 1rem;\n        border-radius: 5px;\n    }\n`;\n\nexport default function Page404() {\n    return (\n        <S404>\n            <h2>404</h2>\n            <h3>Not found</h3>\n\n            <Link to=\"/parsel\">Go home</Link>\n        </S404>\n    )\n}","import { USER } from \"constants/constants\"\nimport ManageParsel from \"components/parsel/manage/manage\";\n\nimport styled from \"styled-components\";\n\nconst SParsel = styled.section`\n    padding: 1rem;\n    margin: 1rem;\n\n    & .parsel_create_tip {\n        padding: 1rem;\n        margin: 1rem;\n        border-radius: 10px;\n        text-align: center;\n        background: #f5f000;\n    }\n`;\n\nconst SParselGuest = styled.section`\n    padding: 1rem;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport default function ParselPage() {\n    if (USER.status !== \"online\" || USER.guest) return <SParselGuest>Войдите, чтобы создать посылки</SParselGuest>\n    return (\n        <SParsel>\n            <div className=\"parsel_create_tip\">\n                Заполните данные, и ваша посылка попадет в ленту посылок, оттуда люди могут увидеть и забрать Вашу посылку\n            </div>\n\n            <ManageParsel failText=\"Не удалось создать посылку\" successText=\"Создана посылка\" />\n        </SParsel>\n    )\n}","import { useCallback, useState } from \"react\";\n\nimport { OnChangeTransitPoint } from \"utils/effects\";\nimport { GetDataByCrieteries } from \"utils/api\";\nimport { useInput } from \"utils/form\";\nimport { RandomKey } from \"utils/content\";\nimport { Notify } from \"components/app-notification/notification\";\nimport Input from \"components/form-input/input\";\nimport Parsel from \"components/parsel/parsel\";\n\nimport styled from \"styled-components\";\n\nconst SParsels = styled.section`\n    padding: 1rem;\n    background: var(--blueColor);\n\n    & .filters {\n        display: flex;\n        flex-wrap: wrap;\n        align-items: center;\n        justify-content: space-evenly;\n\n        & * {\n            color: var(--onHoverColor);\n        }\n\n        & .search_btn {\n            padding: .5rem 1rem;\n            background: var(--darkGreyColor);\n            border-radius: 10px;\n            cursor: pointer;\n            box-shadow: var(--boxShadow);\n            transition: var(--transitionApp);\n\n            &:hover {\n                background: var(--onHoverBG);\n            }\n        }\n    }\n\n    @media screen and (max-width: 600px) {\n        & .filters {\n            justify-content: start;\n        }\n    }\n`;\n\nexport default function ParselsPage() {\n    const from = useInput('');\n    const to = useInput('');\n    const fromID = useInput('');\n    const toID = useInput('');\n    const startDT = useInput('');\n    const endDT = useInput('');\n\n    from.base.onChange = e => OnChangeTransitPoint(from, e, fromID.setCertainValue);\n    to.base.onChange = e => OnChangeTransitPoint(to, e, toID.setCertainValue);\n\n    const [parsels, setParsels] = useState();\n\n    const getParsels = useCallback(async () => {\n        const res = await GetDataByCrieteries('parsels', {\n            'from': fromID.base.value,\n            'to': toID.base.value,\n            'startDT': startDT.base.value,\n            'endDT': endDT.base.value\n        });\n        if (res.err && res.err !== \"ok\") return Notify('fail', \"Посылок не найдено\");\n        setParsels(res)\n    }, [fromID, toID, startDT, endDT])\n\n    return (\n        <SParsels>\n            <div className=\"filters\">\n                <Input id=\"from\" type=\"text\" name=\"from\" list=\"from-list\" base={from.base} labelText=\"Откуда\" />\n                <datalist id=\"from-list\"></datalist>\n\n                <Input id=\"to\" type=\"text\" name=\"to\" list=\"to-list\" base={to.base} labelText=\"Куда\" />\n                <datalist id=\"to-list\"></datalist>\n\n                <Input type=\"date\" name=\"startDT\" base={startDT.base} labelText=\"С:\" />\n                <Input type=\"date\" name=\"endDT\" base={endDT.base} labelText=\"До:\" />\n\n                <span className=\"search_btn\" onClick={getParsels}>\n                    <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\n                </span>\n            </div>\n\n            {\n                parsels &&\n                <div className=\"parsels\">\n                    {parsels?.map(p => <Parsel key={RandomKey()} data={p} />)}\n                </div>\n            }\n        </SParsels>\n    )\n}","import { USER } from \"constants/constants\"\nimport ManageTraveler from \"components/traveler/manage/manage\";\n\nimport styled from \"styled-components\";\n\nconst STravel = styled.section`\n    padding: 1rem;\n    margin: 1rem;\n\n    & .travel_create_tip {\n        padding: 1rem;\n        margin: 1rem;\n        border-radius: 10px;\n        text-align: center;\n        background: #f5f000;\n    }\n`;\n\nconst STravelGuest = styled.section`\n    padding: 1rem;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport default function TravelerPage() {\n    if (USER.status !== \"online\" || USER.guest) return <STravelGuest>Войдите, чтобы стать попутчиком</STravelGuest>\n    return (\n        <STravel>\n            <div className=\"travel_create_tip\">\n                Заполните данные, и Ваша заявка попадет в ленту попутчиков, оттуда Вас заметят люди, которые хотят отправить посылку, а Вы заработаете\n            </div>\n\n            <ManageTraveler failText=\"Не удалось создать объявление попутчика\" successText=\"Объявление попутчика создан\" />\n        </STravel>\n    )\n}","import { useCallback, useState } from \"react\";\n\nimport { OnChangeTransitPoint } from \"utils/effects\";\nimport { GetDataByCrieteries } from \"utils/api\";\nimport { useInput } from \"utils/form\";\nimport { RandomKey } from \"utils/content\";\nimport { Notify } from \"components/app-notification/notification\";\nimport Input from \"components/form-input/input\";\nimport Traveler from \"components/traveler/traveler\";\n\nimport styled from \"styled-components\";\n\nconst SParsels = styled.section`\n    padding: 1rem;\n    background: var(--blueColor);\n\n    & .filters {\n        display: flex;\n        flex-wrap: wrap;\n        align-items: center;\n        justify-content: space-evenly;\n\n        & * {\n            color: var(--onHoverColor);\n        }\n\n        & .search_btn {\n            padding: .5rem 1rem;\n            background: var(--darkGreyColor);\n            border-radius: 10px;\n            cursor: pointer;\n            box-shadow: var(--boxShadow);\n            transition: var(--transitionApp);\n\n            &:hover {\n                background: var(--onHoverBG);\n            }\n        }\n    }\n\n    @media screen and (max-width: 600px) {\n        & .filters {\n            justify-content: start;\n        }\n    }\n`;\n\nexport default function TravelersPage() {\n    const from = useInput('');\n    const to = useInput('');\n    const fromID = useInput('');\n    const toID = useInput('');\n    const departure = useInput('');\n    const arrival = useInput('');\n\n    from.base.onChange = e => OnChangeTransitPoint(from, e, fromID.setCertainValue);\n    to.base.onChange = e => OnChangeTransitPoint(to, e, toID.setCertainValue);\n\n    const [travelers, setTravelers] = useState();\n\n    const getTravelers = useCallback(async () => {\n        const res = await GetDataByCrieteries('travelers', {\n            'from': fromID.base.value,\n            'to': toID.base.value,\n            'departure': departure.base.value,\n            'arrival': arrival.base.value\n        });\n        if (res.err && res.err !== \"ok\") return Notify('fail', \"Попутчиков не найдено\");\n        setTravelers(res)\n    }, [fromID, toID, departure, arrival])\n\n    return (\n        <SParsels>\n            <div className=\"filters\">\n                <Input id=\"from\" type=\"text\" name=\"from\" list=\"from-list\" base={from.base} labelText=\"Откуда\" />\n                <datalist id=\"from-list\"></datalist>\n\n                <Input id=\"to\" type=\"text\" name=\"to\" list=\"to-list\" base={to.base} labelText=\"Куда\" />\n                <datalist id=\"to-list\"></datalist>\n\n                <Input type=\"date\" name=\"departure\" base={departure.base} labelText=\"Выезд:\" />\n                <Input type=\"date\" name=\"arrival\" base={arrival.base} labelText=\"Прибытие:\" />\n\n                <span className=\"search_btn\" onClick={getTravelers}>\n                    <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\n                </span>\n            </div>\n\n            {\n                travelers &&\n                <div className=\"travelers\">\n                    {travelers?.map(p => <Traveler key={RandomKey()} data={p} />)}\n                </div>\n            }\n        </SParsels>\n    )\n}","import { useHistory } from 'react-router';\nimport { Switch, Route } from 'react-router-dom';\n\nimport { RandomKey } from 'utils/content';\nimport SignPage from 'routes/sign/sign';\nimport Page404 from 'routes/404/404';\nimport ParselPage from 'routes/parsel/parsel';\nimport ParselsPage from 'routes/parsels/parsels';\nimport TravelerPage from 'routes/traveler/traveler';\nimport TravelersPage from 'routes/travelers/travelers';\nimport Popup from 'components/popup/popup';\nimport AppNotifications from 'components/app-notification/notification';\n\nimport styled from 'styled-components';\n\nconst SMain = styled.main`\n    grid-area: main;\n    background: var(--greyColor);\n`;\n\n// app's routes\nconst ROUTES = [{\n    href: \"/sign\",\n    isExact: false,\n    component: SignPage,\n}, {\n    href: \"/parsel\",\n    isExact: true,\n    component: ParselPage,\n},{\n    href: \"/parsels\",\n    isExact: true,\n    component: ParselsPage,\n},{\n    href: \"/traveler\",\n    isExact: true,\n    component: TravelerPage,\n}, {\n    href: \"/travelers\",\n    isExact: true,\n    component: TravelersPage,\n}]\n\nexport default function DefineRoutes() {\n    const history = useHistory();\n\n    if (history.location.pathname === \"/\") return history.push(\"/parsel\")\n    return (\n        <SMain>\n            <Switch>\n                {\n                    ROUTES.map(\n                        ({ href, component, isExact }) => <Route key={RandomKey()} exact={isExact} path={href} component={component} />\n                    )\n                }\n                <Route component={Page404} />\n            </Switch>\n\n            {/* popups */}\n            <Popup />\n            <AppNotifications />\n        </SMain>\n    )\n}","import { useEffect } from 'react';\nimport { useHistory } from 'react-router';\n\nimport { USER } from 'constants/constants';\nimport { IS_SIGN } from 'utils/content';\nimport Aside from 'components/aside/aside';\nimport Header from 'components/header/header';\nimport Main from 'components/routes/routes';\n\nimport './App.css';\nimport styled from 'styled-components';\n\nconst SApp = styled.div`\n  \tdisplay: grid;\n    grid-template-areas: ${props => props.isSign ? \"'main'\" : '\"main aside\" \"header aside\"'};\n    grid-template-rows: ${props => props.isSign ? \"1fr\" : '1fr 7vh'};\n    grid-template-columns: ${props => props.isSign ? '1fr' : '1fr 0fr'};\n    min-height: 100vh;\n\n\t@media screen and (max-width: 600px) {\n\t\t& {\n\t\t\tgrid-template-areas: '\"main aside\" \"header aside\"';\n\t\t\tgrid-template-columns: 1fr;\n\t\t\tgrid-template-rows: 1fr 0fr;\n\t\t}\n\t}\n`;\n\nexport default function App() {\n    const isSign = IS_SIGN();\n    const history = useHistory();\n\n    useEffect(() => {\n        if (USER.status === \"online\") return isSign && history.push(\"/parsel\")\n        if (!USER.guest) return history.push('/sign');\n    }, [history, isSign]);\n\n    return (\n        <SApp isSign={isSign}>\n            {\n                isSign\n                    ? null\n                    : <>\n                        <Aside />\n                        <Header />\n                    </>\n            }\n\n            <Main />\n        </SApp>\n    )\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport { IsLogged, UserOnline } from 'utils/user';\nimport App from './App'\n\nimport reportWebVitals from './reportWebVitals';\n\nconst check = async () => {\n  const id = await IsLogged();\n  if (id) return await UserOnline(id);\n}\n\nconst init = async () => {\n  await check();\n  ReactDOM.render(\n    <React.StrictMode >\n      <Router >\n        <App />\n      </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\ninit();\n\nreportWebVitals();\n"],"sourceRoot":""}
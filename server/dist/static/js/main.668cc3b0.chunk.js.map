{"version":3,"sources":["components/app-notification/notification.jsx","constants/constants.js","utils/api.js","utils/content.jsx","utils/user.js","components/popup/popup.jsx","utils/form.js","components/form-input/input.jsx","components/submit-btn/submit.jsx","utils/file.js","components/preloaded-files-plash/plash.jsx","components/clips/clips.jsx","components/clipped-files-plash/plash.jsx","components/parsel/manage/manage.jsx","components/form-select/select.jsx","components/traveler/manage/manage.jsx","components/to-toptype/toptype.jsx","components/to-up/ex.jsx","components/to-up/up.jsx","utils/effects.js","components/parsel/parsel.jsx","components/traveler/traveler.jsx","components/aside/history/history.jsx","utils/hooks.js","components/phone-field/field.jsx","components/password-field/password.jsx","components/aside/edit-profile/profile.jsx","components/aside/aside.jsx","components/header/header.jsx","routes/sign/up/up.jsx","routes/sign/in/in.jsx","routes/sign/reset/reset.jsx","routes/sign/sign.jsx","routes/404/404.jsx","routes/parsel/parsel.jsx","routes/traveler/traveler.jsx","components/routes/routes.jsx","routes/parsels/parsels.jsx","routes/travelers/travelers.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["interID","USER","id","phoneNumber","nickname","status","guest","formDataToString","data","FormData","res","entries","k","v","slice","Fetching","action","a","method","undefined","err","fetchOption","encodeURI","fetch","then","json","catch","Object","assign","prepareDataToFetch","datas","append","GetDataByCrieteries","datatype","criteries","POSTRequestWithParams","to","params","IS_SIGN","decodeURI","useLocation","pathname","split","includes","IsTwoDigit","parseInt","concat","DateFromMilliseconds","milliseconds","datetime","Date","isNaN","getFullYear","getMonth","getDate","join","RandomKey","Math","round","random","SAppNotifications","styled","div","SAppNotification","SCloseNotification","add","removeNotification","Notify","type","content","isAutoClose","length","setInterval","clearInterval","Notification","setTimeout","noteContent","Function","className","onClick","Notifications","useState","ntfs","setNTFS","filter","item","props","key","IsLogged","changeUserData","now","toString","UserOnline","UserOffline","SignOut","history","push","SDisplayFlexCenter","css","SPopup","SPopupBG","SPopupClose","SContentWrapper","close","closeCB","PopupOpen","Component","componentArgs","ClosePopup","Popup","popup","setPopup","isOpened","setOpenedState","useInput","initValue","value","setValue","handleChange","e","target","resetField","setCertainValue","base","onChange","useTogglePassword","initState","state","changeType","toggleType","BaseFormValidation","resIndexs","i","values","test","NotifyInvalidField","selector","field","afterStyle","document","createElement","innerHTML","head","appendChild","ResetForm","fields","forEach","ClearAllNotifications","afterStyles","AS","remove","setNotificationIfExist","BIndexs","CIndexs","index","SubmitFormData","customValidation","onSuccess","onFail","isReset","preventDefault","form","getAttribute","SFormField","SFormInputWrapper","SFormInputLabel","label","SFormInput","input","SFormInputNotification","Label","required","labelText","htmlFor","Input","name","minLength","maxLength","list","min","max","hidden","placeholder","SSubmitBtn","SubmitBtn","SFilesPlash","SFileUploadWrapper","SRemoveFile","RenderUploadedFile","filename","src","removeFile","alt","PreloadedFilesPlash","preloadedFiles","map","file","SClipItem","color","ClipOneBtn","srcIcon","ClipPlash","setFiles","preloadedCB","files","addToPlash","accept","cb","click","addEventListener","stopImmediatePropagation","URL","createObjectURL","PreloadFile","SClippedFileWrapper","size","SClippedFileSrc","RenderClippedFile","stopPropagation","ClippedFiles","SParsel","onChangeTransitPoint","point","setID","DbnceCities","dt","Array","from","getElementById","childNodes","op","find","option","textContent","ManageParsel","failText","successText","weight","price","title","expire","expireDatetime","contactNumber","fromID","toID","isHaveWhatsup","setHaveWhatsup","photos","setPhotos","onSubmit","useCallback","comparedParams","CompareParams","parse","SLalel","Select","text","options","selected","opt","makeText","STravel","ManageTraveler","departure","departureDatetime","arrival","arrivalDatetime","travelTypeID","travelTypes","setTravelTypes","getTravelTypes","useEffect","console","log","onChangeTravelType","SToUp","toTopType","code","GOnePrice","cost","duration","ToTopType","prices","setPrices","isPayed","setPayed","getPrices","p","ExamplePrice","toUp","ToUp","setPrice","getPrice","Debounce","fn","ms","timeOut","args","clearTimeout","ScrollHandler","isStopLoad","isScrollingToTop","loadCallback","parent","pRec","getBoundingClientRect","scrollTop","scrollHeight","height","priorEdgeChildNum","childElementCount","el","scrollIntoView","behavior","EditItem","RemoveItem","TopItem","PaintItem","newParams","currentParams","Parsel","isMy","changeItem","removeItem","setOpened","getPhotos","isHaveWhatsUp","rel","href","window","open","newData","STraveler","Traveler","travelType","SHistory","section","loadHistory","getType","getTypeOnRus","getPart","History","tab","setTab","step","fromToState","setFromToState","setDataList","getWhat","isAppToEnd","isNeedClear","start","isLoaded","datalist","zeroState","useFromTo","configHistoryParams","Item","findIndex","d","onScroll","PhoneField","codes","setCodes","getCodes","country","SPasswordWrapper","PasswordField","pass","passToggle","passElem","passwordToggle","elem","classList","toggle","setAttribute","ShowAndHidePassword","SForms","EditProfile","phone","setStep","onSuccessStep1","onSuccessStep2","SAside","aside","SUser","SLogo","SNickname","SLogout","SEdit","Aside","useHistory","as","NavLink","SHeader","header","SNavLink","GNavLink","isExact","linkText","exact","activeClassName","Header","SignUp","password","SignIn","login","Restore","SSign","GSignAction","mainAction","setAction","otherActions","GInAction","GUpAction","GResetAction","S404","Page404","SParselGuest","STravelGuest","SMain","main","ROUTES","component","download","DefineRoutes","location","path","SApp","isSign","App","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","check","ReactDOM","render","StrictMode","init"],"mappings":"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","file":"static/js/main.668cc3b0.chunk.js","sourcesContent":["import { useState } from 'react';\n\nimport { RandomKey } from 'utils/content';\n\nimport styled from 'styled-components';\n\nconst SAppNotifications = styled.div`\n    position: fixed;\n    right: 0;\n    bottom: 0;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n    z-index: 20;\n`\n\nconst SAppNotification = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: max-content;\n    max-width: 50vw;\n    margin: .5rem;\n    padding: 1rem;\n    color: white;\n    border-radius: 5px;\n    background: var(--blueColor);\n`;\n\nconst SCloseNotification = styled.div`\n    padding: 5px;\n    margin-left: 10px;\n    height: 1.5rem;\n    width: 1.5rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: var(--redColor);\n    background: var(--darkRedColor);\n    border-radius: 50%;\n    cursor: pointer;\n`;\n\nlet add = () => {};\nlet removeNotification = id => {};\nlet interID;\n\nexport const Notify = (type, content, isAutoClose) => {\n    if (add.length !== 0) return add(type, content, isAutoClose);\n    interID = setInterval(() => {\n        if (add.length !== 0) {\n            clearInterval(interID);\n            add(type, content, isAutoClose);\n        }\n    }, 0);\n}\n\nconst Notification = ({ id = 0, type = \"fail\", content, isAutoClose = true }) => {\n    if (!content) return null;\n    if (isAutoClose) setTimeout(() => removeNotification(id), 5000);\n\n    let noteContent = content\n    if (content instanceof Function) noteContent = content(); \n\n    return (\n        <SAppNotification>\n            <div className=\"notification-content\">{noteContent}</div>\n            <SCloseNotification onClick={()=>removeNotification(id)}>\n                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n            </SCloseNotification>\n        </SAppNotification>\n    )\n}\n\nexport default function Notifications() {\n    const [ntfs, setNTFS] = useState([]);\n\n    removeNotification = id => setNTFS(ntfs.filter(item => item.props.id !== id));\n    add = (type, content, isAutoClose)  => {\n        const key = RandomKey();\n        setNTFS([...ntfs, <Notification key={key} id={key} type={type} content={content} isAutoClose={isAutoClose} />]);\n    }\n\n    return <SAppNotifications>{ntfs}</SAppNotifications>;\n}","// current user data\nexport const USER = {\n    id: -1,\n    phoneNumber: '',\n    nickname: 'nickname',\n    status: '',\n    guest: false,\n};","const formDataToString = (data = new FormData()) => {\n    let res = \"\";\n    for (let [k, v] of data.entries())\n        res += k + \"=\" + v + \"&\"\n    return res.slice(0, -1)\n}\n\n// use fetching by both method\nexport const Fetching = async(action, data, method = \"POST\") => {\n    if (action === undefined) return { err: \"action undefined\" };\n\n    const fetchOption = { 'method': method, 'mode': 'cors', 'credentials': 'include' };\n    if (method === \"GET\") action += \"?\" + encodeURI(formDataToString(data));\n    else fetchOption[\"body\"] = data;\n\n    return await fetch(action, fetchOption)\n        .then(res => res.json())\n        .catch(err => Object.assign({}, { 'err': \"500: \" + err }));\n}\n\n// convert from object to FormData\nconst prepareDataToFetch = (datas = {}) => {\n    const data = new FormData();\n    for (let [k, v] of Object.entries(datas)) data.append(k, v);\n    return data;\n}\n\n// get data by criteries & type\nexport const GetDataByCrieteries = async(datatype, criteries = {}) => {\n    const data = prepareDataToFetch(criteries);\n    const res = await Fetching(\"/api/\" + datatype, data, 'GET');\n    if (res.err !== 'ok') return { 'err': res.err }\n    return res.data;\n}\n\n// send post req to host with params\nexport const POSTRequestWithParams = async(to, params = {}) => {\n    const data = prepareDataToFetch(params);\n    return await Fetching(to, data);\n}","import { useLocation } from \"react-router\";\n\nexport const GET_CUR_PATHNAME = () => decodeURI(useLocation().pathname);\nexport const IS_SIGN = () => GET_CUR_PATHNAME().split('/').includes(\"sign\");\n\n// return two digit string\nexport const IsTwoDigit = data => parseInt(data) < 10 ? \"0\".concat(data) : data;\n\n// generate date(15/12/2020 09:09) from milliseconds\nexport const DateFromMilliseconds = milliseconds => {\n    const datetime = new Date(parseInt(milliseconds));\n    if (isNaN(datetime)) return;\n    return [datetime.getFullYear(), IsTwoDigit(datetime.getMonth() + 1), IsTwoDigit(datetime.getDate())].join('-');\n}\n\n// calculate time after thing created\nexport const CalculateRelativeDatetime = (datetime = Date.now().toString()) => {\n    const now = Date.now();\n    const given = parseInt(datetime);\n\n    const delims = [[60, \"мин.\"], [60, \"ч.\"], [24, \"д.\"], [7, 30, \"нед.\"], [30, 365, \"мес.\"], [365, \"лет\"]]\n    const isPast = (now - given) > 0 ? true : false;\n    let diff = Math.abs(now - given) / 1000;\n    let diffType = \"секунд\";\n\n    const returnDate = () => {\n        diff = Math.floor(diff);\n\n        if (!isPast) return [\"через\", IsTwoDigit(diff), diffType].join(' ');\n\n        const isToday = Math.abs(now - given) < 86400000;\n        return [isToday ? 'сегодня' : '', IsTwoDigit(diff), diffType, \"назад\"].join(' ');\n    }\n\n    // calculate difference\n    for (let i = 0; i < delims.length; i++) {\n        const cur_del = delims[i]\n        if (cur_del.length === 2) {\n            if (diff > cur_del[0]) {\n                diff /= cur_del[0];\n                diffType = cur_del[1];\n                continue\n            }\n            break\n        }\n        if (cur_del[0] < diff && diff < cur_del[1]) {\n            diff /= cur_del[0];\n            diffType = cur_del[2];\n            continue\n        }\n        break\n    }\n    return returnDate();\n}\n\nexport const RandomKey = () => Math.round(Math.random() * Math.random() * 100000000);","import { USER } from 'constants/constants';\nimport { GetDataByCrieteries, POSTRequestWithParams } from './api';\nimport { Notify } from 'components/app-notification/notification';\n\nexport const IsLogged = async() => {\n    const res = await POSTRequestWithParams('/sign/status');\n    if (res.err !== 'ok') {\n        Notify('fail', res.err);\n        return false;\n    }\n    return res.data.id;\n}\n\n// change USER const\nconst changeUserData = async(id) => {\n    if (id !== undefined) {\n        const res = (await GetDataByCrieteries('user', { id: id }));\n        if (res.err && res.err !== \"ok\") {\n            return Notify('fail', \"Ошибка входа в аккаунт. Не верные данные\")\n        }\n        for (let [k, v] of Object.entries(res[0])) USER[k] = v;\n        USER.status = 'online';\n        return true;\n    } else {\n        for (let k in USER) USER[k] = '';\n        USER.status = Date.now().toString();\n        USER.nickname = \"nickname\";\n        return true;\n    }\n}\n\n// Switch to online\nexport const UserOnline = async(id) => await changeUserData(id);;\n\n// Switch to offline\nexport const UserOffline = async() => await changeUserData();\n\n// send to server signal about sign out\nexport const SignOut = async(history) => {\n    Notify('info', \"Производится выход...\");\n    const res = await POSTRequestWithParams(\"/sign/out\");\n    if (res.err !== \"ok\") return Notify('fail', \"Ошибка: выход не произведен\");;\n    const isSignOuted = await UserOffline();\n    if (!isSignOuted) return;\n    history.push('/sign/in');\n    Notify('success', \"Выход произведен\");\n}","import { useState } from 'react';\n\nimport styled, { css } from 'styled-components';\n\nconst SDisplayFlexCenter = css`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst SPopup = styled.div`\n    position: fixed;\n    left: 50%;\n    top: 50%;\n    width: 0;\n    height: 0;\n    ${SDisplayFlexCenter};\n    border-radius: 5px;\n    transition: var(--transitionApp);\n    opacity: 0;\n    z-index: -10;\n\n    &.opened {\n        left: 0;\n        top: 0;\n        width: 100vw;\n        height: 100vh;\n        opacity: 1;\n        z-index: 20;\n    }\n`;\n\n\nconst SPopupBG = styled.div`\n    position: absolute;\n    width: 100vw;\n    height: 100vh;\n    background: #000000ab;\n`;\n\nconst SPopupClose = styled.div`\n    position: absolute;\n    right: 20px;\n    top: 10px;\n    width: 1rem;\n    height: 1rem;\n    padding: 5px;\n    ${SDisplayFlexCenter};\n    background: var(--redColor);\n    border-radius: 100%;\n    transition: var(--transitionApp);\n    cursor: pointer;\n\n    &:hover{\n        background: var(--darkRedColor);\n    }\n`;\n\nconst SContentWrapper = styled.div`\n    max-height: 90vh;\n    max-width: 80vw;\n    height: max-content;\n    width: max-content;\n    ${SDisplayFlexCenter};\n    flex-direction: column;\n    border-radius: 10px;\n    background: #ffffffc7;\n    z-index: 20;\n`;\n\nlet add = ()=>{};\nlet close = ()=>{};\nlet closeCB = ()=>{};\nexport const PopupOpen = (Component, componentArgs = {}) => {\n    add(Component, componentArgs);\n    if (componentArgs.closeCB) closeCB = componentArgs.closeCB;\n}\nexport const ClosePopup = () => close();\n\nexport default function Popup() {\n    const [popup, setPopup] = useState(null);\n    const [isOpened, setOpenedState] = useState(false);\n    add = (Component, componentArgs) => setPopup(<Component {...componentArgs}/>) || setOpenedState(true);\n    close = () => {\n        setOpenedState(false) || setPopup(null);\n        closeCB();\n    }\n    \n    return (\n        <SPopup className={`${isOpened ? 'opened' : ''}`} >\n            <SPopupBG onClick={close}/>\n\n            <SPopupClose onClick={close}>\n                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n            </SPopupClose>\n\n            <SContentWrapper>\n                {popup}\n            </SContentWrapper>\n        </SPopup>\n    )\n}","import { useState } from 'react';\n\nimport { Fetching } from './api';\n\n// useInput custom react hook\nexport const useInput = (initValue = '') => {\n    const [value, setValue] = useState(initValue);\n    const handleChange = e => setValue(e.target.value);\n    const resetField = () => setValue('');\n    const setCertainValue = v => setValue(v);\n\n    return {\n        base: {\n            value,\n            onChange: handleChange,\n        },\n        resetField,\n        setCertainValue\n    }\n}\n\n// for show/hide password\nexport const useTogglePassword = (initState = 'password') => {\n    const [state, changeType] = useState(initState);\n    const toggleType = () => changeType(state === 'password' ? 'text' : 'password');\n\n    return {\n        state,\n        toggleType\n    }\n}\n\n// check xss attack\nexport const isHaveXSS = content => /<+[\\w\\s/]+>+/gm.test(content);\n\n// base validation check html validation & xss\nexport const BaseFormValidation = data => {\n    const resIndexs = [];\n    let i = 0;\n    for (let v of data.values()) {\n        if (isHaveXSS(v)) resIndexs.push(i);\n        i++;\n    }\n    return resIndexs;\n}\n\n// create one ::after notification\nexport const NotifyInvalidField = (selector, field) => {\n    const afterStyle = document.createElement('style');\n    afterStyle.innerHTML += `${selector}::after{content: 'Ошибка'; font-size: 1rem; color: red; margin: 10px;}`;\n    document.head.appendChild(afterStyle);\n    field.resetField();\n    return afterStyle;\n}\n\n// reset form by calling component method\nexport const ResetForm = fields => {\n    if (!fields) return;\n    fields.forEach(field => field.resetField());\n}\n\n// clear all custom ::after styles\nexport const ClearAllNotifications = (afterStyles = []) => afterStyles.forEach(AS => AS.remove());\n\nconst setNotificationIfExist = (BIndexs, CIndexs, afterStyles, fields) => {\n    if (!fields) return;\n    if (BIndexs.length !== 0)\n        BIndexs.forEach(index => afterStyles.push(NotifyInvalidField(`.form-field-${1+index} .form-input-notification`, fields[index])));\n    if (CIndexs && CIndexs.length !== 0)\n        CIndexs.forEach(index => afterStyles.push(NotifyInvalidField(`.form-field-${1+index} .form-input-notification`, fields[index])));\n}\n\n// submit form: check all validations, return ::after styles, notify & reset fields\nexport const SubmitFormData = async(e, afterStyles, fields, customValidation = () => {}, onSuccess = () => {}, onFail = () => {}, isReset = true) => {\n    e.preventDefault();\n    ClearAllNotifications(afterStyles);\n    afterStyles = [];\n\n    const form = e.target;\n    const action = form.getAttribute('action');\n    if (!action) return;\n    const data = new FormData(form);\n\n    // validation\n    const BIndexs = BaseFormValidation(data),\n        CIndexs = customValidation();\n\n    // notification\n    setNotificationIfExist(BIndexs, CIndexs, afterStyles, fields);\n\n    // fetching & notification\n    if ((BIndexs.length === 0 && !CIndexs) ||\n        (BIndexs.length === 0 && CIndexs && CIndexs.length === 0)) {\n        const res = await Fetching(action, data);\n\n        if (res.err === \"ok\") {\n            if (isReset) ResetForm(fields);\n            return onSuccess(res.data);\n        }\n        return onFail(res.err);\n    }\n    onFail(\"Ошибка валидации\");\n    return afterStyles;\n}","import styled from 'styled-components';\n\nconst SFormField = styled.div`\n    margin-bottom: .5rem;\n`;\n\nconst SFormInputWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    margin-bottom: .5rem;\n`;\n\nconst SFormInputLabel = styled.label`\n    white-space: nowrap;\n    color: var(--offHoverColor);\n\n    &.required::after {\n        content: '*';\n        color: var(--redColor);\n    }\n`;\n\nconst SFormInput = styled.input`\n    margin-left: 1rem;\n    padding: .5rem;\n    width: 100%;\n    font-size: 1rem;\n    color: var(--offHoverColor);\n    background: none;\n    border: none;\n    border-radius: 5px;\n    outline: none;\n    border-bottom: 1px solid var(--onHoverColor);\n    box-shadow: 4px 4px 3px 0 #00000029;\n\n    &::placeholder{\n        color: var(--darkGreyColor);\n    }\n\n    &:disabled {\n        background: var(--greyColor);\n    }\n`;\n\nconst SFormInputNotification = styled.div`\n    color: var(--darkRedColor);\n`;\n\nexport const Label = ({ required, id, labelText }) =>\n    <SFormInputLabel className={required ? 'required' : ''} htmlFor={id} > {labelText} </SFormInputLabel>\n\nexport default function Input({ index, id, type = \"text\", name, labelText, base, minLength, maxLength, list, min, max, required = true, hidden = false, placeholder = \"\" }) {\n    return hidden\n        ? <input type={type} value={base.value} name={name} hidden />\n        : (\n            <SFormField className={'form-field-' + index}>\n                <SFormInputWrapper>\n                    <Label required={required} id={id} labelText={labelText} />\n                    <SFormInput\n                        className=\"form-input\"\n                        id={id}\n                        type={type}\n                        name={name}\n                        required={required}\n                        min={min}\n                        max={max}\n                        minLength={minLength}\n                        maxLength={maxLength}\n                        placeholder={placeholder}\n                        hidden={hidden}\n                        list={list}\n                        {...base}\n                    />\n                </SFormInputWrapper>\n                <SFormInputNotification className=\"form-input-notification\" />\n            </SFormField>\n        )\n}","import styled from \"styled-components\"\n\nconst SSubmitBtn = styled.input`\n    width: 60%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin: 1rem auto;\n    padding: 1rem;\n    font-size: 1rem;\n    color: var(--offHoverColor);\n    background: var(--offHoverBG);\n    border-radius: 5px;\n    border: none;\n    box-shadow: 2px 2px 2px 0 #00000061;\n    transition: var(--transitionApp);\n    cursor: pointer;\n\n    &:hover {\n        color: var(--onHoverColor);\n        background: var(--onHoverBG);\n    }\n`;\n\nexport default function SubmitBtn({value, onClick}) {\n    return <SSubmitBtn type=\"submit\" value={value} onClick={onClick} />\n}","import { POSTRequestWithParams } from \"utils/api\";\n\n// preload file\nexport const PreloadFile = (accept, cb = (file, src, type) => {}) => {\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.accept = accept;\n    input.click();\n\n    input.addEventListener('change', async(e) => {\n        e.stopImmediatePropagation();\n        const file = input.files[0];\n\n        if (file) cb(file, URL.createObjectURL(file), file.type.split('/')[0]);\n    });\n}\n\n// upload file to server\nexport const UploadFile = async(type, file, whomFile, whomID) => {\n    if (!type || !file || !whomFile) return { err: 'deficite data' };\n    const params = {\n        'type': type.split('/')[0],\n        'file': file,\n        'whomFile': whomFile,\n    }\n    if (whomID) params['whomID'] = whomID;\n\n    const res = await POSTRequestWithParams('/s/image', params);\n    if (res.err !== \"ok\") return null;\n    return res.data;\n}","import { RandomKey } from \"utils/content\";\n\nimport styled from \"styled-components\";\n\nconst SFilesPlash = styled.div`\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 100%;\n    background: #000000ad;\n    overflow: auto;\n    white-space: nowrap;\n`;\n\nconst SFileUploadWrapper = styled.div`\n    position: relative;\n    width:  4rem;\n    display: inline-block;\n    margin: .5rem;\n    padding: .5rem;\n    overflow: hidden;\n\n    & > * {\n        width: 100%;\n        color: var(--onHoverColor);\n    }\n`;\n\nconst SRemoveFile = styled.div`\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 1rem;\n    height: 1rem;\n    padding: 5px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: var(--redColor);\n    border-radius: 100%;\n    transition: var(--transitionApp);\n    cursor: pointer;\n\n    &:hover{\n        background: var(--darkRedColor);\n    }\n`;\n\nconst RenderUploadedFile = ({filename, src, removeFile}) => {\n    return (\n        <SFileUploadWrapper>\n            <SRemoveFile onClick={()=>removeFile(filename)}>\n                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n            </SRemoveFile>\n\n            <img src={src} alt=\"uploaded img\" />\n            <div>{filename}</div>\n        </SFileUploadWrapper>\n    )\n}\n\nexport default function PreloadedFilesPlash({ preloadedFiles, removeFile = ()=>{}}) {\n    return (\n        <SFilesPlash>\n            {\n                preloadedFiles.map(\n                    file => <RenderUploadedFile key={RandomKey()} {...file} removeFile={filename => removeFile(filename)} />\n                )\n            }\n        </SFilesPlash>\n    )\n}","import { PreloadFile } from \"utils/file\";\nimport PreloadedFilesPlash from '../preloaded-files-plash/plash';\n\nimport styled from \"styled-components\";\n\nconst SClipItem = styled.div`\n    width: 3rem;\n    height: 3rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: ${props => props.color ? props.color : 'rgba(255, 255, 255, 0.38)'}; \n    border-radius: 50px;\n    cursor: pointer;\n\n    & img {\n        width: 80%;\n        height: 80%;\n    }\n\n    &:hover {\n        background: var(--purpleColor);\n    }\n`;\n\nconst ClipOneBtn = ({ color, alt, srcIcon, onClick }) => {\n    return (\n        <SClipItem color={color} onClick={onClick}>\n            <img src={srcIcon} alt={alt} />\n        </SClipItem>\n    )\n}\n\nexport default function ClipPlash({ preloadedFiles = [], setFiles = () => { } }) {\n    const addToPlash = (...files) => setFiles([...preloadedFiles, ...files]);\n    const removeFile = filename => setFiles(preloadedFiles.filter(file => file.filename !== filename))\n\n    const preloadedCB = (file, src) => {\n        addToPlash({\n            'type': \"image\",\n            'file': file,\n            'src': src,\n            'filename': file.name,\n        });\n    }\n\n    return (\n        <>\n            <ClipOneBtn alt=\"clip\" srcIcon=\"/assets/app/send-gallery.png\" onClick={() => PreloadFile('image/*', preloadedCB)} />\n            <PreloadedFilesPlash preloadedFiles={preloadedFiles} removeFile={removeFile} />\n        </>\n    )\n}","import { RandomKey } from \"utils/content\";\nimport { PopupOpen } from \"../popup/popup\";\n\nimport styled from \"styled-components\";\n\nconst SFilesPlash = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    background: #000000ad;\n`;\n\nconst SClippedFileWrapper = styled.div`\n    position: relative;\n    max-width:  ${props => props.size ? props.size : '15rem'};\n    width: max-content;\n    max-height: ${props => props.size ? props.size : '15rem'};\n    margin: .5rem;\n    padding: .5rem;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: 'space-between';\n    color: var(--onHoverColor);\n    background: #000000ad;\n    border-radius: 10px;\n    cursor: pointer;\n`;\n\nconst SClippedFileSrc = styled.div`\n    width: 100%;\n    \n    & > * {\n        max-width: 100%;\n    }\n`;\n\nconst SRemoveFile = styled.div`\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 1rem;\n    height: 1rem;\n    padding: 5px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: var(--redColor);\n    border-radius: 100%;\n    transition: var(--transitionApp);\n    cursor: pointer;\n\n    &:hover{\n        background: var(--darkRedColor);\n    }\n`;\n\n\nconst RenderClippedFile = ({ id, filename, src, size, onClick = () => { }, removeFile }) => {\n    return (\n        <SClippedFileWrapper size={size} onClick={onClick} >\n            <SRemoveFile onClick={e => e.stopPropagation() || removeFile(id, src)}>\n                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n            </SRemoveFile>\n\n            <SClippedFileSrc>\n                <img src={src} alt=\"uploaded img\" />\n            </SClippedFileSrc>\n            <span>{filename}</span>\n        </SClippedFileWrapper>\n    )\n}\n\nexport default function ClippedFiles({ files = [], removeFile}) {\n    return (\n        <SFilesPlash>\n            {\n                files.map(\n                    file => <RenderClippedFile key={RandomKey()} {...file} \n                        onClick={e => e.preventDefault() || PopupOpen(RenderClippedFile, { ...file, 'size': '100%' })} \n                        removeFile={removeFile}\n                    />\n                )\n            }\n        </SFilesPlash>\n    )\n}","import { useCallback, useState } from \"react\";\n\nimport { CompareParams, DbnceCities } from \"utils/effects\";\nimport { POSTRequestWithParams } from \"utils/api\";\nimport { useInput } from \"utils/form\";\nimport { DateFromMilliseconds } from \"utils/content\";\nimport { Notify } from \"components/app-notification/notification\";\nimport Input from \"components/form-input/input\";\nimport SubmitBtn from \"components/submit-btn/submit\";\nimport ClipPlash from \"components/clips/clips\";\nimport ClippedFiles from \"components/clipped-files-plash/plash\";\n\nimport styled from \"styled-components\";\n\nconst SParsel = styled.form`\n    padding: 1rem;\n    margin: 1rem;\n    min-width: 80vw;\n\n    & .transit_points,\n    & .price_weigth,\n    & .title_expire,\n    & .contactNumber {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n\n        & > * {\n            flex-basis: 45%;\n        }\n    }\n\n    & .photos {\n        position: relative;\n        margin-bottom: 10rem;\n        padding: 1rem;\n        display: flex;\n        align-items: center;\n\n        &.clipped {\n            flex-direction: column;\n            align-items: unset;\n        }\n    }\n\n    @media screen and (max-width: 600px) {\n        & .transit_points,\n        & .price_weigth,\n        & .title_expire,\n        & .contactNumber {\n            align-items: unset;\n            flex-direction: column;\n        }\n    }\n`;\n\nconst onChangeTransitPoint = async (point, e, setID) => {\n    point.setCertainValue(e.target.value);\n    DbnceCities(e);\n    const dt = Array.from(document.getElementById(e.target.list.id).childNodes)\n    if (dt.length === 0) return;\n    const op = dt.find(option => option?.value?.includes(e.target.value));\n    if (op) setID(op.textContent);\n}\n\nconst removeFile = async (id, src) => {\n    const res = await POSTRequestWithParams(\"/r/image\", { 'id': id, 'src': src });\n    if (res?.err !== \"ok\") return Notify('fail', \"Фото не удалилось, попробуйте позднее, или сообщите в службу поддрежки\")\n    return Notify('success', \"Фото удалено\")\n}\n\nexport default function ManageParsel({ type = \"create\", cb, failText, successText, data }) {\n    const weight = useInput(data?.weight);\n    const price = useInput(data?.price);\n    const title = useInput(data?.title);\n    const expire = useInput(DateFromMilliseconds(data?.expireDatetime));\n    const contactNumber = useInput(data?.contactNumber);\n    const from = useInput(data?.from);\n    const to = useInput(data?.to);\n    const fromID = useInput(data?.fromID);\n    const toID = useInput(data?.toID);\n    const [isHaveWhatsup, setHaveWhatsup] = useState(data?.isHaveWhatsup === 1);\n\n    from.base.onChange = e => onChangeTransitPoint(from, e, fromID.setCertainValue);\n    to.base.onChange = e => onChangeTransitPoint(to, e, toID.setCertainValue);\n\n    const [photos, setPhotos] = useState(data?.photos);\n\n    const onSubmit = useCallback(async (e) => {\n        e.preventDefault();\n\n        const comparedParams = CompareParams({\n            'title': title.base.value,\n            'from': fromID.base.value,\n            'to': toID.base.value,\n            'weight': weight.base.value,\n            'price': price.base.value,\n            'expireDatetime': Date.parse(expire.base.value),\n            'contactNumber': contactNumber.base.value,\n            'isHaveWhatsup': isHaveWhatsup ? 1 : 0,\n        }, {\n            'title': data?.title,\n            'from': data?.fromID,\n            'to': data?.toID,\n            'weight': data?.weight,\n            'price': data?.price,\n            'expireDatetime': data?.expireDatetime,\n            'contactNumber': data?.contactNumber,\n            'isHaveWhatsup': data?.isHaveWhatsup,\n        });\n        if (Object.values(comparedParams).length === 0) return Notify('info', 'Нет изменений');\n\n        const res = await POSTRequestWithParams(\"/\" + (type === \"create\" ? \"s\" : \"e\") + \"/parsel\", comparedParams);\n\n        if (res?.err !== \"ok\") return Notify('fail', failText);\n        Notify('success', successText);\n        cb(comparedParams)\n    }, [title, fromID, toID, weight, price, expire, contactNumber, isHaveWhatsup, type, cb, failText, successText, data,]);\n\n    return (\n        <SParsel onSubmit={onSubmit}>\n            <div className=\"transit_points\">\n                <Input id=\"from\" type=\"text\" name=\"from\" list=\"from-list\" base={from.base} labelText=\"Откуда\" />\n                <datalist id=\"from-list\"></datalist>\n\n                <Input id=\"to\" type=\"text\" name=\"to\" list=\"to-list\" base={to.base} labelText=\"Куда\" />\n                <datalist id=\"to-list\"></datalist>\n            </div>\n\n            <div className=\"price_weigth\">\n                <Input type=\"number\" name=\"weight\" base={weight.base} labelText=\"Вес (в кг)\" />\n                <Input type=\"number\" name=\"price\" base={price.base} labelText=\"Цена (в тг)\" />\n            </div>\n\n            <div className=\"title_expire\">\n                <Input type=\"text\" name=\"title\" base={title.base} labelText=\"Заголовок вашей посылки\" />\n                <Input type=\"date\" name=\"expireDatetime\" base={expire.base} labelText=\"Доставить до:\" />\n            </div>\n\n            <div className=\"contactNumber\">\n                <Input type=\"tel\" name=\"contactNumber\" base={contactNumber.base} labelText=\"Контакты отправителя\" />\n                <span>\n                    <input onChange={() => setHaveWhatsup(!isHaveWhatsup)} type=\"checkbox\" name=\"isHaveWhatsup\" /> Есть WhatsUp?\n                </span>\n            </div>\n\n            {\n                type === \"create\"\n                    ? <div className=\"photos\">\n                        <span>Чтобы прикрепить фото, нажмите здесь {\"->\"}</span>\n                        <ClipPlash setFiles={setPhotos} preloadedFiles={photos} />\n                    </div>\n                    : <div className=\"photos clipped\">\n                        <span>Чтобы удалить фото, нажмите крестик на фото </span>\n                        <ClippedFiles files={photos} removeFile={removeFile} />\n                    </div>\n            }\n\n            <SubmitBtn value={type === \"create\" ? \"Опубликовать\" : \"Изменить\"} />\n        </SParsel>\n    )\n}","import { RandomKey } from \"utils/content\";\n\nimport styled from \"styled-components\";\n\nconst SLalel = styled.label`\n    display: flex;\n    align-items: center;\n    white-space: nowrap;\n\n    & select {\n        margin-left: 1rem;\n        padding: .5rem;\n        width: 100%;\n        font-size: 1rem;\n        color: var(--offHoverColor);\n        background: none;\n        border: none;\n        border-radius: 5px;\n        outline: none;\n        border-bottom: 1px solid var(--onHoverColor);\n        box-shadow: 4px 4px 3px 0 #00000029;\n    }\n`;\nexport default function Select({ name, text, required = true, options, onChange }) {\n    return (\n        <SLalel>\n            <span>{text}</span>\n            <select name={name} value={options.selected} required={required} onChange={onChange}>\n                {options?.data?.map((opt) => <option key={RandomKey()} value={opt[options.value]}>{options.makeText(opt)}</option>)}\n            </select>\n        </SLalel>\n    )\n}","import { useCallback, useEffect, useState } from \"react\";\n\nimport { CompareParams, DbnceCities } from \"utils/effects\";\nimport { GetDataByCrieteries, POSTRequestWithParams } from \"utils/api\";\nimport { useInput } from \"utils/form\";\nimport { DateFromMilliseconds } from \"utils/content\";\nimport { Notify } from \"components/app-notification/notification\";\nimport Input from \"components/form-input/input\";\nimport SubmitBtn from \"components/submit-btn/submit\";\n\nimport styled from \"styled-components\";\nimport Select from \"components/form-select/select\";\n\nconst STravel = styled.form`\n    padding: 1rem;\n    margin: 1rem;\n    min-width: 80vw;\n\n    & .transit_points,\n    & .travelType_weigth,\n    & .departure_arrival,\n    & .contactNumber {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n\n        & > * {\n            flex-basis: 45%;\n        }\n    }\n\n    @media screen and (max-width: 600px) {\n        & .transit_points,\n        & .travelType_weigth,\n        & .departure_arrival,\n        & .contactNumber {\n            align-items: unset;\n            flex-direction: column;\n        }\n    }\n`;\n\nconst onChangeTransitPoint = async (point, e, setID) => {\n    point.setCertainValue(e.target.value);\n    DbnceCities(e);\n    const dt = Array.from(document.getElementById(e.target.list.id).childNodes)\n    if (dt.length === 0) return;\n    const op = dt.find(option => option?.value?.includes(e.target.value));\n    if (op) setID(op.textContent);\n}\n\nconst onChangeTravelType = (e, setID) => setID(e.target.value)\n\nexport default function ManageTraveler({ type = \"create\", cb, failText, successText, data }) {\n    const weight = useInput(data?.weight);\n    const departure = useInput(DateFromMilliseconds(data?.departureDatetime));\n    const arrival = useInput(DateFromMilliseconds(data?.arrivalDatetime));\n    const contactNumber = useInput(data?.contactNumber);\n    const from = useInput(data?.from);\n    const to = useInput(data?.to);\n    const travelTypeID = useInput(data?.travelTypeID);\n    const fromID = useInput(data?.fromID);\n    const toID = useInput(data?.toID);\n    const [isHaveWhatsup, setHaveWhatsup] = useState(data?.isHaveWhatsup === 1);\n    const [travelTypes, setTravelTypes] = useState();\n\n    from.base.onChange = e => onChangeTransitPoint(from, e, fromID.setCertainValue);\n    to.base.onChange = e => onChangeTransitPoint(to, e, toID.setCertainValue);\n\n    const getTravelTypes = useCallback(async () => {\n        const res = await GetDataByCrieteries('travelTypes');\n        if (res.err && res?.err !== \"ok\") return setTravelTypes(null);\n        return setTravelTypes(res)\n    }, [])\n\n    const onSubmit = useCallback(async (e) => {\n        e.preventDefault();\n\n        const comparedParams = CompareParams({\n            'travelType': travelTypeID.base.value,\n            'from': fromID.base.value,\n            'to': toID.base.value,\n            'weight': weight.base.value,\n            'departureDatetime': Date.parse(departure.base.value),\n            'arrivalDatetime': Date.parse(arrival.base.value),\n            'contactNumber': contactNumber.base.value,\n            'isHaveWhatsup': isHaveWhatsup ? 1 : 0,\n        }, {\n            'travelType': data?.travelTypeID,\n            'from': data?.fromID,\n            'to': data?.toID,\n            'weight': data?.weight,\n            'departureDatetime': data?.departureDatetime,\n            'arrivalDatetime': data?.arrivalDatetime,\n            'contactNumber': data?.contactNumber,\n            'isHaveWhatsup': data?.isHaveWhatsup,\n        });\n        if (Object.values(comparedParams).length === 0) return Notify('info', 'Нет изменений');\n        const res = await POSTRequestWithParams(\"/\" + (type === \"create\" ? \"s\" : \"e\") + \"/travel\", comparedParams);\n\n        if (res?.err !== \"ok\") return Notify('fail', failText);\n        Notify('success', successText);\n        cb(comparedParams)\n    }, [travelTypeID, fromID, toID, weight, departure, arrival, contactNumber, isHaveWhatsup, type, cb, failText, successText, data]);\n\n    useEffect(() => {\n        if (travelTypes === undefined) return getTravelTypes()\n    }, [getTravelTypes, travelTypes])\n\n    console.log('trvtype', travelTypeID);\n\n    return (\n        <STravel onSubmit={onSubmit}>\n            <div className=\"transit_points\">\n                <Input id=\"from\" type=\"text\" name=\"from\" list=\"from-list\" base={from.base} labelText=\"Откуда\" />\n                <datalist id=\"from-list\"></datalist>\n\n                <Input id=\"to\" type=\"text\" name=\"to\" list=\"to-list\" base={to.base} labelText=\"Куда\" />\n                <datalist id=\"to-list\"></datalist>\n            </div>\n\n            <div className=\"travelType_weigth\">\n                <Input type=\"number\" name=\"weight\" base={weight.base} labelText=\"Вес (в кг)\" />\n                <Select name=\"travelType\" text=\"Тип транспорта\" options={{\n                    data: travelTypes,\n                    value: \"id\",\n                    selected: travelTypeID.base.value,\n                    makeText: ({ name }) => name\n                }} onChange={e=>onChangeTravelType(e, travelTypeID.setCertainValue)} />\n            </div>\n\n            <div className=\"departure_arrival\">\n                <Input type=\"date\" name=\"departureDatetime\" base={departure.base} labelText=\"Выезд\" />\n                <Input type=\"date\" name=\"arrivalDatetime\" base={arrival.base} labelText=\"Прибытие\" />\n            </div>\n\n            <div className=\"contactNumber\">\n                <Input type=\"tel\" name=\"contactNumber\" base={contactNumber.base} labelText=\"Контакты отправителя\" />\n                <span>\n                    <input onChange={() => setHaveWhatsup(!isHaveWhatsup)} type=\"checkbox\" name=\"isHaveWhatsup\" /> Есть WhatsUp?\n                </span>\n            </div>\n\n            <SubmitBtn value={type === \"create\" ? \"Опубликовать\" : \"Изменить\"} />\n        </STravel>\n    )\n}","\nimport { useCallback, useEffect, useState } from \"react\";\n\nimport { GetDataByCrieteries, POSTRequestWithParams } from \"utils/api\";\nimport { useInput } from \"utils/form\";\nimport { RandomKey } from \"utils/content\";\nimport { ClosePopup } from \"components/popup/popup\";\nimport { Notify } from \"components/app-notification/notification\";\nimport Input from \"components/form-input/input\";\nimport SubmitBtn from \"components/submit-btn/submit\";\n\nimport styled from \"styled-components\";\n\nconst SToUp = styled.div`\n    padding: 1rem;\n    margin: 1rem;\n\n    & .price {\n        color: red;\n        font-size: 1.3rem;\n        background: yellow;\n    }\n\n    & .answer {\n        display: flex;\n        align-items: center;\n        justify-content: space-evenly;\n\n        & span {\n            padding: .5rem 1rem;\n            margin: 1rem;\n            color: var(--onHoverColor);\n            background: var(--blueColor);\n            border-radius: 10px;\n            cursor: pointer;\n\n            &:nth-child(2) {\n                background: red;\n            }\n        }\n    }\n`;\n\nconst toTopType = async (id, type, code, cb) => {\n    const res = await POSTRequestWithParams(\"/e/toptype\", { 'id': id, 'type': type, 'code': code })\n    if (res.err && res.err !== \"ok\") return Notify('fail', 'Не удалось рекламировать');\n    cb()\n}\n\nconst GOnePrice = ({id, cost, name, duration, color}) => {\n    return (\n        <div color={color} onClick={()=>toTopType()}> \n            <span>Ваше обьявление будет рекламировано {name}</span>\n            <span>Стоимость: {cost} тг</span>\n        </div>\n    )\n}\n\n/**\n * \n * @param type if cost will be relative by type: parsel or travel \n * @param cb callback after click to up\n * @param id parsel/travel id \n */\nexport default function ToTopType({cb, type, id}) {\n    const [prices, setPrices] = useState();\n    const [isPayed, setPayed] = useState();\n    const code = useInput('');\n\n    const getPrices = useCallback(async () => {\n        const res = await GetDataByCrieteries('toptypes');\n        if (res?.err !== \"ok\") return Notify('fail', \"Ошибка. Попробуйте позднее\") || setPrices(null);\n        setPrices(res)\n    }, [])\n\n    useEffect(() => {\n        if (prices === undefined) return getPrices()\n    }, [getPrices, prices])\n\n\n    if (prices === undefined) return <div>Ошибка. Попробуйте позднее</div>\n    return (\n        <SToUp>\n            <h2>Рекламировать Ваше объявление?</h2>\n\n            <div className=\"prices\">\n               {prices.map(p => <GOnePrice key={RandomKey()} {...p} />)}\n            </div>\n\n            <div className=\"answer\">\n                <span onClick={() => setPayed(true)}>Да</span>\n                <span onClick={ClosePopup}>Нет</span>\n            </div>\n\n            {\n                isPayed &&\n                <div>\n                    <Input index=\"2\" id=\"code\" type=\"text\" name=\"code\" base={code.base} labelText=\"Введите 8-значный код:\"\n                        minLength=\"8\" maxLength=\"8\" placeholder=\"Mfa7sd45\"\n                    />\n\n                    <SubmitBtn value=\"Поднять!\" onClick={() => toTopType(id, type, code, cb)} />\n                </div>\n            }\n        </SToUp>\n    )\n}","export const ExamplePrice = {\n    'id': 1,\n    'cost': 500,\n}","import { useCallback, useEffect, useState } from \"react\";\n\nimport { GetDataByCrieteries, POSTRequestWithParams } from \"utils/api\";\nimport { useInput } from \"utils/form\";\nimport { ClosePopup } from \"components/popup/popup\";\nimport { Notify } from \"components/app-notification/notification\";\nimport Input from \"components/form-input/input\";\nimport SubmitBtn from \"components/submit-btn/submit\";\n\nimport { ExamplePrice } from \"./ex\";\nimport styled from \"styled-components\";\n\nconst SToUp = styled.div`\n    padding: 1rem;\n    margin: 1rem;\n\n    & .price {\n        color: red;\n        font-size: 1.3rem;\n        background: yellow;\n    }\n\n    & .answer {\n        display: flex;\n        align-items: center;\n        justify-content: space-evenly;\n\n        & span {\n            padding: .5rem 1rem;\n            margin: 1rem;\n            color: var(--onHoverColor);\n            background: var(--blueColor);\n            border-radius: 10px;\n            cursor: pointer;\n\n            &:nth-child(2) {\n                background: red;\n            }\n        }\n    }\n`;\n\nconst toUp = async (id, type, code, cb) => {\n    const res = await POSTRequestWithParams(\"/e/up\", { 'id': id, 'type': type, 'code': code })\n    if (res.err && res.err !== \"ok\") return Notify('fail', 'Не удалось поднять');\n    cb()\n}\n\n/**\n * \n * @param type if cost will be relative by type: parsel or travel \n * @param cb callback after click to up\n * @param id parsel/travel id \n */\nexport default function ToUp({ cb, type, id }) {\n    const [price, setPrice] = useState();\n    const [isPayed, setPayed] = useState();\n    const code = useInput('');\n\n    const getPrice = useCallback(async () => {\n        const res = await GetDataByCrieteries('price');\n        if (res?.err !== \"ok\") return Notify('fail', \"Ошибка. Попробуйте позднее\") || setPrice(ExamplePrice)\n        setPrice(res)\n    }, [])\n\n    useEffect(() => {\n        if (!price) return getPrice()\n    }, [getPrice, price])\n\n\n    if (!price) return <div>Ошибка. Попробуйте позднее</div>\n    return (\n        <SToUp>\n            <h2>Поднять Ваше объявление?</h2>\n\n            <div className=\"price\">\n                Стоимость: {price?.cost} тг\n            </div>\n\n            <div className=\"answer\">\n                <span onClick={() => setPayed(true)}>Да</span>\n                <span onClick={ClosePopup}>Нет</span>\n            </div>\n\n            {\n                isPayed &&\n                <div>\n                    <Input index=\"2\" id=\"code\" type=\"text\" name=\"code\" base={code.base} labelText=\"Введите 8-значный код:\"\n                        minLength=\"8\" maxLength=\"8\" placeholder=\"Mfa7sd45\"\n                    />\n\n                    <SubmitBtn value=\"Поднять!\" onClick={() => toUp(id, type, code, cb)} />\n                </div>\n            }\n        </SToUp>\n    )\n}","import { Notify } from \"components/app-notification/notification\";\nimport { PopupOpen } from \"components/popup/popup\";\nimport ManageParsel from \"components/parsel/manage/manage\";\nimport ManageTraveler from \"components/traveler/manage/manage\";\nimport ToTopType from \"components/to-toptype/toptype\";\nimport ToUp from \"components/to-up/up\";\n\n\nimport { GetDataByCrieteries, POSTRequestWithParams } from \"./api\";\n// just debounce\nexport function Debounce(fn, ms) {\n    let timeOut;\n    return (...args) => {\n        clearTimeout(timeOut);\n        timeOut = setTimeout(() => { fn(...args) }, ms)\n    }\n}\n\nexport const DbnceCities = Debounce(async(e) => {\n    const res = await GetDataByCrieteries(\"search\", { 'type': 'cities', 'q': e.target.value });\n    if (res.err) return Notify(\"fail\", \"Не удалось загрузить города\");\n\n    const options = res.map(({ id, name }) => {\n        const op = document.createElement(\"option\");\n        op.value = name;\n        op.textContent = id;\n        return op;\n    })\n\n    const dt = document.getElementById(e.target.list.id);\n    if (!dt) return;\n    dt.innerHTML = \"\";\n    dt.append(...options);\n}, 500)\n\n// show & hide password by changing input type\nexport const ShowAndHidePassword = (e, passElem, passwordToggle) => {\n    const elem = e.target;\n    passwordToggle.toggleType();\n    elem.classList.toggle('fa-eye-slash');\n    if (passwordToggle.state === \"password\") passElem.setAttribute('type', 'text');\n    else passElem.setAttribute('type', 'password');\n}\n\n/**\n * for lazy load and keeping focus with scrolling\n * @param e event\n * @param isStopLoad stop load or no\n * @param isScrollingToTop load on scroll to top or bottom\n * @param loadCallback what do after react edge\n */\nexport const ScrollHandler = Debounce(async(e, isStopLoad, isScrollingToTop = false, loadCallback = async() => {}) => {\n    if (isStopLoad) return;\n\n    const parent = e.target;\n    const pRec = parent.getBoundingClientRect();\n    if (\n        (isScrollingToTop && parent.scrollTop === 0) ||\n        (!isScrollingToTop && parent.scrollTop >= Math.round((parent.scrollHeight - pRec.height) * .75))\n    ) {\n        const priorEdgeChildNum = isScrollingToTop ? 0 : parent.childElementCount - 1;\n\n        if (await loadCallback()) {\n            setTimeout(() => {\n                // smooth scroll\n                const el = parent.childNodes[priorEdgeChildNum];\n                if (el) el.scrollIntoView({ behavior: \"smooth\" });\n            }, 100);\n        }\n    }\n}, 100);\n\nexport const EditItem = async(type, data, cb) =>\n    PopupOpen(type === \"parsel\" ? ManageParsel : ManageTraveler, { 'cb': cb, 'data': data, 'type': 'edit' })\n\nexport const RemoveItem = async(id, type, cb) => {\n    const res = await POSTRequestWithParams(\"/r/\" + (type === \"parsel\" ? \"parsel\" : 'travel'), { 'id': id })\n    if (res.err && res.err !== \"ok\") return Notify('fail', 'Не удалено');\n    cb()\n}\n\nexport const TopItem = async(id, type, cb) => PopupOpen(ToUp, { 'cb': cb, \"type\": type, 'id': id })\n\nexport const PaintItem = async(id, type, cb) => PopupOpen(ToTopType, { 'cb': cb, \"type\": type, 'id': id })\n\nexport const CompareParams = (newParams, currentParams) => {\n    const res = {};\n    for (let [k, v] of Object.entries(newParams)) {\n        if (newParams[k] !== currentParams[k]) {\n            res[k] = v;\n        }\n    }\n    return res;\n}","import { useCallback, useEffect, useState } from \"react\";\n\nimport { GetDataByCrieteries } from \"utils/api\";\nimport { RandomKey, DateFromMilliseconds } from \"utils/content\";\nimport { EditItem, PaintItem, RemoveItem, TopItem } from \"utils/effects\";\nimport { Notify } from \"components/app-notification/notification\";\n\nimport styled from \"styled-components\"\n\nconst SParsel = styled.div`\n    position: relative;\n    padding: 1rem;\n    min-height: 30vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    background: ${props => props.color ? props.color : 'white'};\n    border: 1px solid black;\n    border-radius: 10px;\n\n    & .info {\n        display: flex;\n        justify-content: space-between;\n\n        & .general_info {\n            display: flex;\n            flex-direction: column;\n\n            & .price b {\n                text-decoration: underline;\n            }\n        }\n\n        & .other_info  {\n            & .phones > * {\n                margin: .5rem;\n                padding: .5rem;\n                font-size: 4rem;\n                border-radius: 10px;\n                cursor: pointer;\n                transition: var(--transitionApp);\n\n                &:hover {\n                    background: var(--blueColor);\n                }\n            }\n\n            & .expire {\n                margin: .5rem;\n            }\n        }\n    }\n\n    & .photos {\n        display: flex;\n        flex-wrap: wrap;\n\n        & span {\n            max-width: 20vw;\n            display: block;\n            margin: 5px;\n            border-radius: 5px;\n            background: #000000a3;\n\n            & img {\n                width: 100%;\n                height: 100%;\n            }\n        }\n    }\n\n    & .manage {\n        position: absolute;\n        right: 0;\n        top: 0;\n        padding: .5rem;\n        margin: .5rem;    \n        background: #2f3a64;\n        color: var(--onHoverColor);\n        font-size: 1rem;\n        border-radius: 5px;\n\n        & .manage-action {\n            cursor: pointer;\n            margin: .5rem;\n            transition: var(--transitionApp);\n            text-align: right;\n            vertical-align: middle;\n            \n            &:hover {\n                background: var(--darkGreyColor);\n            }\n        }\n\n        & .manage-actions {\n            display: flex;\n            flex-direction: column;\n        }\n    }\n\n    @media screen and (max-width: 600px) {\n        & .manage {\n            font-size: 1.5rem;\n        }\n    }\n`;\n\nexport default function Parsel({ data, isMy = false, changeItem, removeItem }) {\n    const [photos, setPhotos] = useState();\n    const [isOpened, setOpened] = useState(false);\n\n    const getPhotos = useCallback(async () => {\n        const res = await GetDataByCrieteries(\"images\", { \"id\": data.id });\n        if (res?.err === \"n/d\") return setPhotos(null);\n        if (res.err && res.err !== \"ok\") return Notify('fail', \"Не удалось загрузить прикрепленные фото\");\n        return setPhotos(res?.data || res);\n    }, [data]);\n\n    useEffect(() => {\n        if (photos === undefined) return getPhotos()\n    }, [getPhotos, photos])\n\n    return (\n        <SParsel color={data.color}>\n            <div className=\"info\">\n                <div className=\"general_info\">\n                    <span>{data.from}-{data.to}</span>\n                    <span>{data.title}</span>\n                    <span>Вес: {data.weight} кг</span>\n                    <span className=\"price\">Цена: <b> {data.price} </b> тг</span>\n                </div>\n\n                <div className=\"other_info\">\n                    <div className=\"phones\">\n                        {\n                            data.isHaveWhatsUp === 1 &&\n                            <a target=\"_blank\" rel=\"noreferrer\" href={`https://api.whatsapp.com/send?phone=${data.contactNumber}&text=\"Добрый день, пишу из приложения Жибек насчет вашей посылки: ${data.title}\"`}>\n                                <i className=\"fa fa-whatsapp\" aria-hidden=\"true\"></i>\n                            </a>\n                        }\n\n                        <span onClick={() => window.open(\"tel:\" + data.contactNumber)}>\n                            <i className=\"fa fa-phone\" aria-hidden=\"true\"></i>\n                        </span>\n                    </div>\n                    <div className=\"expire\">\n                        <span>Надо доставить до: {DateFromMilliseconds(data.expireDatetime)}</span>\n                    </div>\n                </div>\n            </div>\n\n            {\n                photos\n                    ? <div className=\"photos\">\n                        {photos?.map(({ src }) => <span key={RandomKey()}><img src={src} alt=\"\" /></span>)}\n                    </div>\n                    : <div className=\"photos\"> Нет фото</div>\n            }\n\n            {\n                isMy &&\n                <div className=\"manage\">\n                    <div className=\"manage-action\" onClick={() => setOpened(!isOpened)}>\n                        <span>Действия</span>\n                    </div>\n\n                    {\n                        isOpened &&\n                        <div className=\"manage-actions\">\n                            <span className=\"manage-action\"\n                                onClick={() => EditItem(\"parsel\", {...data, 'photos': photos}, newData => changeItem(data.id, newData))}\n                            >\n                                <i className=\"fa fa-pencil\" aria-hidden=\"true\">Редактировать</i>\n                            </span>\n                            <span className=\"manage-action\" onClick={() => RemoveItem(data.id, \"parsel\", () => removeItem())}>\n                                <i className=\"fa fa-trash\" aria-hidden=\"true\">Удалить</i>\n                            </span>\n                            <span className=\"manage-action\" onClick={() => PaintItem(data.id, \"parsel\", newData => changeItem(data.id, Object.assign({}, data, newData)))}>\n                                <i className=\"fa fa-paint-brush\" aria-hidden=\"true\">Покрасить</i>\n                            </span>\n                            <span className=\"manage-action\" onClick={() => TopItem(data.id, \"parsel\", newData => changeItem(data.id, Object.assign({}, data, newData)))}>\n                                <i className=\"fa fa-level-up\" aria-hidden=\"true\">Поднять</i>\n                            </span>\n                        </div>\n                    }\n                </div>\n            }\n        </SParsel>\n    )\n}","import { useState } from \"react\";\n\nimport { DateFromMilliseconds } from \"utils/content\";\nimport { EditItem, PaintItem, RemoveItem, TopItem } from \"utils/effects\";\n\nimport styled from \"styled-components\";\n\nconst STraveler = styled.div`\n    position: relative;\n    padding: 1rem;\n    min-height: 30vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    background: ${props => props.color ? props.color : 'white'};\n    border: 1px solid black;\n    border-radius: 10px;\n\n    & .info {\n        display: flex;\n        justify-content: space-between;\n\n        & .general_info {\n            display: flex;\n\n            & div {\n                display: flex;\n                flex-direction: column;\n                margin: 1rem;\n            }\n\n            & .weigth b {\n                text-decoration: underline;\n            }\n        }\n\n        & .other_info  {\n            & .phones > * {\n                margin: .5rem;\n                padding: .5rem;\n                font-size: 4rem;\n                border-radius: 10px;\n                cursor: pointer;\n                transition: var(--transitionApp);\n\n                &:hover {\n                    background: var(--blueColor);\n                }\n            }\n        }\n    }\n\n    & .manage {\n        position: absolute;\n        right: 0;\n        top: 0;\n        padding: .5rem;\n        margin: .5rem;    \n        background: #2f3a64;\n        color: var(--onHoverColor);\n        font-size: 1rem;\n        border-radius: 5px;\n\n        & .manage-action {\n            cursor: pointer;\n            margin: .5rem;\n            transition: var(--transitionApp);\n            text-align: right;\n            vertical-align: middle;\n            \n            &:hover {\n                background: var(--darkGreyColor);\n            }\n        }\n\n        & .manage-actions {\n            display: flex;\n            flex-direction: column;\n        }\n    }\n\n    @media screen and (max-width: 600px) {\n        & .manage {\n            font-size: 1.5rem;\n        }\n    }\n`;\n\nexport default function Traveler({ data, isMy = false, changeItem, removeItem }) {\n    const [isOpened, setOpened] = useState(false);\n\n    return (\n        <STraveler color={data.color}>\n            <div className=\"info\">\n                <div className=\"general_info\">\n                    <div className=\"common\">\n                        <span>{data.from}-{data.to}</span>\n                        <span className=\"weight\">Заберу до: <b> {data.weight} </b> кг</span>\n                        <span>Тип транспорта: {data.travelType}</span>\n                    </div>\n\n                    <div className=\"dates\">\n                        <span> <b> Выезд: </b> {DateFromMilliseconds(data.departureDatetime)}</span>\n                        <span> <b> Прибытие: </b> {DateFromMilliseconds(data.arrivalDatetime)}</span>\n                    </div>\n                </div>\n\n                <div className=\"other_info\">\n                    <div className=\"phones\">\n                        {\n                            data.isHaveWhatsUp === 1 &&\n                            <a target=\"_blank\" rel=\"noreferrer\" href={`https://api.whatsapp.com/send?phone=${data.contactNumber}&text=\"Добрый день, пишу из приложения Жибек насчет передачи посылки\"`}>\n                                <i className=\"fa fa-whatsapp\" aria-hidden=\"true\"></i>\n                            </a>\n                        }\n\n                        <span onClick={() => window.open(\"tel:\" + data.contactNumber)}>\n                            <i className=\"fa fa-phone\" aria-hidden=\"true\"></i>\n                        </span>\n                    </div>\n\n                </div>\n            </div>\n\n            {\n                isMy &&\n                <div className=\"manage\">\n                    <div className=\"manage-action\" onClick={() => setOpened(!isOpened)}>\n                        <span>Действия</span>\n                    </div>\n\n                    {\n                        isOpened &&\n                        <div className=\"manage-actions\">\n                            <span className=\"manage-action\"\n                                onClick={\n                                    () =>\n                                        EditItem(\n                                            \"traveler\",\n                                            data,\n                                            newData => changeItem(data.id, newData)\n                                        )\n                                }\n                            >\n                                <i className=\"fa fa-pencil\" aria-hidden=\"true\">Редактировать</i>\n                            </span>\n                            <span className=\"manage-action\" onClick={() => RemoveItem(data.id, \"traveler\", () => removeItem())}>\n                                <i className=\"fa fa-trash\" aria-hidden=\"true\">Удалить</i>\n                            </span>\n                            <span className=\"manage-action\" onClick={() => PaintItem(data.id, \"traveler\", newData => changeItem(data.id, Object.assign({}, data, newData)))}>\n                                <i className=\"fa fa-paint-brush\" aria-hidden=\"true\">Покрасить</i>\n                            </span>\n                            <span className=\"manage-action\" onClick={() => TopItem(data.id, \"traveler\", newData => changeItem(data.id, Object.assign({}, data, newData)))}>\n                                <i className=\"fa fa-level-up\" aria-hidden=\"true\">Поднять</i>\n                            </span>\n                        </div>\n                    }\n                </div>\n            }\n        </STraveler>\n    )\n}","import { useEffect, useState } from \"react\";\n\nimport { ScrollHandler } from \"utils/effects\";\nimport { useFromTo } from \"utils/hooks\";\nimport { RandomKey } from \"utils/content\";\nimport Parsel from \"components/parsel/parsel\";\nimport Traveler from \"components/traveler/traveler\";\n\nimport styled from \"styled-components\";\n\nconst SHistory = styled.section`\n    padding: 1rem;\n\n    & .history-tabs {\n        display: flex;\n        align-items: center;\n\n        & span {\n            margin: .5rem;\n            padding: 1rem;\n            color: var(--onHoverColor);\n            border-radius: 10px;\n            transition: var(--transitionApp);\n            cursor: pointer;\n\n            &.active,\n            &:hover {\n                background: var(--blueColor);\n            }\n        }\n    }\n\n    & .history {\n        padding: 1rem;\n        max-height: 60vh;\n        overflow: auto;\n        border-radius: 10px;\n        background: var(--offHoverBG);\n    }\n`\n\nconst loadHistory = (getType, getTypeOnRus, getPart) => getPart(getType, { 'type': 'user' }, 'Не удалось загрузить ' + getTypeOnRus)\n\nconst configHistoryParams = tab => {\n    if (tab === 0) return ['parsels', 'посылки', Parsel];\n    return ['travelers', 'путешествия', Traveler]\n}\n\nexport default function History() {\n    const [tab, setTab] = useState(0);\n    const { datalist, isStopLoad, isLoaded, getPart, zeroState, setDataList } = useFromTo()\n\n    const [getType, getTypeOnRus, Item] = configHistoryParams(tab);\n\n    const changeItem = (id, newData) => {\n        const index = datalist.findIndex(d => d.id === id)\n        datalist[index] = newData\n        setDataList([...datalist]);\n    }\n\n    const removeItem = id => setDataList([...datalist.filter(d => d.id !== id)])\n\n    useEffect(() => {\n        if (datalist.length === 0 && !isLoaded) {\n            loadHistory(getType, getTypeOnRus, getPart)\n        }\n    }, [datalist, isLoaded, getType, getTypeOnRus, tab, getPart, zeroState]);\n\n    return (\n        <SHistory>\n            <div className=\"history-tabs\">\n                <span className={tab === 0 ? 'active' : ''} onClick={() => setTab(0) || zeroState()}>Ваши посылки</span>\n                <span className={tab === 1 ? 'active' : ''} onClick={() => setTab(1) || zeroState()}>Ваши путешествия</span>\n            </div>\n\n            {\n                datalist.length > 0 &&\n                <div className=\"history\" onScroll={e => ScrollHandler(e, isStopLoad, false, () => loadHistory(getType, getTypeOnRus, getPart))}>\n                    {datalist.map(d => <Item key={RandomKey()} data={d} isMy={true} changeItem={changeItem} removeItem={removeItem} />)}\n                </div>\n            }\n        </SHistory>\n\n    )\n}","import { useCallback, useState } from \"react\";\n\nimport { Notify } from \"components/app-notification/notification\";\n\nimport { GetDataByCrieteries } from \"./api\";\n\n// for lazy load\nexport const useFromTo = (initState = [], step = 10) => {\n    const [fromToState, setFromToState] = useState({\n        'start': 0,\n        'isStopLoad': false,\n        'isLoaded': false,\n        'datalist': initState,\n    });\n\n    const setDataList = state => setFromToState(Object.assign({}, fromToState, { 'datalist': state }));\n\n    const getPart = useCallback(async(getWhat = \"\", params = {}, failText = \"\", isAppToEnd = true, isNeedClear = false) => {\n        if (getWhat === \"\" || failText === \"\") return Notify('fail', failText);\n\n        const res = await GetDataByCrieteries(getWhat, {\n            ...params,\n            'from': fromToState.start,\n            'step': step\n        });\n\n        if (res.err && res.err !== 'ok') {\n            fromToState.isStopLoad = true;\n            fromToState.isLoaded = true;\n            setFromToState(Object.assign({}, fromToState));\n            return Notify('fail', failText + \" : \" + res.err);\n        }\n\n        if (!fromToState.isLoaded) fromToState.isLoaded = true;\n        if (isNeedClear) fromToState.datalist = res;\n        else if (isAppToEnd) fromToState.datalist = [...fromToState.datalist, ...res];\n        else fromToState.datalist = [...res, ...fromToState.datalist];\n\n        if (res.length < step) fromToState.isStopLoad = true;\n        else fromToState.start += step;\n\n        setFromToState(Object.assign({}, fromToState));\n        return true;\n    }, [fromToState, step])\n\n    const zeroState = () => setFromToState(Object.assign({}, fromToState, {\n        'start': 0,\n        'isStopLoad': false,\n        'isLoaded': false,\n        'datalist': initState,\n    }));\n\n    return {\n        'datalist': fromToState.datalist,\n        'isStopLoad': fromToState.isStopLoad,\n        'isLoaded': fromToState.isLoaded,\n        setDataList,\n        getPart,\n        zeroState,\n    }\n}","import { useCallback, useEffect, useState } from \"react\";\n\nimport { GetDataByCrieteries } from \"utils/api\";\nimport Input from \"components/form-input/input\";\nimport Select from \"components/form-select/select\";\n\nexport default function PhoneField({ index, base, required }) {\n    const [codes, setCodes] = useState();\n\n    const getCodes = useCallback(async () => {\n        const res = await GetDataByCrieteries('countryCodes');\n        if (res.err && res?.err !== \"ok\") return setCodes(null);\n        return setCodes(res)\n    }, [])\n\n    useEffect(() => {\n        if (codes === undefined) return getCodes()\n    }, [getCodes, codes])\n\n\n    if (!codes) return null;\n    return (\n        <div>\n            <Input index={index} id=\"phone\" type=\"tel\" name=\"phone\" base={base} labelText=\"Телефон:\"\n                minLength=\"10\" maxLength=\"15\" placeholder=\"7777777777\" required={required}\n            />\n\n            <Select text=\"Код страны:\" name=\"countryCode\" required={required} options={{\n                data: codes,\n                value: \"code\",\n                makeText: ({code, country}) => `${code} (${country})`\n            }} />\n        </div>\n    )\n}","import { ShowAndHidePassword } from 'utils/effects';\nimport Input from '../form-input/input';\n\nimport styled from 'styled-components';\n\nconst SPasswordWrapper = styled.div`\n    display: flex;\n    align-items: baseline;\n    cursor: pointer;\n\n    & input {\n        margin: 0 1rem;\n        flex-grow: 1;\n    }\n\n    & i {\n        padding: 5px;\n        background: var(--offHoverBG);\n        border-radius: 5px;\n        box-shadow: 2px 2px 2px 0 #00000061;\n    }\n`;\n\nexport default function PasswordField({ index, id, required, hidden = false, labelText, placeholder, pass, passToggle }) {\n    return (\n        <SPasswordWrapper>\n            <Input index={index} id={id} type=\"password\" name=\"password\" base={pass.base} required={required}\n                minLength=\"8\" maxLength=\"30\" placeholder={placeholder} labelText={labelText} hidden={hidden}\n            />\n\n            {\n                !hidden &&\n                <i className=\"fa fa-eye fa-eye-slash\"\n                    aria-hidden=\"true\"\n                    title=\"show/hide password\"\n                    onClick={e => {\n                        ShowAndHidePassword(e, document.getElementById(id), passToggle);\n                    }}\n                ></i>\n            }\n        </SPasswordWrapper>\n    )\n}","import { useState } from \"react\";\n\nimport { USER } from \"constants/constants\";\nimport { SubmitFormData, useInput, useTogglePassword } from \"utils/form\";\nimport { UserOnline } from \"utils/user\";\nimport { Notify } from \"components/app-notification/notification\";\nimport PhoneField from \"components/phone-field/field\";\nimport SubmitBtn from \"components/submit-btn/submit\";\nimport Input from \"components/form-input/input\";\nimport PasswordField from \"components/password-field/password\";\n\nimport styled from \"styled-components\";\n\nlet afterStyles = [];\n\nconst SForms = styled.form `\n    padding: 2rem;\n`;\n\nexport default function EditProfile() {\n    const nickname = useInput('');\n    const phone = useInput('');\n    const pass = useInput('');\n    const passToggle = useTogglePassword()\n    const code = useInput('');\n    const [step, setStep] = useState(1);\n\n    const fields = [phone, nickname, pass, code]; // fields for reset\n\n    const onSuccessStep1 = () => {\n        Notify('success', \"Отправлено смс на номер \" + phone.base.value + \". Возьмите оттуда код подтверждения\")\n        setStep(2);\n    }\n    const onSuccessStep2 = () => Notify('success', `Вы успешно изменили ваши данные.`) || UserOnline(USER.id)\n    const onFail = err => Notify('fail', 'Ошибка регистрации:' + err);\n\n    return (\n        step === 1\n            ? <SForms action=\"/e/user/confirm\" onSubmit={async (e) => {\n                afterStyles = await SubmitFormData(e, afterStyles, fields, undefined, onSuccessStep1, onFail, false);\n            }}>\n                <h3>Смена данных(шаг 1). Введите только то, что хотите</h3>\n\n                <PhoneField index=\"0\" base={phone.base} required={false} />\n\n                <Input index=\"1\" id=\"nickname\" type=\"text\" name=\"nickname\" base={nickname.base} labelText=\"Имя(никнейм):\"\n                    minLength=\"3\" maxLength=\"20\" placeholder=\"Miron\" required={false}\n                />\n                <PasswordField index=\"2\" id=\"password\" name=\"password\" labelText=\"Пароль:\"\n                    placeholder=\"User1234\" pass={pass} passToggle={passToggle} required={false}\n                />\n\n                <SubmitBtn value=\"Отправить!\" />\n            </SForms>\n\n            : <SForms action=\"/e/user\" onSubmit={async (e) => {\n                afterStyles = await SubmitFormData(e, afterStyles, fields, undefined, onSuccessStep2, onFail);\n            }}>\n                <h3>Смена данных(шаг 2)</h3>\n\n                <Input hidden={true} index=\"0\" id=\"phone\" type=\"tel\" name=\"phone\" base={phone.base} labelText=\"Телефон:\" required={false} />\n                <Input hidden={true} index=\"1\" id=\"nickname\" type=\"text\" name=\"nickname\" base={nickname.base} labelText=\"Имя(никнейм):\" required={false} />\n                <PasswordField index=\"2\" id=\"password\" name=\"password\" labelText=\"Пароль:\" pass={pass} passToggle={passToggle} required={false} hidden={true}/>\n        \n                <Input index=\"3\" id=\"code\" type=\"text\" name=\"code\" base={code.base} labelText=\"8-значный код:\"\n                    minLength=\"8\" maxLength=\"8\" placeholder=\"Mfa7sd45\"\n                />\n\n                <SubmitBtn value=\"Отправить!\" />\n            </SForms>\n    )\n}","import { useState } from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\n\nimport { USER } from 'constants/constants';\nimport { SignOut } from 'utils/user';\nimport { PopupOpen } from 'components/popup/popup';\n\nimport History from './history/history';\nimport EditProfile from './edit-profile/profile';\nimport styled from 'styled-components';\n\nconst SAside = styled.aside`\n    grid-area: aside;\n    position: fixed;\n    left: 100vw;\n    padding: 1rem;\n    width: 80vw;\n    height: 100vh;\n    background: #2b2b2be0;\n    transition: var(--transitionApp);\n    z-index: 10;\n    opacity: .9;\n\n    &.open {\n        transform: translate(-80vw);\n    }\n\n    & .open-btn {\n        position: absolute;\n        right: 100%;\n        top: 80%;\n        padding: 1rem;\n        border-radius: 5px;\n        font-size: 1.5rem;\n        color: white;\n        background:var(--blueColor);\n        z-index: 15;\n        cursor: pointer;\n    }\n`\n\nconst SUser = styled.div`\n    margin: 1rem;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    & > * {\n        display: flex;\n        align-items: center;\n    }\n`\n\nconst SLogo = styled.div`\n    margin: auto;\n    width: 10vw;\n    display: block;\n    overflow: hidden;\n    transition: var(--transitionApp);\n\n    &:hover {\n        filter: brightness(0.5);\n    }\n\n    & img {\n        height: 100%;\n        width: 100%;\n    }\n`\n\nconst SNickname = styled.div`\n    margin: .5rem;\n    padding: .5rem;\n    width: max-content;\n    max-width: 100%;\n    text-transform: uppercase;\n    font-weight: bold;\n    text-align: center;\n    word-break: break-all;\n    background: var(--onHoverColor);\n    border-radius: 5px;\n    transition: var(--transitionApp);\n`\n\nconst SLogout = styled(SNickname)`\n    color: var(--redColor);\n    cursor: pointer;\n\n    &:hover {\n        background: var(--redColor);\n        color: var(--onHoverColor);\n    }\n`\n\nconst SEdit = styled(SNickname)`\n    cursor: pointer;\n\n    &:hover {\n        background: var(--redColor);\n        color: var(--onHoverColor);\n    }\n`;\n\nexport default function Aside() {\n    const [isOpened, setOpened] = useState(false);\n    const history = useHistory();\n\n    return (\n        <SAside className={isOpened ? \"open\" : \"\"}>\n            {/* aside open/close btn */}\n            <div className=\"open-btn\" onClick={() => setOpened(!isOpened)}>\n                <i className=\"fa fa-bars\" aria-hidden=\"true\"></i>\n            </div>\n\n            {\n                isOpened &&\n                <>\n                    <SLogo as={NavLink} to=\"/\" >\n                        <img src=\"/assets/app/logo192.png\" alt=\"logo\" />\n                    </SLogo>\n\n                    <SUser>\n                        {\n                            USER.status === \"online\"\n                                ? <div>\n                                    <SNickname>\n                                        <i className=\"fa fa-user\" aria-hidden=\"true\"></i>\n                                        {USER.nickname} ({USER.phoneNumber})\n                                    </SNickname>\n                                    <SEdit onClick={()=>PopupOpen(EditProfile, {})}>\n                                        <i className=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                                    </SEdit>\n                                </div>\n                                : <SNickname>Здесь будет ваше имя</SNickname>\n                        }\n\n                        {\n                            USER.status === \"online\"\n                                ? <SLogout onClick={() => SignOut(history)}>\n                                    <i className=\"fa fa-sign-out\" aria-hidden=\"true\"></i>\n                                    Выход\n                                </SLogout>\n                                : <SLogout onClick={() => history.push(\"/sign\")}>\n                                    <i className=\"fa fa-sign-in\" aria-hidden=\"true\"></i>\n                                    Войти\n                                </SLogout>\n                        }\n                    </SUser>\n\n                    {\n                        USER.status === \"online\" && <History />\n                    }\n                </>\n            }\n        </SAside>\n    )\n}","import { NavLink } from 'react-router-dom';\n\nimport styled from 'styled-components';\n\nconst SHeader = styled.header`\n    grid-area: header;\n    position: fixed;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    height: 7vh;\n    padding: 1rem;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    background: var(--blueColor);\n    z-index: 5;\n`;\n\nconst SNavLink = styled(NavLink)`\n    margin: 0.5rem 0;\n    padding: 0.5rem;\n    flex-basis: 20%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border: 1px solid #231E2F;\n    border-radius: 5px;\n    color: var(--onHoverColor);\n    text-shadow: 1px 1px 5px black;\n    text-decoration: none;\n    text-transform: uppercase;\n    transition: var(--transitionApp);\n\n    &.active,\n    &:hover {\n        background: var(--onHoverColor);\n    }\n`\n\n// Generate navlink\nconst GNavLink = ({isExact, to, linkText}) => {\n    return (\n        <SNavLink exact={isExact} activeClassName=\"active\" to={to}>\n            <span className=\"nav-link-text\">{linkText}</span>\n        </SNavLink>\n    )\n}\n\nexport default function Header() {\n    return (\n        <SHeader>\n            <GNavLink isExact={true} to=\"/parsel\"       linkText=\"Отправит посылку\" />\n            <GNavLink isExact={true} to=\"/parsels\"      linkText=\"Лента посылок\" />\n            <GNavLink isExact={true} to=\"/traveler\"     linkText=\"Я попутчик\" />\n            <GNavLink isExact={true} to=\"/travelers\"    linkText=\"Лента попутчиков\" />\n        </SHeader>\n    )\n}","import { useState } from 'react';\nimport { useHistory } from 'react-router';\n\nimport { SubmitFormData, useInput } from 'utils/form';\nimport { Notify } from 'components/app-notification/notification';\nimport Input from 'components/form-input/input';\nimport SubmitBtn from 'components/submit-btn/submit';\nimport PhoneField from 'components/phone-field/field';\n\nlet afterStyles = []; // form handle all ::after notifications\n\nexport default function SignUp() {\n    const nickname = useInput('');\n    const phone = useInput('');\n    const code = useInput('');\n    const [step, setStep] = useState(1);\n    const history = useHistory();\n\n    const fields = [phone, nickname, code]; // fields for reset\n\n    const onSuccessStep1 = () => {\n        Notify('success', \"Отправлено смс на номер \" + phone.base.value + \". Возьмите оттуда код подтверждения\")\n        setStep(2);\n    }\n    const onSuccessStep2 = data => {\n        Notify('success', `Вы успешно зарегистрированы. Ваш логин: \"${phone.base.value}\" и временный пароль:\"${data?.password}\"`, false)\n        history.push(\"/parsel\")\n    }\n    const onFail = err => Notify('fail', 'Ошибка регистрации:' + err);\n\n    return (\n        step === 1\n            ? <form action=\"/sign/sms/up\" onSubmit={async (e) => {\n                afterStyles = await SubmitFormData(e, afterStyles, fields, undefined, onSuccessStep1, onFail, false);\n            }}>\n                <h3>Регистрация(шаг 1)</h3>\n\n                <PhoneField index=\"0\" base={phone.base} />\n\n                <SubmitBtn value=\"Отправить!\" />\n            </form>\n\n            : <form action=\"/sign/up\" onSubmit={async (e) => {\n                afterStyles = await SubmitFormData(e, afterStyles, fields, undefined, onSuccessStep2, onFail);\n            }}>\n                <h3>Регистрация(шаг 2)</h3>\n\n                <Input index=\"1\" id=\"nickname\" type=\"text\" name=\"nickname\" base={nickname.base} labelText=\"Имя(никнейм):\"\n                    minLength=\"3\" maxLength=\"20\" placeholder=\"Miron\"\n                />\n                <Input index=\"2\" id=\"code\" type=\"text\" name=\"code\" base={code.base} labelText=\"8-значный код:\"\n                    minLength=\"8\" maxLength=\"8\" placeholder=\"Mfa7sd45\"\n                />\n                <SubmitBtn value=\"Отправить!\" />\n            </form>\n    )\n}\n","import { useHistory } from 'react-router';\n\nimport { SubmitFormData, useInput, useTogglePassword } from 'utils/form';\nimport { UserOnline } from 'utils/user';\nimport { Notify } from 'components/app-notification/notification';\nimport Input from 'components/form-input/input';\nimport PasswordField from 'components/password-field/password';\nimport SubmitBtn from 'components/submit-btn/submit';\n\nlet afterStyles = []; // form handle all ::after notifications\n\nexport default function SignIn() {\n    const login = useInput();\n    const pass = useInput();\n    const passToggle = useTogglePassword();\n    const fields = [login, pass];\n    const history = useHistory()\n\n    // custom validation\n    const customValidation = () =>\n        (!(/[a-z]+/g.test(pass.base.value) && /[A-Z]+/g.test(pass.base.value) && /[0-9]+/g.test(pass.base.value))) ? [1] : [];\n\n    const onSuccess = async (data) => {\n        const isOnline = await UserOnline(data.id);\n        if (isOnline) {\n            Notify('success', \"Вход произведен\");\n            history.push('/parsel');\n        } else Notify('fail', \"Ошибка входа\")\n    }\n    const onFail = err => Notify('fail', \"Ошибка входа:\" + err);\n\n    return (\n        <form action=\"/sign/in\" onSubmit={async (e) => {\n            afterStyles = await SubmitFormData(e, afterStyles, fields, customValidation, onSuccess, onFail);\n        }}>\n            <h3>Вход</h3>\n\n            <Input index=\"0\" id=\"login\" name=\"phone\" type=\"tel\" base={login.base} labelText=\"Логин:\"\n                minLength=\"11\" maxLength=\"11\" placeholder=\"87777777777\"\n            />\n            <PasswordField index=\"1\" id=\"password\" name=\"password\" labelText=\"Пароль:\"\n                placeholder=\"User1234\" pass={pass} passToggle={passToggle}\n            />\n\n            <SubmitBtn value=\"Отправить!\" />\n        </form>\n    )\n}","import { useState } from 'react';\nimport { useHistory } from 'react-router';\n\nimport { SubmitFormData, useInput, useTogglePassword } from 'utils/form';\nimport { Notify } from 'components/app-notification/notification';\nimport Input from 'components/form-input/input';\nimport SubmitBtn from 'components/submit-btn/submit';\nimport PasswordField from 'components/password-field/password';\nimport PhoneField from 'components/phone-field/field';\n\nlet afterStyles = []; // form handle all ::after notifications\n\nexport default function Restore() {\n    const phone = useInput();\n    const code = useInput('');\n    const pass = useInput('');\n    const passToggle = useTogglePassword()\n    const [step, setStep] = useState(1);\n    const history = useHistory();\n    const fields = [phone, pass, code]; // fields for reset\n\n    const onSuccessStep1 = () => {\n        Notify('success', \"Отправлено смс на номер \" + phone.base.value + \". Возьмите оттуда код подтверждения\");\n        setStep(2);\n    }\n    const onSuccessStep2 = () => {\n        Notify('success', \"Пароль успешно изменен.\");\n        history.push(\"/parsel\")\n    }\n    const onFail = err => Notify('fail', 'Ошибка восстановления:' + err);\n\n    return step === 1\n        ? <form action=\"/sign/sms/ch\" onSubmit={async (e) => {\n            afterStyles = await SubmitFormData(e, afterStyles, fields, undefined, onSuccessStep1, onFail, false);\n        }}>\n            <h3>Восстановление пароля(шаг 1)</h3>\n\n            <PhoneField index=\"0\" base={phone.base} />\n\n            <SubmitBtn value=\"Отправить!\" />\n        </form>\n\n        : <form action=\"/sign/re\" onSubmit={async (e) => {\n            afterStyles = await SubmitFormData(e, afterStyles, fields, undefined, onSuccessStep2, onFail);\n        }}>\n            <h3>Восстановление пароля(шаг 2)</h3>\n\n            <PasswordField index=\"1\" id=\"password\" name=\"password\" labelText=\"Новый пароль:\"\n                placeholder=\"User1234\" pass={pass} passToggle={passToggle}\n            />\n\n            <Input index=\"2\" id=\"code\" type=\"text\" name=\"code\" base={code.base} labelText=\"8-значный код:\"\n                minLength=\"8\" maxLength=\"8\" placeholder=\"Mfa7sd45\"\n            />\n            <SubmitBtn value=\"Отправить!\" />\n        </form>\n}","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { USER } from 'constants/constants';\nimport { RandomKey } from 'utils/content';\n\nimport SignUp from './up/up';\nimport SignIn from './in/in';\nimport ResetPassword from './reset/reset';\nimport styled from 'styled-components';\n\nconst SSign = styled.section`\n    height: 100%;\n    margin-bottom: 1rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    align-items: center;\n\n    & .logo {\n        max-width: 40vw;\n        max-height: 40vh;\n\n        & img {\n            width: 100%;\n            height: 100%;\n        }\n    }\n\n    & .main-action {\n        min-width: 60vw;\n        padding: 2rem;\n        border-radius: 10px;\n        background: #fdfdfd;\n        box-shadow: var(--boxShadow);\n    }\n\n    & .other-actions {\n        display: flex;\n        flex-direction: column;\n\n        & span {\n            margin: .5rem;\n            padding: .5rem;\n            border-radius: 5px;\n            cursor: pointer;\n            transition: var(--transitionApp);\n\n            &:hover {\n                background: var(--onHoverBG);\n                color:  var(--onHoverColor);\n            }\n        }\n    }\n`;\n\nconst GSignAction = ({ action, setAction }) => {\n    let mainAction;\n    let otherActions = []\n    if (action === \"up\") {\n        mainAction = <SignUp />;\n        otherActions = [<GInAction key={RandomKey()} setAction={setAction} />, <GResetAction key={RandomKey()} setAction={setAction} />];\n    } else if (action === \"reset\") {\n        mainAction = <ResetPassword />;\n        otherActions = [<GUpAction key={RandomKey()} setAction={setAction} />, <GInAction key={RandomKey()} setAction={setAction} />];\n    } else {\n        mainAction = <SignIn />;\n        otherActions = [<GUpAction key={RandomKey()} setAction={setAction} />, <GResetAction key={RandomKey()} setAction={setAction} />];\n    }\n    return (\n        <>\n            <div className=\"main-action\">{mainAction}</div>\n            <div className=\"other-actions\">\n                {otherActions}\n            </div>\n        </>\n    )\n}\n\nconst GInAction = ({ setAction }) => <span onClick={() => setAction(\"in\")}>Войти</span>\nconst GUpAction = ({ setAction }) => <span onClick={() => setAction(\"up\")}>Нет аккаунта? Зарегистроваться</span>\nconst GResetAction = ({ setAction }) => <span onClick={() => setAction(\"reset\")}>Забыли пароль?</span>\n\nexport default function Sign() {\n    const [action, setAction] = useState(\"in\");\n\n    return (\n        <SSign>\n            <div className=\"logo\">\n                <img src=\"/assets/app/logo512.png\" alt=\"logo\" />\n            </div>\n\n            <GSignAction action={action} setAction={setAction} />\n\n            <Link to=\"/\" onClick={()=>USER.guest = true}>Войти как гость</Link>\n\n            <Link download={true} to=\"/assets/rights/name.txt\">Пользовательское соглашение</Link>\n        </SSign>\n    )\n}","import { Link } from \"react-router-dom\"\n\nimport styled from \"styled-components\"\n\nconst S404 = styled.section`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n\n    & h2 {\n        font-size: 10rem;\n        color: var(--redColor);\n    }\n\n    & h3 {\n        font-size: 5rem;\n        color: var(--darkRedColor);\n    }\n\n    & a {\n        padding: 1rem;\n        border-radius: 5px;\n    }\n`;\n\nexport default function Page404() {\n    return (\n        <S404>\n            <h2>404</h2>\n            <h3>Not found</h3>\n\n            <Link to=\"/parsel\">Go home</Link>\n        </S404>\n    )\n}","import { USER } from \"constants/constants\"\nimport ManageParsel from \"components/parsel/manage/manage\";\n\nimport styled from \"styled-components\";\n\nconst SParsel = styled.section`\n    padding: 1rem;\n    margin: 1rem;\n\n    & .parsel_create_tip {\n        padding: 1rem;\n        margin: 1rem;\n        border-radius: 10px;\n        text-align: center;\n        background: #f5f000;\n    }\n`;\n\nconst SParselGuest = styled.section`\n    padding: 1rem;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport default function ParselPage() {\n    if (USER.status !== \"online\" || USER.guest) return <SParselGuest>Войдите, чтобы создать посылки</SParselGuest>\n    return (\n        <SParsel>\n            <div className=\"parsel_create_tip\">\n                Заполните данные, и ваша посылка попадет в ленту посылок, оттуда люди могут увидеть и забрать Вашу посылку\n            </div>\n\n            <ManageParsel />\n        </SParsel>\n    )\n}","import { USER } from \"constants/constants\"\nimport ManageTraveler from \"components/traveler/manage/manage\";\n\nimport styled from \"styled-components\";\n\nconst STravel = styled.section`\n    padding: 1rem;\n    margin: 1rem;\n\n    & .travel_create_tip {\n        padding: 1rem;\n        margin: 1rem;\n        border-radius: 10px;\n        text-align: center;\n        background: #f5f000;\n    }\n`;\n\nconst STravelGuest = styled.section`\n    padding: 1rem;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport default function TravelerPage() {\n    if (USER.status !== \"online\" || USER.guest) return <STravelGuest>Войдите, чтобы стать попутчиком</STravelGuest>\n    return (\n        <STravel>\n            <div className=\"travel_create_tip\">\n                Заполните данные, и Ваша заявка попадет в ленту попутчиков, оттуда Вас заметят люди, которые хотят отправить посылку, а Вы заработаете\n            </div>\n\n            <ManageTraveler />\n        </STravel>\n    )\n}","import { useHistory } from 'react-router';\nimport { Switch, Route } from 'react-router-dom';\n\nimport { RandomKey } from 'utils/content';\nimport SignPage from 'routes/sign/sign';\nimport Page404 from 'routes/404/404';\nimport ParselPage from 'routes/parsel/parsel';\nimport ParselsPage from 'routes/parsels/parsels';\nimport TravelerPage from 'routes/traveler/traveler';\nimport TravelersPage from 'routes/travelers/travelers';\nimport Popup from 'components/popup/popup';\nimport AppNotifications from 'components/app-notification/notification';\n\nimport styled from 'styled-components';\n\nconst SMain = styled.main`\n    grid-area: main;\n    background: var(--greyColor);\n`;\n\n// app's routes\nconst ROUTES = [{\n    href: \"/sign\",\n    isExact: false,\n    component: SignPage,\n}, {\n    href: \"/parsel\",\n    isExact: true,\n    component: ParselPage,\n},{\n    href: \"/parsels\",\n    isExact: true,\n    component: ParselsPage,\n},{\n    href: \"/traveler\",\n    isExact: true,\n    component: TravelerPage,\n}, {\n    href: \"/travelers\",\n    isExact: true,\n    component: TravelersPage,\n}]\n\nexport default function DefineRoutes() {\n    const history = useHistory();\n\n    if (history.location.pathname === \"/\") return history.push(\"/parsel\")\n    return (\n        <SMain>\n            <Switch>\n                {\n                    ROUTES.map(\n                        ({ href, component, isExact }) => <Route key={RandomKey()} exact={isExact} path={href} component={component} />\n                    )\n                }\n                <Route component={Page404} />\n            </Switch>\n\n            {/* popups */}\n            <Popup />\n            <AppNotifications />\n        </SMain>\n    )\n}","export default function ParselsPage() {\n    return (\n        <section>parsels</section>\n    )\n}","export default function TravelersPage() {\n    return(\n        <section>Travelers</section>\n    )\n}","import { useEffect } from 'react';\nimport { useHistory } from 'react-router';\n\nimport { USER } from 'constants/constants';\nimport { IS_SIGN } from 'utils/content';\nimport Aside from 'components/aside/aside';\nimport Header from 'components/header/header';\nimport Main from 'components/routes/routes';\n\nimport './App.css';\nimport styled from 'styled-components';\n\nconst SApp = styled.div`\n  \tdisplay: grid;\n    grid-template-areas: ${props => props.isSign ? \"'main'\" : '\"main aside\" \"header aside\"'};\n    grid-template-rows: ${props => props.isSign ? \"1fr\" : '1fr 7vh'};\n    grid-template-columns: ${props => props.isSign ? '1fr' : '1fr 0fr'};\n    min-height: 100vh;\n\n\t@media screen and (max-width: 600px) {\n\t\t& {\n\t\t\tgrid-template-areas: '\"main aside\" \"header aside\"';\n\t\t\tgrid-template-columns: 1fr;\n\t\t\tgrid-template-rows: 1fr 0fr;\n\t\t}\n\t}\n`;\n\nexport default function App() {\n    const isSign = IS_SIGN();\n    const history = useHistory();\n\n    useEffect(() => {\n        if (USER.status === \"online\") return isSign && history.push(\"/parsel\")\n        if (!USER.guest) return history.push('/sign');\n    }, [history, isSign]);\n\n    return (\n        <SApp isSign={isSign}>\n            {\n                isSign\n                    ? null\n                    : <>\n                        <Aside />\n                        <Header />\n                    </>\n            }\n\n            <Main />\n        </SApp>\n    )\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport { IsLogged, UserOnline } from 'utils/user';\nimport App from './App'\n\nimport reportWebVitals from './reportWebVitals';\n\nconst check = async () => {\n  const id = await IsLogged();\n  if (id) return await UserOnline(id);\n}\n\nconst init = async () => {\n  await check();\n  ReactDOM.render(\n    <React.StrictMode >\n      <Router >\n        <App />\n      </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\ninit();\n\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["components/app-notification/notification.jsx","constants/constants.js","utils/api.js","utils/content.jsx","utils/user.js","components/popup/popup.jsx","utils/effects.js","components/parsel/parsel.jsx","components/traveler/traveler.jsx","components/aside/history/history.jsx","utils/hooks.js","utils/form.js","components/form-input/input.jsx","components/phone-field/field.jsx","components/submit-btn/submit.jsx","components/password-field/password.jsx","components/aside/edit-profile/profile.jsx","components/aside/aside.jsx","components/header/header.jsx","routes/sign/up/up.jsx","routes/sign/in/in.jsx","routes/sign/reset/reset.jsx","routes/sign/sign.jsx","routes/404/404.jsx","components/routes/routes.jsx","routes/home/home.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["interID","USER","id","phoneNumber","nickname","status","guest","formDataToString","data","FormData","res","entries","k","v","slice","Fetching","action","a","method","undefined","err","fetchOption","encodeURI","fetch","then","json","catch","Object","assign","prepareDataToFetch","datas","append","GetDataByCrieteries","datatype","criteries","POSTRequestWithParams","to","params","IS_SIGN","decodeURI","useLocation","pathname","split","includes","IsTwoDigit","parseInt","concat","DateFromMilliseconds","milliseconds","datetime","Date","getDate","getMonth","getFullYear","join","getHours","getMinutes","RandomKey","Math","round","random","SAppNotifications","styled","div","SAppNotification","SCloseNotification","add","removeNotification","Notify","type","content","isAutoClose","length","setInterval","clearInterval","Notification","setTimeout","noteContent","Function","className","onClick","Notifications","useState","ntfs","setNTFS","filter","item","props","key","IsLogged","changeUserData","now","toString","UserOnline","UserOffline","SignOut","history","push","SDisplayFlexCenter","css","SPopup","SPopupBG","SPopupClose","SContentWrapper","close","closeCB","PopupOpen","Component","componentArgs","Popup","popup","setPopup","isOpened","setOpenedState","ScrollHandler","fn","ms","timeOut","args","clearTimeout","Debounce","e","isStopLoad","isScrollingToTop","loadCallback","parent","target","pRec","getBoundingClientRect","scrollTop","scrollHeight","height","priorEdgeChildNum","childElementCount","el","childNodes","scrollIntoView","behavior","EditItem","cb","RemoveItem","TopItem","PaintItem","SParsel","color","Parsel","isMy","changeItem","removeItem","photos","setPhotos","setOpened","getPhotos","useCallback","useEffect","from","title","weight","price","isHaveWhatsUp","rel","href","contactNumber","window","open","expireDatetime","map","src","alt","newData","STraveler","Traveler","travelType","departureDatetime","arrivalDatetime","SHistory","section","loadHistory","getType","getTypeOnRus","getPart","History","tab","setTab","initState","step","fromToState","setFromToState","setDataList","state","getWhat","failText","isAppToEnd","isNeedClear","start","isLoaded","datalist","zeroState","useFromTo","configHistoryParams","Item","index","findIndex","d","onScroll","useInput","initValue","value","setValue","handleChange","resetField","setCertainValue","base","onChange","useTogglePassword","changeType","toggleType","BaseFormValidation","resIndexs","i","values","test","NotifyInvalidField","selector","field","afterStyle","document","createElement","innerHTML","head","appendChild","ResetForm","fields","forEach","ClearAllNotifications","afterStyles","AS","remove","setNotificationIfExist","BIndexs","CIndexs","SubmitFormData","customValidation","onSuccess","onFail","isReset","preventDefault","form","getAttribute","SFormField","SFormInputWrapper","SFormInputLabel","label","SFormInput","input","SFormInputNotification","Label","required","labelText","htmlFor","Input","name","minLength","maxLength","min","max","hidden","placeholder","SLalel","PhoneField","codes","setCodes","getCodes","code","country","SSubmitBtn","SubmitBtn","SPasswordWrapper","PasswordField","pass","passToggle","passElem","passwordToggle","elem","classList","toggle","setAttribute","ShowAndHidePassword","getElementById","EditProfile","phone","setStep","onSuccessStep1","onSuccessStep2","onSubmit","SAside","aside","SUser","SLogo","SNickname","SLogout","SEdit","Aside","useHistory","as","NavLink","SHeader","header","Header","SignUp","password","disabled","SignIn","login","Restore","SSign","GSignAction","mainAction","setAction","otherActions","GInAction","GUpAction","GResetAction","S404","Page404","SMain","main","ROUTES","isExact","component","download","DefineRoutes","exact","path","SApp","isSign","App","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","check","ReactDOM","render","StrictMode","init"],"mappings":"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","file":"static/js/main.2e0dd568.chunk.js","sourcesContent":["import { useState } from 'react';\n\nimport { RandomKey } from 'utils/content';\n\nimport styled from 'styled-components';\n\nconst SAppNotifications = styled.div`\n    position: fixed;\n    right: 0;\n    bottom: 0;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n    z-index: 20;\n`\n\nconst SAppNotification = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: max-content;\n    max-width: 50vw;\n    margin: .5rem;\n    padding: 1rem;\n    color: white;\n    border-radius: 5px;\n    background: var(--blueColor);\n`;\n\nconst SCloseNotification = styled.div`\n    padding: 5px;\n    margin-left: 10px;\n    height: 1.5rem;\n    width: 1.5rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: var(--redColor);\n    background: var(--darkRedColor);\n    border-radius: 50%;\n    cursor: pointer;\n`;\n\nlet add = () => {};\nlet removeNotification = id => {};\nlet interID;\n\nexport const Notify = (type, content, isAutoClose) => {\n    if (add.length !== 0) return add(type, content, isAutoClose);\n    interID = setInterval(() => {\n        if (add.length !== 0) {\n            clearInterval(interID);\n            add(type, content, isAutoClose);\n        }\n    }, 0);\n}\n\nconst Notification = ({ id = 0, type = \"fail\", content, isAutoClose = true }) => {\n    if (!content) return null;\n    if (isAutoClose) setTimeout(() => removeNotification(id), 5000);\n\n    let noteContent = content\n    if (content instanceof Function) noteContent = content(); \n\n    return (\n        <SAppNotification>\n            <div className=\"notification-content\">{noteContent}</div>\n            <SCloseNotification onClick={()=>removeNotification(id)}>\n                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n            </SCloseNotification>\n        </SAppNotification>\n    )\n}\n\nexport default function Notifications() {\n    const [ntfs, setNTFS] = useState([]);\n\n    removeNotification = id => setNTFS(ntfs.filter(item => item.props.id !== id));\n    add = (type, content, isAutoClose)  => {\n        const key = RandomKey();\n        setNTFS([...ntfs, <Notification key={key} id={key} type={type} content={content} isAutoClose={isAutoClose} />]);\n    }\n\n    return <SAppNotifications>{ntfs}</SAppNotifications>;\n}","// current user data\nexport const USER = {\n    id: -1,\n    phoneNumber: '',\n    nickname: 'nickname',\n    status: '',\n    guest: false,\n};","const formDataToString = (data = new FormData()) => {\n    let res = \"\";\n    for (let [k, v] of data.entries())\n        res += k + \"=\" + v + \"&\"\n    return res.slice(0, -1)\n}\n\n// use fetching by both method\nexport const Fetching = async(action, data, method = \"POST\") => {\n    if (action === undefined) return { err: \"action undefined\" };\n\n    const fetchOption = { 'method': method, 'mode': 'cors', 'credentials': 'include' };\n    if (method === \"GET\") action += \"?\" + encodeURI(formDataToString(data));\n    else fetchOption[\"body\"] = data;\n\n    return await fetch(action, fetchOption)\n        .then(res => res.json())\n        .catch(err => Object.assign({}, { 'err': \"500: \" + err }));\n}\n\n// convert from object to FormData\nconst prepareDataToFetch = (datas = {}) => {\n    const data = new FormData();\n    for (let [k, v] of Object.entries(datas)) data.append(k, v);\n    return data;\n}\n\n// get data by criteries & type\nexport const GetDataByCrieteries = async(datatype, criteries = {}) => {\n    const data = prepareDataToFetch(criteries);\n    const res = await Fetching(\"/api/\" + datatype, data, 'GET');\n    if (res.err !== 'ok') return { 'err': res.err }\n    return res.data;\n}\n\n// send post req to host with params\nexport const POSTRequestWithParams = async(to, params = {}) => {\n    const data = prepareDataToFetch(params);\n    return await Fetching(to, data);\n}","import { useLocation } from \"react-router\";\n\nexport const GET_CUR_PATHNAME = () => decodeURI(useLocation().pathname);\nexport const IS_SIGN = () => GET_CUR_PATHNAME().split('/').includes(\"sign\");\n\n// return two digit string\nexport const IsTwoDigit = data => parseInt(data) < 10 ? \"0\".concat(data) : data;\n\n// generate date(15/12/2020 09:09) from milliseconds\nexport const DateFromMilliseconds = milliseconds => {\n    const datetime = new Date(parseInt(milliseconds));\n    return [IsTwoDigit(datetime.getDate()), IsTwoDigit(datetime.getMonth() + 1), datetime.getFullYear()].join('/') +\n        \" \" +\n        [IsTwoDigit(datetime.getHours()), IsTwoDigit(datetime.getMinutes())].join(':');\n}\n\n// calculate time after thing created\nexport const CalculateRelativeDatetime = (datetime = Date.now().toString()) => {\n    const now = Date.now();\n    const given = parseInt(datetime);\n\n    const delims = [[60, \"мин.\"], [60, \"ч.\"], [24, \"д.\"], [7, 30, \"нед.\"], [30, 365, \"мес.\"], [365, \"лет\"]]\n    const isPast = (now - given) > 0 ? true : false;\n    let diff = Math.abs(now - given) / 1000;\n    let diffType = \"секунд\";\n\n    const returnDate = () => {\n        diff = Math.floor(diff);\n\n        if (!isPast) return [\"через\", IsTwoDigit(diff), diffType].join(' ');\n\n        const isToday = Math.abs(now - given) < 86400000;\n        return [isToday ? 'сегодня' : '', IsTwoDigit(diff), diffType, \"назад\"].join(' ');\n    }\n\n    // calculate difference\n    for (let i = 0; i < delims.length; i++) {\n        const cur_del = delims[i]\n        if (cur_del.length === 2) {\n            if (diff > cur_del[0]) {\n                diff /= cur_del[0];\n                diffType = cur_del[1];\n                continue\n            }\n            break\n        }\n        if (cur_del[0] < diff && diff < cur_del[1]) {\n            diff /= cur_del[0];\n            diffType = cur_del[2];\n            continue\n        }\n        break\n    }\n    return returnDate();\n}\n\nexport const RandomKey = () => Math.round(Math.random() * Math.random() * 100000000);","import { USER } from 'constants/constants';\nimport { GetDataByCrieteries, POSTRequestWithParams } from './api';\nimport { Notify } from 'components/app-notification/notification';\n\nexport const IsLogged = async() => {\n    const res = await POSTRequestWithParams('/sign/status');\n    if (res.err !== 'ok') {\n        Notify('fail', res.err);\n        return false;\n    }\n    return res.data.id;\n}\n\n// change USER const\nconst changeUserData = async(id) => {\n    if (id !== undefined) {\n        const res = (await GetDataByCrieteries('user', { id: id }));\n        if (res.err && res.err !== \"ok\") {\n            return Notify('fail', \"Ошибка входа в аккаунт. Не верные данные\")\n        }\n        for (let [k, v] of Object.entries(res[0])) USER[k] = v;\n        USER.status = 'online';\n        return true;\n    } else {\n        for (let k in USER) USER[k] = '';\n        USER.status = Date.now().toString();\n        USER.nickname = \"nickname\";\n        return true;\n    }\n}\n\n// Switch to online\nexport const UserOnline = async(id) => await changeUserData(id);;\n\n// Switch to offline\nexport const UserOffline = async() => await changeUserData();\n\n// send to server signal about sign out\nexport const SignOut = async(history) => {\n    Notify('info', \"Производится выход...\");\n    const res = await POSTRequestWithParams(\"/sign/out\");\n    if (res.err !== \"ok\") return false;\n    const isSignOuted = await UserOffline();\n    if (!isSignOuted) return;\n    history.push('/sign/in');\n    Notify('success', \"Выход произведен\");\n}","import { useState } from 'react';\n\nimport styled, { css } from 'styled-components';\n\nconst SDisplayFlexCenter = css`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst SPopup = styled.div`\n    position: fixed;\n    left: 50%;\n    top: 50%;\n    width: 0;\n    height: 0;\n    ${SDisplayFlexCenter};\n    border-radius: 5px;\n    transition: var(--transitionApp);\n    opacity: 0;\n    z-index: -10;\n\n    &.opened {\n        left: 0;\n        top: 0;\n        width: 100vw;\n        height: 100vh;\n        opacity: 1;\n        z-index: 20;\n    }\n`;\n\n\nconst SPopupBG = styled.div`\n    position: absolute;\n    width: 100vw;\n    height: 100vh;\n    background: #000000ab;\n`;\n\nconst SPopupClose = styled.div`\n    position: absolute;\n    right: 20px;\n    top: 10px;\n    width: 1rem;\n    height: 1rem;\n    padding: 5px;\n    ${SDisplayFlexCenter};\n    background: var(--redColor);\n    border-radius: 100%;\n    transition: var(--transitionApp);\n    cursor: pointer;\n\n    &:hover{\n        background: var(--darkRedColor);\n    }\n`;\n\nconst SContentWrapper = styled.div`\n    max-height: 90vh;\n    max-width: 80vw;\n    height: max-content;\n    width: max-content;\n    ${SDisplayFlexCenter};\n    flex-direction: column;\n    border-radius: 10px;\n    background: #ffffffc7;\n    z-index: 20;\n`;\n\nlet add = ()=>{};\nlet close = ()=>{};\nlet closeCB = ()=>{};\nexport const PopupOpen = (Component, componentArgs = {}) => {\n    add(Component, componentArgs);\n    if (componentArgs.closeCB) closeCB = componentArgs.closeCB;\n}\nexport const ClosePopup = () => close();\n\nexport default function Popup() {\n    const [popup, setPopup] = useState(null);\n    const [isOpened, setOpenedState] = useState(false);\n    add = (Component, componentArgs) => setPopup(<Component {...componentArgs}/>) || setOpenedState(true);\n    close = () => {\n        setOpenedState(false) || setPopup(null);\n        closeCB();\n    }\n    \n    return (\n        <SPopup className={`${isOpened ? 'opened' : ''}`} >\n            <SPopupBG onClick={close}/>\n\n            <SPopupClose onClick={close}>\n                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n            </SPopupClose>\n\n            <SContentWrapper>\n                {popup}\n            </SContentWrapper>\n        </SPopup>\n    )\n}","import { Notify } from \"components/app-notification/notification\";\nimport { PopupOpen } from \"components/popup/popup\";\nimport { POSTRequestWithParams } from \"./api\";\n\n// just debounce\nexport function Debounce(fn, ms) {\n    let timeOut;\n    return (...args) => {\n        clearTimeout(timeOut);\n        timeOut = setTimeout(() => { fn(...args) }, ms)\n    }\n}\n\n// show & hide password by changing input type\nexport const ShowAndHidePassword = (e, passElem, passwordToggle) => {\n    const elem = e.target;\n    passwordToggle.toggleType();\n    elem.classList.toggle('fa-eye-slash');\n    if (passwordToggle.state === \"password\") passElem.setAttribute('type', 'text');\n    else passElem.setAttribute('type', 'password');\n}\n\n/**\n * for lazy load and keeping focus with scrolling\n * @param e event\n * @param isStopLoad stop load or no\n * @param className for getting priorEdgeChild\n * @param isScrollingToTop load on scroll to top or bottom\n * @param loadCallback what do after react edge\n */\nexport const ScrollHandler = Debounce(async(e, isStopLoad, isScrollingToTop = false, loadCallback = async() => {}) => {\n    if (isStopLoad) return;\n\n    const parent = e.target;\n    const pRec = parent.getBoundingClientRect();\n    if (\n        (isScrollingToTop && parent.scrollTop === 0) ||\n        (!isScrollingToTop && parent.scrollTop >= Math.round((parent.scrollHeight - pRec.height) * .75))\n    ) {\n        const priorEdgeChildNum = isScrollingToTop ? 0 : parent.childElementCount - 1;\n\n        if (await loadCallback()) {\n            setTimeout(() => {\n                // smooth scroll\n                const el = parent.childNodes[priorEdgeChildNum];\n                if (el) el.scrollIntoView({ behavior: \"smooth\" });\n            }, 100);\n        }\n    }\n}, 100);\n\nexport const EditItem = async(type, data, cb) => PopupOpen('edit', { 'cb': cb, \"type\": type, ...data })\n\nexport const RemoveItem = async(id, type, cb) => {\n    const res = await POSTRequestWithParams(\"/r\", { 'type': type, 'id': id })\n    if (res.err && res.err !== \"ok\") return Notify('fail', 'Не удалено');\n    cb()\n}\n\nexport const TopItem = async(id, type, cb) => PopupOpen('toptype', { 'cb': cb, \"type\": type, 'id': id })\n\nexport const PaintItem = async(id, type, cb) => PopupOpen('up', { 'cb': cb, \"type\": type, 'id': id })","import { useCallback, useEffect, useState } from \"react\";\n\nimport { GetDataByCrieteries } from \"utils/api\";\nimport { RandomKey, DateFromMilliseconds } from \"utils/content\";\nimport { EditItem, PaintItem, RemoveItem, TopItem } from \"utils/effects\";\nimport { Notify } from \"components/app-notification/notification\";\n\nimport styled from \"styled-components\"\n\nconst SParsel = styled.div`\n    position: relative;\n    padding: 1rem;\n    min-height: 30vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    background: ${props => props.color ? props.color : 'white'};\n    border: 1px solid black;\n    border-radius: 10px;\n\n    & .info {\n        display: flex;\n        justify-content: space-between;\n\n        & .general_info {\n            display: flex;\n            flex-direction: column;\n\n            & .price b {\n                text-decoration: underline;\n            }\n        }\n\n        & .other_info  {\n            & .phones > * {\n                margin: .5rem;\n                padding: .5rem;\n                font-size: 4rem;\n                border-radius: 10px;\n                cursor: pointer;\n                transition: var(--transitionApp);\n\n                &:hover {\n                    background: var(--blueColor);\n                }\n            }\n\n            & .expire {\n                margin: .5rem;\n            }\n        }\n    }\n\n    & .photos {\n        display: flex;\n        flex-wrap: wrap;\n\n        & span {\n            max-width: 20vw;\n            display: block;\n            margin: 5px;\n            border-radius: 5px;\n            background: #000000a3;\n\n            & img {\n                width: 100%;\n                height: 100%;\n            }\n        }\n    }\n\n    & .manage {\n        position: absolute;\n        right: 0;\n        top: 0;\n        padding: .5rem;\n        margin: .5rem;    \n        background: #2f3a64;\n        color: var(--onHoverColor);\n        font-size: 1rem;\n        border-radius: 5px;\n\n        & .manage-action {\n            cursor: pointer;\n            margin: .5rem;\n            transition: var(--transitionApp);\n            text-align: right;\n            vertical-align: middle;\n            \n            &:hover {\n                background: var(--darkGreyColor);\n            }\n        }\n\n        & .manage-actions {\n            display: flex;\n            flex-direction: column;\n        }\n    }\n\n    @media screen and (max-width: 600px) {\n        & .manage {\n            font-size: 1.5rem;\n        }\n    }\n`;\n\nexport default function Parsel({data, isMy = false, changeItem, removeItem}) {\n    const [photos, setPhotos] = useState();\n    const [isOpened, setOpened] = useState(false);\n\n    const getPhotos = useCallback(async () => {\n        const res = await GetDataByCrieteries(\"images\", { \"id\": data.id });\n        if (res?.err === \"n/d\") return setPhotos(null);\n        if (res.err && res.err !== \"ok\") return Notify('fail', \"Не удалось загрузить прикрепленные фото\");\n        return setPhotos(res?.data || res);\n    }, [data]);\n\n    useEffect(() => {\n        if (photos === undefined) return getPhotos()\n    }, [getPhotos, photos])\n\n    return (\n        <SParsel color={data.color}>\n            <div className=\"info\">\n                <div className=\"general_info\">\n                    <span>{data.from}-{data.to}</span>\n                    <span>{data.title}</span>\n                    <span>Вес: {data.weight} кг</span>\n                    <span className=\"price\">Цена: <b> {data.price} </b> тг</span>\n                </div>\n\n                <div className=\"other_info\">\n                    <div className=\"phones\">\n                        {\n                            data.isHaveWhatsUp === 1 &&\n                            <a target=\"_blank\" rel=\"noreferrer\" href={`https://api.whatsapp.com/send?phone=${data.contactNumber}&text=\"Добрый день, пишу из приложения Жибек насчет вашей посылки: ${data.title}\"`}>\n                                <i className=\"fa fa-whatsapp\" aria-hidden=\"true\"></i>\n                            </a>\n                        }\n\n                        <span onClick={() => window.open(\"tel:\" + data.contactNumber)}>\n                            <i className=\"fa fa-phone\" aria-hidden=\"true\"></i>\n                        </span>\n                    </div>\n                    <div className=\"expire\">\n                        <span>Надо доставить до: {DateFromMilliseconds(data.expireDatetime)}</span>\n                    </div>\n                </div>\n            </div>\n\n            {\n                photos\n                    ? <div className=\"photos\">\n                        {photos?.map(({ src }) => <span key={RandomKey()}><img src={src} alt=\"\" /></span>)}\n                    </div>\n                    : <div className=\"photos\"> Нет фото</div>\n            }\n\n            {\n                isMy &&\n                <div className=\"manage\">\n                    <div className=\"manage-action\" onClick={() => setOpened(!isOpened)}>\n                        <span>Действия</span>\n                    </div>\n\n                    {\n                        isOpened &&\n                        <div className=\"manage-actions\">\n                            <span className=\"manage-action\"\n                                onClick={\n                                    () =>\n                                        EditItem(\n                                            \"parsel\",\n                                            data,\n                                            newData => changeItem(data.id, newData)\n                                        )\n                                }\n                            >\n                                <i className=\"fa fa-pencil\" aria-hidden=\"true\">Редактировать</i>\n                            </span>\n                            <span className=\"manage-action\" onClick={() => RemoveItem(data.id, \"parsel\", () => removeItem())}>\n                                <i className=\"fa fa-trash\" aria-hidden=\"true\">Удалить</i>\n                            </span>\n                            <span className=\"manage-action\">\n                                <i className=\"fa fa-paint-brush\" aria-hidden=\"true\" onClick={() => PaintItem(data.id, \"parsel\", newData => changeItem(data.id, Object.assign({}, data, newData)))}>Покрасить</i>\n                            </span>\n                            <span className=\"manage-action\">\n                                <i className=\"fa fa-level-up\" aria-hidden=\"true\" onClick={() => TopItem(data.id, \"parsel\", newData => changeItem(data.id, Object.assign({}, data, newData)))}>Поднять</i>\n                            </span>\n                        </div>\n                    }\n                </div>\n            }\n        </SParsel>\n    )\n}","import { useState } from \"react\";\n\nimport { DateFromMilliseconds } from \"utils/content\";\nimport { EditItem, PaintItem, RemoveItem, TopItem } from \"utils/effects\";\n\nimport styled from \"styled-components\";\n\nconst STraveler = styled.div`\n    position: relative;\n    padding: 1rem;\n    min-height: 30vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    background: ${props => props.color ? props.color : 'white'};\n    border: 1px solid black;\n    border-radius: 10px;\n\n    & .info {\n        display: flex;\n        justify-content: space-between;\n\n        & .general_info {\n            display: flex;\n\n            & div {\n                display: flex;\n                flex-direction: column;\n                margin: 1rem;\n            }\n\n            & .weigth b {\n                text-decoration: underline;\n            }\n        }\n\n        & .other_info  {\n            & .phones > * {\n                margin: .5rem;\n                padding: .5rem;\n                font-size: 4rem;\n                border-radius: 10px;\n                cursor: pointer;\n                transition: var(--transitionApp);\n\n                &:hover {\n                    background: var(--blueColor);\n                }\n            }\n        }\n    }\n\n    & .manage {\n        position: absolute;\n        right: 0;\n        top: 0;\n        padding: .5rem;\n        margin: .5rem;    \n        background: #2f3a64;\n        color: var(--onHoverColor);\n        font-size: 1rem;\n        border-radius: 5px;\n\n        & .manage-action {\n            cursor: pointer;\n            margin: .5rem;\n            transition: var(--transitionApp);\n            text-align: right;\n            vertical-align: middle;\n            \n            &:hover {\n                background: var(--darkGreyColor);\n            }\n        }\n\n        & .manage-actions {\n            display: flex;\n            flex-direction: column;\n        }\n    }\n\n    @media screen and (max-width: 600px) {\n        & .manage {\n            font-size: 1.5rem;\n        }\n    }\n`;\n\nexport default function Traveler({data, isMy = false, changeItem, removeItem}) {\n    const [isOpened, setOpened] = useState(false);\n\n    return (\n        <STraveler color={data.color}>\n            <div className=\"info\">\n                <div className=\"general_info\">\n                    <div className=\"common\">\n                        <span>{data.from}-{data.to}</span>\n                        <span className=\"weight\">Заберу до: <b> {data.weight} </b> кг</span>\n                        <span>Тип транспорта: {data.travelType}</span>\n                    </div>\n\n                    <div className=\"dates\">\n                        <span> <b> Выезд: </b> {DateFromMilliseconds(data.departureDatetime)}</span>\n                        <span> <b> Прибытие: </b> {DateFromMilliseconds(data.arrivalDatetime)}</span>\n                    </div>\n                </div>\n\n                <div className=\"other_info\">\n                    <div className=\"phones\">\n                        {\n                            data.isHaveWhatsUp === 1 &&\n                            <a target=\"_blank\" rel=\"noreferrer\" href={`https://api.whatsapp.com/send?phone=${data.contactNumber}&text=\"Добрый день, пишу из приложения Жибек насчет передачи посылки\"`}>\n                                <i className=\"fa fa-whatsapp\" aria-hidden=\"true\"></i>\n                            </a>\n                        }\n\n                        <span onClick={() => window.open(\"tel:\" + data.contactNumber)}>\n                            <i className=\"fa fa-phone\" aria-hidden=\"true\"></i>\n                        </span>\n                    </div>\n\n                </div>\n            </div>\n\n            {\n                isMy &&\n                <div className=\"manage\">\n                    <div className=\"manage-action\" onClick={() => setOpened(!isOpened)}>\n                        <span>Действия</span>\n                    </div>\n\n                    {\n                        isOpened &&\n                        <div className=\"manage-actions\">\n                            <span className=\"manage-action\"\n                                onClick={\n                                    () =>\n                                        EditItem(\n                                            \"parsel\",\n                                            data,\n                                            newData => changeItem(data.id, newData)\n                                        )\n                                }\n                            >\n                                <i className=\"fa fa-pencil\" aria-hidden=\"true\">Редактировать</i>\n                            </span>\n                            <span className=\"manage-action\" onClick={() => RemoveItem(data.id, \"parsel\", () => removeItem())}>\n                                <i className=\"fa fa-trash\" aria-hidden=\"true\">Удалить</i>\n                            </span>\n                            <span className=\"manage-action\">\n                                <i className=\"fa fa-paint-brush\" aria-hidden=\"true\" onClick={() => PaintItem(data.id, \"parsel\", newData => changeItem(data.id, Object.assign({}, data, newData)))}>Покрасить</i>\n                            </span>\n                            <span className=\"manage-action\">\n                                <i className=\"fa fa-level-up\" aria-hidden=\"true\" onClick={() => TopItem(data.id, \"parsel\", newData => changeItem(data.id, Object.assign({}, data, newData)))}>Поднять</i>\n                            </span>\n                        </div>\n                    }\n                </div>\n            }\n        </STraveler>\n    )\n}","import { useEffect, useState } from \"react\";\n\nimport { ScrollHandler } from \"utils/effects\";\nimport { useFromTo } from \"utils/hooks\";\nimport { RandomKey } from \"utils/content\";\nimport Parsel from \"components/parsel/parsel\";\nimport Traveler from \"components/traveler/traveler\";\n\nimport styled from \"styled-components\";\n\nconst SHistory = styled.section`\n    padding: 1rem;\n\n    & .history-tabs {\n        display: flex;\n        align-items: center;\n\n        & span {\n            margin: .5rem;\n            padding: 1rem;\n            border-radius: 10px;\n            transition: var(--transitionApp);\n            cursor: pointer;\n\n            &.active,\n            &:hover {\n                color: white;\n                background: var(--blueColor);\n            }\n        }\n    }\n\n    & .history {\n        padding: 1rem;\n        max-height: 60vh;\n        overflow: auto;\n        border-radius: 10px;\n        background: var(--offHoverBG);\n    }\n`\n\nconst loadHistory = (getType, getTypeOnRus, getPart) => getPart(getType, { 'type': 'user' }, 'Не удалось загрузить ' + getTypeOnRus)\n\nconst configHistoryParams = tab => {\n    if (tab === 0) return ['parsels', 'посылки', Parsel];\n    return ['travelers', 'путешествия', Traveler]\n}\n\nexport default function History() {\n    const [tab, setTab] = useState(0);\n    const { datalist, isStopLoad, isLoaded, getPart, zeroState, setDataList } = useFromTo()\n\n    const [getType, getTypeOnRus, Item] = configHistoryParams(tab);\n\n    const changeItem = (id, newData) => {\n        const index = datalist.findIndex(d => d.id === id)\n        datalist[index] = newData\n        setDataList([...datalist]);\n    }\n\n    const removeItem = id => setDataList([...datalist.filter(d => d.id !== id)])\n\n    useEffect(() => {\n        if (datalist.length === 0 && !isLoaded) {\n            loadHistory(getType, getTypeOnRus, getPart)\n        }\n    }, [datalist, isLoaded, getType, getTypeOnRus, tab, getPart, zeroState]);\n\n    return (\n        <SHistory>\n            <div className=\"history-tabs\">\n                <span className={tab === 0 ? 'active' : ''} onClick={() => setTab(0) || zeroState()}>Ваши посылки</span>\n                <span className={tab === 1 ? 'active' : ''} onClick={() => setTab(1) || zeroState()}>Ваши путешествия</span>\n            </div>\n\n            {\n                datalist.length > 0 &&\n                <div className=\"history\" onScroll={e => ScrollHandler(e, isStopLoad, false, () => loadHistory(getType, getTypeOnRus, getPart))}>\n                    {datalist.map(d => <Item key={RandomKey()} data={d} isMy={true} changeItem={changeItem} removeItem={removeItem} />)}\n                </div>\n            }\n        </SHistory>\n\n    )\n}","import { useCallback, useState } from \"react\";\n\nimport { Notify } from \"components/app-notification/notification\";\n\nimport { GetDataByCrieteries } from \"./api\";\n\n// for lazy load\nexport const useFromTo = (initState = [], step = 10) => {\n    const [fromToState, setFromToState] = useState({\n        'start': 0,\n        'isStopLoad': false,\n        'isLoaded': false,\n        'datalist': initState,\n    });\n\n    const setDataList = state => setFromToState(Object.assign({}, fromToState, { 'datalist': state }));\n\n    const getPart = useCallback(async(getWhat = \"\", params = {}, failText = \"\", isAppToEnd = true, isNeedClear = false) => {\n        if (getWhat === \"\" || failText === \"\") return Notify('fail', failText);\n\n        const res = await GetDataByCrieteries(getWhat, {\n            ...params,\n            'from': fromToState.start,\n            'step': step\n        });\n\n        if (res.err && res.err !== 'ok') {\n            fromToState.isStopLoad = true;\n            fromToState.isLoaded = true;\n            setFromToState(Object.assign({}, fromToState));\n            return Notify('fail', failText + \" : \" + res.err);\n        }\n\n        if (!fromToState.isLoaded) fromToState.isLoaded = true;\n        if (isNeedClear) fromToState.datalist = res;\n        else if (isAppToEnd) fromToState.datalist = [...fromToState.datalist, ...res];\n        else fromToState.datalist = [...res, ...fromToState.datalist];\n\n        if (res.length < step) fromToState.isStopLoad = true;\n        else fromToState.start += step;\n\n        setFromToState(Object.assign({}, fromToState));\n        return true;\n    }, [fromToState, step])\n\n    const zeroState = () => setFromToState(Object.assign({}, fromToState, {\n        'start': 0,\n        'isStopLoad': false,\n        'isLoaded': false,\n        'datalist': initState,\n    }));\n\n    return {\n        'datalist': fromToState.datalist,\n        'isStopLoad': fromToState.isStopLoad,\n        'isLoaded': fromToState.isLoaded,\n        setDataList,\n        getPart,\n        zeroState,\n    }\n}","import { useState } from 'react';\n\nimport { Fetching } from './api';\n\n// useInput custom react hook\nexport const useInput = (initValue = '') => {\n    const [value, setValue] = useState(initValue);\n    const handleChange = e => setValue(e.target.value);\n    const resetField = () => setValue('');\n    const setCertainValue = v => setValue(v);\n\n    return {\n        base: {\n            value,\n            onChange: handleChange,\n        },\n        resetField,\n        setCertainValue\n    }\n}\n\n// for show/hide password\nexport const useTogglePassword = (initState = 'password') => {\n    const [state, changeType] = useState(initState);\n    const toggleType = () => changeType(state === 'password' ? 'text' : 'password');\n\n    return {\n        state,\n        toggleType\n    }\n}\n\n// check xss attack\nexport const isHaveXSS = content => /<+[\\w\\s/]+>+/gm.test(content);\n\n// base validation check html validation & xss\nexport const BaseFormValidation = data => {\n    const resIndexs = [];\n    let i = 0;\n    for (let v of data.values()) {\n        if (isHaveXSS(v)) resIndexs.push(i);\n        i++;\n    }\n    return resIndexs;\n}\n\n// create one ::after notification\nexport const NotifyInvalidField = (selector, field) => {\n    const afterStyle = document.createElement('style');\n    afterStyle.innerHTML += `${selector}::after{content: 'Ошибка'; font-size: 1rem; color: red; margin: 10px;}`;\n    document.head.appendChild(afterStyle);\n    field.resetField();\n    return afterStyle;\n}\n\n// reset form by calling component method\nexport const ResetForm = fields => {\n    if (!fields) return;\n    fields.forEach(field => field.resetField());\n}\n\n// clear all custom ::after styles\nexport const ClearAllNotifications = (afterStyles = []) => afterStyles.forEach(AS => AS.remove());\n\nconst setNotificationIfExist = (BIndexs, CIndexs, afterStyles, fields) => {\n    if (!fields) return;\n    if (BIndexs.length !== 0)\n        BIndexs.forEach(index => afterStyles.push(NotifyInvalidField(`.form-field-${1+index} .form-input-notification`, fields[index])));\n    if (CIndexs && CIndexs.length !== 0)\n        CIndexs.forEach(index => afterStyles.push(NotifyInvalidField(`.form-field-${1+index} .form-input-notification`, fields[index])));\n}\n\n// submit form: check all validations, return ::after styles, notify & reset fields\nexport const SubmitFormData = async(e, afterStyles, fields, customValidation = () => {}, onSuccess = () => {}, onFail = () => {}, isReset = true) => {\n    e.preventDefault();\n    ClearAllNotifications(afterStyles);\n    afterStyles = [];\n\n    const form = e.target;\n    const action = form.getAttribute('action');\n    if (!action) return;\n    const data = new FormData(form);\n\n    // validation\n    const BIndexs = BaseFormValidation(data),\n        CIndexs = customValidation();\n\n    // notification\n    setNotificationIfExist(BIndexs, CIndexs, afterStyles, fields);\n\n    // fetching & notification\n    if ((BIndexs.length === 0 && !CIndexs) ||\n        (BIndexs.length === 0 && CIndexs && CIndexs.length === 0)) {\n        const res = await Fetching(action, data);\n\n        if (res.err === \"ok\") {\n            if (isReset) ResetForm(fields);\n            return onSuccess(res.data);\n        }\n        return onFail(res.err);\n    }\n    onFail(\"Ошибка валидации\");\n    return afterStyles;\n}","import styled from 'styled-components';\n\nconst SFormField = styled.div`\n    margin-bottom: .5rem;\n`;\n\nconst SFormInputWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    margin-bottom: .5rem;\n`;\n\nconst SFormInputLabel = styled.label`\n    white-space: nowrap;\n    color: var(--offHoverColor);\n\n    &.required::after {\n        content: '*';\n        color: var(--redColor);\n    }\n`;\n\nconst SFormInput = styled.input`\n    margin-left: 1rem;\n    padding: .5rem;\n    width: 100%;\n    font-size: 1rem;\n    color: var(--offHoverColor);\n    background: none;\n    border: none;\n    border-radius: 5px;\n    outline: none;\n    border-bottom: 1px solid var(--onHoverColor);\n    box-shadow: 4px 4px 3px 0 #00000029;\n\n    &::placeholder{\n        color: var(--darkGreyColor);\n    }\n\n    &:disabled {\n        background: var(--greyColor);\n    }\n`;\n\nconst SFormInputNotification = styled.div`\n    color: var(--darkRedColor);\n`;\n\nexport const Label = ({ required, id, labelText }) =>\n    <SFormInputLabel className={required ? 'required' : ''} htmlFor={id} > {labelText} </SFormInputLabel>\n\nexport default function Input({ index, id, type = \"text\", name, labelText, base, minLength, maxLength, min, max, required = true, hidden = false, placeholder = \"\" }) {\n    return hidden\n        ? <input type={type} value={base.value} name={name} hidden />\n        : (\n            <SFormField className={'form-field-' + index}>\n                <SFormInputWrapper>\n                    <Label required={required} id={id} labelText={labelText} />\n                    <SFormInput\n                        className=\"form-input\"\n                        id={id}\n                        type={type}\n                        name={name}\n                        required={required}\n                        min={min}\n                        max={max}\n                        minLength={minLength}\n                        maxLength={maxLength}\n                        placeholder={placeholder}\n                        hidden={hidden}\n                        {...base}\n                    />\n                </SFormInputWrapper>\n                <SFormInputNotification className=\"form-input-notification\" />\n            </SFormField>\n        )\n}","import { useCallback, useEffect, useState } from \"react\";\n\nimport { GetDataByCrieteries } from \"utils/api\";\nimport { RandomKey } from \"utils/content\";\nimport Input from \"components/form-input/input\";\nimport styled from \"styled-components\";\n\nconst SLalel = styled.label`\n    display: flex;\n    align-items: center;\n    white-space: nowrap;\n\n    & select {\n        margin-left: 1rem;\n        padding: .5rem;\n        width: 100%;\n        font-size: 1rem;\n        color: var(--offHoverColor);\n        background: none;\n        border: none;\n        border-radius: 5px;\n        outline: none;\n        border-bottom: 1px solid var(--onHoverColor);\n        box-shadow: 4px 4px 3px 0 #00000029;\n    }\n`;\n\nexport default function PhoneField({ index, base, required }) {\n    const [codes, setCodes] = useState();\n\n    const getCodes = useCallback(async () => {\n        const res = await GetDataByCrieteries('countryCodes');\n        if (res.err && res?.err !== \"ok\") return setCodes(null);\n        return setCodes(res)\n    }, [])\n\n    useEffect(() => {\n        if (codes === undefined) return getCodes()\n    }, [getCodes, codes])\n\n\n    if (!codes) return null;\n    return (\n        <div>\n            <Input index={index} id=\"phone\" type=\"tel\" name=\"phone\" base={base} labelText=\"Телефон:\"\n                minLength=\"10\" maxLength=\"15\" placeholder=\"7777777777\" required={required}\n            />\n\n            <SLalel>\n                <span>Код страны:</span>\n                <select name=\"countryCode\">{codes?.map(({ code, country }) => <option key={RandomKey()} value={code}>{code} ({country})</option>)}</select>\n            </SLalel>\n        </div>\n    )\n}","import styled from \"styled-components\"\n\nconst SSubmitBtn = styled.input`\n    width: 60%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin: 1rem auto;\n    padding: 1rem;\n    font-size: 1rem;\n    color: var(--offHoverColor);\n    background: var(--offHoverBG);\n    border-radius: 5px;\n    border: none;\n    box-shadow: 2px 2px 2px 0 #00000061;\n    transition: var(--transitionApp);\n    cursor: pointer;\n\n    &:hover {\n        color: var(--onHoverColor);\n        background: var(--onHoverBG);\n    }\n`;\n\nexport default function SubmitBtn({value}) {\n    return <SSubmitBtn type=\"submit\" value={value} />\n}","import { ShowAndHidePassword } from 'utils/effects';\nimport Input from '../form-input/input';\n\nimport styled from 'styled-components';\n\nconst SPasswordWrapper = styled.div`\n    display: flex;\n    align-items: baseline;\n    cursor: pointer;\n\n    & input {\n        margin: 0 1rem;\n        flex-grow: 1;\n    }\n\n    & i {\n        padding: 5px;\n        background: var(--offHoverBG);\n        border-radius: 5px;\n        box-shadow: 2px 2px 2px 0 #00000061;\n    }\n`;\n\nexport default function PasswordField({ index, id, required, hidden = false, labelText, placeholder, pass, passToggle }) {\n    return (\n        <SPasswordWrapper>\n            <Input index={index} id={id} type=\"password\" name=\"password\" base={pass.base} required={required}\n                minLength=\"8\" maxLength=\"30\" placeholder={placeholder} labelText={labelText} hidden={hidden}\n            />\n\n            {\n                !hidden &&\n                <i className=\"fa fa-eye fa-eye-slash\"\n                    aria-hidden=\"true\"\n                    title=\"show/hide password\"\n                    onClick={e => {\n                        ShowAndHidePassword(e, document.getElementById(id), passToggle);\n                    }}\n                ></i>\n            }\n        </SPasswordWrapper>\n    )\n}","import { useState } from \"react\";\n\nimport { USER } from \"constants/constants\";\nimport { SubmitFormData, useInput, useTogglePassword } from \"utils/form\";\nimport { UserOnline } from \"utils/user\";\nimport { Notify } from \"components/app-notification/notification\";\nimport PhoneField from \"components/phone-field/field\";\nimport SubmitBtn from \"components/submit-btn/submit\";\nimport Input from \"components/form-input/input\";\nimport PasswordField from \"components/password-field/password\";\n\nlet afterStyles = [];\n\nexport default function EditProfile() {\n    const nickname = useInput('');\n    const phone = useInput('');\n    const pass = useInput('');\n    const passToggle = useTogglePassword()\n    const code = useInput('');\n    const [step, setStep] = useState(1);\n\n    const fields = [phone, nickname, pass, code]; // fields for reset\n\n    const onSuccessStep1 = () => {\n        Notify('success', \"Отправлено смс на номер \" + phone.base.value + \". Возьмите оттуда код подтверждения\")\n        setStep(2);\n    }\n    const onSuccessStep2 = () => Notify('success', `Вы успешно изменили ваши данные.`) || UserOnline(USER.id)\n    const onFail = err => Notify('fail', 'Ошибка регистрации:' + err);\n\n    return (\n        step === 1\n            ? <form action=\"/e/user/confirm\" onSubmit={async (e) => {\n                afterStyles = await SubmitFormData(e, afterStyles, fields, undefined, onSuccessStep1, onFail, false);\n            }}>\n                <h3>Смена данных(шаг 1). Введите только то, что хотите</h3>\n\n                <PhoneField index=\"0\" base={phone.base} required={false} />\n\n                <Input index=\"1\" id=\"nickname\" type=\"text\" name=\"nickname\" base={nickname.base} labelText=\"Имя(никнейм):\"\n                    minLength=\"3\" maxLength=\"20\" placeholder=\"Miron\" required={false}\n                />\n                <PasswordField index=\"2\" id=\"password\" name=\"password\" labelText=\"Пароль:\"\n                    placeholder=\"User1234\" pass={pass} passToggle={passToggle} required={false}\n                />\n\n                <SubmitBtn value=\"Отправить!\" />\n            </form>\n\n            : <form action=\"/e/user\" onSubmit={async (e) => {\n                afterStyles = await SubmitFormData(e, afterStyles, fields, undefined, onSuccessStep2, onFail);\n            }}>\n                <h3>Смена данных(шаг 2)</h3>\n\n                <Input hidden={true} index=\"0\" id=\"phone\" type=\"tel\" name=\"phone\" base={phone.base} labelText=\"Телефон:\" required={false} />\n                <Input hidden={true} index=\"1\" id=\"nickname\" type=\"text\" name=\"nickname\" base={nickname.base} labelText=\"Имя(никнейм):\" required={false} />\n                <PasswordField index=\"2\" id=\"password\" name=\"password\" labelText=\"Пароль:\" pass={pass} passToggle={passToggle} required={false} hidden={true}/>\n        \n                <Input index=\"3\" id=\"code\" type=\"text\" name=\"code\" base={code.base} labelText=\"8-значный код:\"\n                    minLength=\"8\" maxLength=\"8\" placeholder=\"Mfa7sd45\"\n                />\n\n                <SubmitBtn value=\"Отправить!\" />\n            </form>\n    )\n}","import { useState } from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\n\nimport { USER } from 'constants/constants';\nimport { SignOut } from 'utils/user';\nimport { PopupOpen } from 'components/popup/popup';\n\nimport History from './history/history';\nimport EditProfile from './edit-profile/profile';\nimport styled from 'styled-components';\n\nconst SAside = styled.aside`\n    grid-area: aside;\n    position: fixed;\n    left: 100vw;\n    padding: 1rem;\n    width: 80vw;\n    height: 100vh;\n    background: #4e4a4a66;\n    transition: var(--transitionApp);\n    z-index: 10;\n    opacity: .9;\n\n    &.open {\n        transform: translate(-80vw);\n    }\n\n    & .open-btn {\n        position: absolute;\n        right: 100%;\n        top: 80%;\n        padding: 1rem;\n        border-radius: 5px;\n        font-size: 1.5rem;\n        color: white;\n        background:var(--blueColor);\n        z-index: 15;\n        cursor: pointer;\n    }\n`\n\nconst SUser = styled.div`\n    margin: 1rem;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    & > * {\n        display: flex;\n        align-items: center;\n    }\n`\n\nconst SLogo = styled.div`\n    margin: auto;\n    width: 10vw;\n    display: block;\n    overflow: hidden;\n    transition: var(--transitionApp);\n\n    &:hover {\n        filter: brightness(0.5);\n    }\n\n    & img {\n        height: 100%;\n        width: 100%;\n    }\n`\n\nconst SNickname = styled.div`\n    margin: .5rem;\n    padding: .5rem;\n    width: max-content;\n    max-width: 100%;\n    text-transform: uppercase;\n    font-weight: bold;\n    text-align: center;\n    word-break: break-all;\n    background: var(--onHoverColor);\n    border-radius: 5px;\n    transition: var(--transitionApp);\n`\n\nconst SLogout = styled(SNickname)`\n    color: var(--redColor);\n    cursor: pointer;\n\n    &:hover {\n        background: var(--redColor);\n        color: var(--onHoverColor);\n    }\n`\n\nconst SEdit = styled(SNickname)`\n    cursor: pointer;\n\n    &:hover {\n        background: var(--redColor);\n        color: var(--onHoverColor);\n    }\n`;\n\nexport default function Aside() {\n    const [isOpened, setOpened] = useState(false);\n    const history = useHistory();\n\n    return (\n        <SAside className={isOpened ? \"open\" : \"\"}>\n            {/* aside open/close btn */}\n            <div className=\"open-btn\" onClick={() => setOpened(!isOpened)}>\n                <i className=\"fa fa-bars\" aria-hidden=\"true\"></i>\n            </div>\n\n            {\n                isOpened &&\n                <>\n                    <SLogo as={NavLink} to=\"/\" >\n                        <img src=\"/assets/app/logo192.png\" alt=\"logo\" />\n                    </SLogo>\n\n                    <SUser>\n                        {\n                            USER.status === \"online\"\n                                ? <div>\n                                    <SNickname>\n                                        <i className=\"fa fa-user\" aria-hidden=\"true\"></i>\n                                        {USER.nickname} ({USER.phoneNumber})\n                                    </SNickname>\n                                    <SEdit onClick={()=>PopupOpen(EditProfile, {})}>\n                                        <i className=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                                    </SEdit>\n                                </div>\n                                : <SNickname>Здесь будет ваше имя</SNickname>\n                        }\n\n                        {\n                            USER.status === \"online\"\n                                ? <SLogout onClick={() => SignOut(history)}>\n                                    <i className=\"fa fa-sign-out\" aria-hidden=\"true\"></i>\n                                    Выход\n                                </SLogout>\n                                : <SLogout onClick={() => history.push(\"/sign\")}>\n                                    <i className=\"fa fa-sign-in\" aria-hidden=\"true\"></i>\n                                    Войти\n                                </SLogout>\n                        }\n                    </SUser>\n\n                    {\n                        USER.status === \"online\" && <History />\n                    }\n                </>\n            }\n        </SAside>\n    )\n}","import { NavLink } from 'react-router-dom';\n\nimport styled from 'styled-components';\n\nconst SHeader = styled.header`\n    grid-area: header;\n    padding: 1rem;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    background: var(--purpleColor);\n\n    @media screen and (max-width: 600px) {\n        position: fixed;\n        left: 0;\n        right: 0;\n        height: 7vh;\n        z-index: 5;\n    }\n`;\n\nconst SNavLink = styled(NavLink)`\n    margin: 0.5rem 0;\n    padding: 0.5rem;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    background: var(--purpleColor);\n    border: 1px solid #231E2F;\n    border-radius: 5px;\n    color: var(--onHoverColor);\n    text-shadow: 1px 1px 5px black;\n    text-decoration: none;\n    text-transform: uppercase;\n    transition: var(--transitionApp);\n\n    &.active,\n    &:hover {\n        color: var(--purpleColor);\n        text-shadow: none;\n        background: var(--onHoverColor);\n    }\n`\n\n// Generate navlink\nconst GNavLink = ({isExact, to, linkText}) => {\n    return (\n        <SNavLink exact={isExact} activeClassName=\"active\" to={to}>\n            <span className=\"nav-link-text\">{linkText}</span>\n        </SNavLink>\n    )\n}\n\nexport default function Header() {\n    return (\n        <SHeader>\n            \n        </SHeader>\n    )\n}","import { useState } from 'react';\nimport { useHistory } from 'react-router';\n\nimport { SubmitFormData, useInput } from 'utils/form';\nimport { Notify } from 'components/app-notification/notification';\nimport Input from 'components/form-input/input';\nimport SubmitBtn from 'components/submit-btn/submit';\nimport PhoneField from 'components/phone-field/field';\n\nlet afterStyles = []; // form handle all ::after notifications\n\nexport default function SignUp() {\n    const nickname = useInput('');\n    const phone = useInput('');\n    const code = useInput('');\n    const [step, setStep] = useState(1);\n    const history = useHistory();\n\n    const fields = [phone, nickname, code]; // fields for reset\n\n    const onSuccessStep1 = () => {\n        Notify('success', \"Отправлено смс на номер \" + phone.base.value + \". Возьмите оттуда код подтверждения\")\n        setStep(2);\n    }\n    const onSuccessStep2 = data => {\n        Notify('success', `Вы успешно зарегистрированы. Ваш логин: \"${phone.base.value}\" и временный пароль:\"${data?.password}\"`, false)\n        history.push(\"/\")\n    }\n    const onFail = err => Notify('fail', 'Ошибка регистрации:' + err);\n\n    return (\n        step === 1\n            ? <form action=\"/sign/sms/up\" onSubmit={async (e) => {\n                afterStyles = await SubmitFormData(e, afterStyles, fields, undefined, onSuccessStep1, onFail, false);\n            }}>\n                <h3>Регистрация(шаг 1)</h3>\n\n                <PhoneField index=\"0\" base={phone.base} />\n\n                <SubmitBtn value=\"Отправить!\" />\n            </form>\n\n            : <form action=\"/sign/up\" onSubmit={async (e) => {\n                afterStyles = await SubmitFormData(e, afterStyles, fields, undefined, onSuccessStep2, onFail);\n            }}>\n                <h3>Регистрация(шаг 2)</h3>\n\n                <Input disabled={true} index=\"0\" id=\"phone\" type=\"tel\" name=\"phone\" base={phone.base} labelText=\"Телефон:\"/>\n                <Input index=\"1\" id=\"nickname\" type=\"text\" name=\"nickname\" base={nickname.base} labelText=\"Имя(никнейм):\"\n                    minLength=\"3\" maxLength=\"20\" placeholder=\"Miron\"\n                />\n                <Input index=\"2\" id=\"code\" type=\"text\" name=\"code\" base={code.base} labelText=\"8-значный код:\"\n                    minLength=\"8\" maxLength=\"8\" placeholder=\"Mfa7sd45\"\n                />\n                <SubmitBtn value=\"Отправить!\" />\n            </form>\n    )\n}\n","import { useHistory } from 'react-router';\n\nimport { SubmitFormData, useInput, useTogglePassword } from 'utils/form';\nimport { UserOnline } from 'utils/user';\nimport { Notify } from 'components/app-notification/notification';\nimport Input from 'components/form-input/input';\nimport PasswordField from 'components/password-field/password';\nimport SubmitBtn from 'components/submit-btn/submit';\n\nlet afterStyles = []; // form handle all ::after notifications\n\nexport default function SignIn() {\n    const login = useInput();\n    const pass = useInput();\n    const passToggle = useTogglePassword();\n    const fields = [login, pass];\n    const history = useHistory()\n\n    // custom validation\n    const customValidation = () =>\n        (!(/[a-z]+/g.test(pass.base.value) && /[A-Z]+/g.test(pass.base.value) && /[0-9]+/g.test(pass.base.value))) ? [1] : [];\n\n    const onSuccess = async (data) => {\n        const isOnline = await UserOnline(data.id);\n        if (isOnline) {\n            Notify('success', \"Вход произведен\");\n            history.push('/');\n        } else Notify('fail', \"Ошибка входа\")\n    }\n    const onFail = err => Notify('fail', \"Ошибка входа:\" + err);\n\n    return (\n        <form action=\"/sign/in\" onSubmit={async (e) => {\n            afterStyles = await SubmitFormData(e, afterStyles, fields, customValidation, onSuccess, onFail);\n        }}>\n            <h3>Вход</h3>\n\n            <Input index=\"0\" id=\"login\" name=\"phone\" type=\"tel\" base={login.base} labelText=\"Логин:\"\n                minLength=\"11\" maxLength=\"11\" placeholder=\"87777777777\"\n            />\n            <PasswordField index=\"1\" id=\"password\" name=\"password\" labelText=\"Пароль:\"\n                placeholder=\"User1234\" pass={pass} passToggle={passToggle}\n            />\n\n            <SubmitBtn value=\"Отправить!\" />\n        </form>\n    )\n}","import { useState } from 'react';\nimport { useHistory } from 'react-router';\n\nimport { SubmitFormData, useInput, useTogglePassword } from 'utils/form';\nimport { Notify } from 'components/app-notification/notification';\nimport Input from 'components/form-input/input';\nimport SubmitBtn from 'components/submit-btn/submit';\nimport PasswordField from 'components/password-field/password';\nimport PhoneField from 'components/phone-field/field';\n\nlet afterStyles = []; // form handle all ::after notifications\n\nexport default function Restore() {\n    const phone = useInput();\n    const code = useInput('');\n    const pass = useInput('');\n    const passToggle = useTogglePassword()\n    const [step, setStep] = useState(1);\n    const history = useHistory();\n    const fields = [phone, pass, code]; // fields for reset\n\n    const onSuccessStep1 = () => {\n        Notify('success', \"Отправлено смс на номер \" + phone.base.value + \". Возьмите оттуда код подтверждения\");\n        setStep(2);\n    }\n    const onSuccessStep2 = () => {\n        Notify('success', \"Пароль успешно изменен.\");\n        history.push(\"/\")\n    }\n    const onFail = err => Notify('fail', 'Ошибка восстановления:' + err);\n\n    return step === 1\n        ? <form action=\"/sign/sms/ch\" onSubmit={async (e) => {\n            afterStyles = await SubmitFormData(e, afterStyles, fields, undefined, onSuccessStep1, onFail, false);\n        }}>\n            <h3>Восстановление пароля(шаг 1)</h3>\n\n            <PhoneField index=\"0\" base={phone.base} />\n\n            <SubmitBtn value=\"Отправить!\" />\n        </form>\n\n        : <form action=\"/sign/re\" onSubmit={async (e) => {\n            afterStyles = await SubmitFormData(e, afterStyles, fields, undefined, onSuccessStep2, onFail);\n        }}>\n            <h3>Восстановление пароля(шаг 2)</h3>\n\n            <Input disabled={true} index=\"0\" id=\"phone\" type=\"tel\" name=\"phone\" base={phone.base} labelText=\"Телефон:\"/>\n            <Input index=\"2\" id=\"code\" type=\"text\" name=\"code\" base={code.base} labelText=\"8-значный код:\"\n                minLength=\"8\" maxLength=\"8\" placeholder=\"Mfa7sd45\"\n            />\n            <PasswordField index=\"1\" id=\"password\" name=\"password\" labelText=\"Новый пароль:\"\n                placeholder=\"User1234\" pass={pass} passToggle={passToggle}\n            />\n            <SubmitBtn value=\"Отправить!\" />\n        </form>\n}","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { USER } from 'constants/constants';\nimport { RandomKey } from 'utils/content';\n\nimport SignUp from './up/up';\nimport SignIn from './in/in';\nimport ResetPassword from './reset/reset';\nimport styled from 'styled-components';\n\nconst SSign = styled.section`\n    height: 100%;\n    margin-bottom: 1rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    align-items: center;\n\n    & .logo {\n        max-width: 40vw;\n        max-height: 40vh;\n\n        & img {\n            width: 100%;\n            height: 100%;\n        }\n    }\n\n    & .main-action {\n        min-width: 60vw;\n        padding: 2rem;\n        border-radius: 10px;\n        background: #fdfdfd;\n        box-shadow: var(--boxShadow);\n    }\n\n    & .other-actions {\n        display: flex;\n        flex-direction: column;\n\n        & span {\n            margin: .5rem;\n            padding: .5rem;\n            border-radius: 5px;\n            cursor: pointer;\n            transition: var(--transitionApp);\n\n            &:hover {\n                background: var(--onHoverBG);\n                color:  var(--onHoverColor);\n            }\n        }\n    }\n`;\n\nconst GSignAction = ({ action, setAction }) => {\n    let mainAction;\n    let otherActions = []\n    if (action === \"up\") {\n        mainAction = <SignUp />;\n        otherActions = [<GInAction key={RandomKey()} setAction={setAction} />, <GResetAction key={RandomKey()} setAction={setAction} />];\n    } else if (action === \"reset\") {\n        mainAction = <ResetPassword />;\n        otherActions = [<GUpAction key={RandomKey()} setAction={setAction} />, <GInAction key={RandomKey()} setAction={setAction} />];\n    } else {\n        mainAction = <SignIn />;\n        otherActions = [<GUpAction key={RandomKey()} setAction={setAction} />, <GResetAction key={RandomKey()} setAction={setAction} />];\n    }\n    return (\n        <>\n            <div className=\"main-action\">{mainAction}</div>\n            <div className=\"other-actions\">\n                {otherActions}\n            </div>\n        </>\n    )\n}\n\nconst GInAction = ({ setAction }) => <span onClick={() => setAction(\"in\")}>Войти</span>\nconst GUpAction = ({ setAction }) => <span onClick={() => setAction(\"up\")}>Нет аккаунта? Зарегистроваться</span>\nconst GResetAction = ({ setAction }) => <span onClick={() => setAction(\"reset\")}>Забыли пароль?</span>\n\nexport default function Sign() {\n    const [action, setAction] = useState(\"in\");\n\n    return (\n        <SSign>\n            <div className=\"logo\">\n                <img src=\"/assets/app/logo512.png\" alt=\"logo\" />\n            </div>\n\n            <GSignAction action={action} setAction={setAction} />\n\n            <Link to=\"/\" onClick={()=>USER.guest = true}>Войти как гость</Link>\n\n            <Link download={true} to=\"/assets/rights/name.txt\">Пользовательское соглашение</Link>\n        </SSign>\n    )\n}","import { Link } from \"react-router-dom\"\n\nimport styled from \"styled-components\"\n\nconst S404 = styled.section`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n\n    & h2 {\n        font-size: 10rem;\n        color: var(--redColor);\n    }\n\n    & h3 {\n        font-size: 5rem;\n        color: var(--darkRedColor);\n    }\n\n    & a {\n        padding: 1rem;\n        border-radius: 5px;\n    }\n`;\n\nexport default function Page404() {\n    return (\n        <S404>\n            <h2>404</h2>\n            <h3>Not found</h3>\n\n            <Link to=\"/\">Go home</Link>\n        </S404>\n    )\n}","import { Switch, Route } from 'react-router-dom';\n\nimport { RandomKey } from 'utils/content';\nimport HomePage from 'routes/home/home';\nimport SignPage from 'routes/sign/sign';\nimport Page404 from 'routes/404/404';\nimport Popup from 'components/popup/popup';\nimport AppNotifications from 'components/app-notification/notification';\n\nimport styled from 'styled-components';\n\nconst SMain = styled.main`\n    grid-area: main;\n    background: var(--greyColor);\n`;\n\n// app's routes\nconst ROUTES = [{\n    href: \"/\",\n    isExact: true,\n    component: HomePage,\n}, {\n    href: \"/sign\",\n    isExact: false,\n    component: SignPage,\n}]\n\nexport default function DefineRoutes() {\n    return (\n        <SMain>\n            <Switch>\n                {\n                    ROUTES.map(\n                        ({ href, component, isExact }) => <Route key={RandomKey()} exact={isExact} path={href} component={component} />\n                    )\n                }\n                <Route component={Page404} />\n            </Switch>\n\n            {/* popups */}\n            <Popup />\n            <AppNotifications />\n        </SMain>\n    )\n}","export default function HomePage() {\n    return (\n        <div>home</div>\n    )\n}","import { useEffect } from 'react';\nimport { useHistory } from 'react-router';\n\nimport { USER } from 'constants/constants';\nimport { IS_SIGN } from 'utils/content';\nimport Aside from 'components/aside/aside';\nimport Header from 'components/header/header';\nimport Main from 'components/routes/routes';\n\nimport './App.css';\nimport styled from 'styled-components';\n\nconst SApp = styled.div`\n  \tdisplay: grid;\n    grid-template-areas: ${props => props.isSign ? \"'main'\" : '\"main aside\" \"header aside\"'};\n    grid-template-rows: ${props => props.isSign ? \"1fr\" : '1fr 7vh'};\n    grid-template-columns: ${props => props.isSign ? '1fr' : '1fr 0fr'};\n    min-height: 100vh;\n\n\t@media screen and (max-width: 600px) {\n\t\t& {\n\t\t\tgrid-template-areas: '\"main aside\" \"header aside\"';\n\t\t\tgrid-template-columns: 1fr;\n\t\t\tgrid-template-rows: 1fr 0fr;\n\t\t}\n\t}\n`;\n\nexport default function App() {\n    const isSign = IS_SIGN();\n    const history = useHistory();\n\n    useEffect(() => {\n        if (USER.status === \"online\") return isSign && history.push(\"/\")\n        if (!USER.guest) return history.push('/sign');\n    }, [history, isSign]);\n\n    return (\n        <SApp isSign={isSign}>\n            {\n                isSign\n                    ? null\n                    : <>\n                        <Aside />\n                        <Header />\n                    </>\n            }\n\n            <Main />\n        </SApp>\n    )\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport { IsLogged, UserOnline } from 'utils/user';\nimport App from './App'\n\nimport reportWebVitals from './reportWebVitals';\n\nconst check = async () => {\n  const id = await IsLogged();\n  if (id) return await UserOnline(id);\n}\n\nconst init = async () => {\n  await check();\n  ReactDOM.render(\n    <React.StrictMode >\n      <Router >\n        <App />\n      </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\ninit();\n\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["components/app-notification/notification.jsx","constants/constants.js","utils/api.js","utils/content.jsx","utils/user.js","components/popup/popup.jsx","utils/form.js","utils/file.js","components/form-input/input.jsx","components/submit-btn/submit.jsx","components/preloaded-files-plash/plash.jsx","components/clips/clips.jsx","components/clipped-files-plash/plash.jsx","components/parsel/manage/manage.jsx","components/traveler/manage/manage.jsx","components/to-toptype/toptype.jsx","components/to-up/up.jsx","components/to-delete/delete.jsx","utils/effects.js","utils/hooks.js","components/parsel/parsel.jsx","components/traveler/traveler.jsx","components/aside/history/history.jsx","components/form-select/select.jsx","components/phone-field/field.jsx","components/password-field/password.jsx","components/aside/edit-profile/profile.jsx","components/aside/aside.jsx","components/header/header.jsx","routes/sign/up/up.jsx","routes/sign/in/in.jsx","routes/sign/reset/reset.jsx","routes/sign/sign.jsx","routes/404/404.jsx","routes/parsel/parsel.jsx","routes/parsels/parsels.jsx","routes/traveler/traveler.jsx","routes/travelers/travelers.jsx","routes/faq/faq.jsx","routes/contacts/contacts.jsx","routes/admins/admins.jsx","components/routes/routes.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["interID","USER","id","phoneNumber","nickname","status","guest","isAdmin","formDataToString","data","FormData","res","entries","k","v","slice","Fetching","action","a","method","undefined","err","fetchOption","encodeURI","fetch","then","json","catch","Object","assign","prepareDataToFetch","datas","append","GetDataByCrieteries","datatype","criteries","code","POSTRequestWithParams","to","params","IS_SIGN","decodeURI","useLocation","pathname","split","includes","RandomKey","Math","round","random","ValidateParselTravelerSearch","from","weight","price","Notify","SAppNotifications","styled","div","SAppNotification","SCloseNotification","add","removeNotification","type","content","isAutoClose","length","setInterval","clearInterval","Notification","setTimeout","noteContent","Function","className","onClick","Notifications","useState","ntfs","setNTFS","filter","item","props","key","IsLogged","changeUserData","Date","now","toString","UserOnline","UserOffline","SignOut","history","push","SDisplayFlexCenter","css","SPopup","SPopupBG","SPopupClose","SContentWrapper","close","closeCB","PopupOpen","Component","componentArgs","ClosePopup","Popup","popup","setPopup","isOpened","setOpenedState","useInput","initValue","value","setValue","handleChange","e","target","resetField","setCertainValue","base","onChange","useTogglePassword","initState","state","changeType","toggleType","BaseFormValidation","resIndexs","i","values","test","NotifyInvalidField","selector","field","afterStyle","document","createElement","innerHTML","head","appendChild","ResetForm","fields","forEach","ClearAllNotifications","afterStyles","AS","remove","setNotificationIfExist","BIndexs","CIndexs","index","SubmitFormData","customValidation","onSuccess","onFail","isReset","preventDefault","form","getAttribute","UploadFile","file","whomFile","whomID","SFormField","label","Input","name","labelText","minLength","maxLength","list","min","max","required","hidden","placeholder","htmlFor","SSubmitBtn","input","SubmitBtn","SFilesPlash","SFileUploadWrapper","SRemoveFile","RenderUploadedFile","filename","src","removeFile","alt","PreloadedFilesPlash","preloadedFiles","map","SClipItem","color","ClipOneBtn","srcIcon","ClipPlash","setFiles","preloadedCB","files","addToPlash","accept","cb","click","addEventListener","stopImmediatePropagation","URL","createObjectURL","PreloadFile","SClippedFileWrapper","size","SClippedFileSrc","RenderClippedFile","stopPropagation","ClippedFiles","SParsel","removePhoto","clearAll","setHaveWhatsUp","setPreloaded","f","ManageParsel","failText","successText","parseFloat","description","contactNumber","fromID","toID","isHaveWhatsUp","OnChangeTransitPoint","photos","setPhotos","ph","onSubmit","useCallback","oldParams","comparedParams","CompareParams","GetValueFromListByIDAndInputValue","rows","checked","STravel","setTravelType","ManageTraveler","travelTypeID","isHaveWhatsup","travelType","SToUp","toUp","ToUp","toDelete","ToDelete","Debounce","fn","ms","timeOut","args","clearTimeout","DbnceCities","options","op","textContent","dt","getElementById","ScrollHandler","isStopLoad","isScrollingToTop","loadCallback","childrenClass","children","getElementsByClassName","parent","parentNode","position","window","scrollY","treshhold","body","offsetHeight","innerHeight","pRec","getBoundingClientRect","scrollTop","scrollHeight","height","priorEdgeChildNum","childElementCount","el","childNodes","scrollIntoView","behavior","EditItem","RemoveItem","TopItem","newParams","currentParams","obj","removeEmptyFields","listID","inputValue","Array","find","option","point","useFromTo","step","fromToState","setFromToState","setDataList","getPart","getWhat","isAppToEnd","isNeedClear","start","isLoaded","datalist","zeroState","Parsel","isMy","changeItem","removeItem","setOpened","getPhotos","useEffect","title","rel","href","open","newData","STraveler","Traveler","SHistory","section","loadHistory","getType","getTypeOnRus","History","tab","setTab","configHistoryParams","Item","findIndex","d","onScroll","SLalel","Select","text","selected","opt","makeText","PhoneField","codes","setCodes","getCodes","country","SPasswordWrapper","PasswordField","pass","passToggle","passElem","passwordToggle","elem","classList","toggle","setAttribute","ShowAndHidePassword","SForms","EditProfile","phone","setStep","onSuccessStep1","login","onSuccessStep2","SAside","aside","SUser","SLogo","SNickname","SLogout","SEdit","Aside","useHistory","as","NavLink","SHeader","header","SNavLink","GNavLink","isExact","linkText","exact","activeClassName","Header","SignUp","password","SignIn","Restore","SSign","GSignAction","mainAction","setAction","otherActions","GInAction","GUpAction","GResetAction","S404","Page404","SParselGuest","SParsels","STravelGuest","STravelers","SFaq","article","SContacts","SAdmin","GRoute","active","route","setRoute","r","GParam","removeParam","SMain","main","ROUTES","component","download","loadParsels","clear","onscroll","p","loadTravelers","routes","setRoutes","setData","setMethod","setParams","getRoutes","resp","getData","console","log","addParam","DefineRoutes","location","path","SApp","isSign","App","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","check","ReactDOM","render","StrictMode","init"],"mappings":"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","file":"static/js/main.2dc02e8f.chunk.js","sourcesContent":["import { useState } from 'react';\n\nimport { RandomKey } from 'utils/content';\n\nimport styled from 'styled-components';\n\nconst SAppNotifications = styled.div`\n    position: fixed;\n    right: 0;\n    bottom: 0;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n    z-index: 20;\n`\n\nconst SAppNotification = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: max-content;\n    max-width: 50vw;\n    margin: .5rem;\n    padding: 1rem;\n    color: white;\n    border-radius: 5px;\n    background: #596d8c;\n    box-shadow: var(--boxShadow);\n`;\n\nconst SCloseNotification = styled.div`\n    padding: 5px;\n    margin-left: 10px;\n    height: 1.5rem;\n    width: 1.5rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: var(--redColor);\n    background: var(--darkRedColor);\n    border-radius: 50%;\n    cursor: pointer;\n`;\n\nlet add = () => {};\nlet removeNotification = id => {};\nlet interID;\n\nexport const Notify = (type, content, isAutoClose) => {\n    if (add.length !== 0) return add(type, content, isAutoClose);\n    interID = setInterval(() => {\n        if (add.length !== 0) {\n            clearInterval(interID);\n            add(type, content, isAutoClose);\n        }\n    }, 0);\n}\n\nconst Notification = ({ id = 0, type = \"fail\", content, isAutoClose = true }) => {\n    if (!content) return null;\n    if (isAutoClose) setTimeout(() => removeNotification(id), 5000);\n\n    let noteContent = content\n    if (content instanceof Function) noteContent = content(); \n\n    return (\n        <SAppNotification>\n            <div className=\"notification-content\">{noteContent}</div>\n            <SCloseNotification onClick={()=>removeNotification(id)}>\n                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n            </SCloseNotification>\n        </SAppNotification>\n    )\n}\n\nexport default function Notifications() {\n    const [ntfs, setNTFS] = useState([]);\n\n    removeNotification = id => setNTFS(ntfs.filter(item => item.props.id !== id));\n    add = (type, content, isAutoClose)  => {\n        const key = RandomKey();\n        setNTFS([...ntfs, <Notification key={key} id={key} type={type} content={content} isAutoClose={isAutoClose} />]);\n    }\n\n    return <SAppNotifications>{ntfs}</SAppNotifications>;\n}","// current user data\nexport const USER = {\n    id: -1,\n    phoneNumber: '',\n    nickname: 'nickname',\n    status: '',\n    guest: false,\n    isAdmin: true,\n};","const formDataToString = (data = new FormData()) => {\n    let res = \"\";\n    for (let [k, v] of data.entries())\n        res += k + \"=\" + v + \"&\"\n    return res.slice(0, -1)\n}\n\n// use fetching by both method\nexport const Fetching = async(action, data, method = \"POST\") => {\n    if (action === undefined) return { err: \"action undefined\" };\n\n    const fetchOption = { 'method': method };\n    if (method === \"GET\") action += \"?\" + encodeURI(formDataToString(data));\n    else fetchOption[\"body\"] = data;\n\n    return await fetch(action, fetchOption)\n        .then(res => res.json())\n        .catch(err => Object.assign({}, { 'err': \"500: \" + err }));\n}\n\n// convert from object to FormData\nconst prepareDataToFetch = (datas = {}) => {\n    const data = new FormData();\n    for (let [k, v] of Object.entries(datas)) data.append(k, v);\n    return data;\n}\n\n// get data by criteries & type\nexport const GetDataByCrieteries = async(datatype, criteries = {}) => {\n    const data = prepareDataToFetch(criteries);\n    const res = await Fetching(\"/api/\" + datatype, data, 'GET');\n    if (res.code !== 200) return { 'err': res.err }\n    return res.data;\n}\n\n// send post req to host with params\nexport const POSTRequestWithParams = async(to, params = {}) => {\n    const data = prepareDataToFetch(params);\n    return await Fetching(to, data);\n}","import { useLocation } from \"react-router\";\n\nimport { Notify } from \"components/app-notification/notification\";\n\nexport const GET_CUR_PATHNAME = () => decodeURI(useLocation().pathname);\nexport const IS_SIGN = () => GET_CUR_PATHNAME().split('/').includes(\"sign\");\n\n// return two digit string\nexport const IsTwoDigit = data => parseInt(data) < 10 ? \"0\".concat(data) : data;\n\n// generate date(15/12/2020 09:09) from milliseconds\nexport const DateFromMilliseconds = (milliseconds, isForInput = true) => {\n    const datetime = new Date(parseInt(milliseconds));\n    if (isNaN(datetime)) return;\n    const str = [datetime.getFullYear(), IsTwoDigit(datetime.getMonth() + 1), IsTwoDigit(datetime.getDate())].join('-')\n    return str;\n}\n\n// calculate time after thing created\nexport const CalculateRelativeDatetime = (datetime = Date.now().toString()) => {\n    const now = Date.now();\n    const given = parseInt(datetime);\n\n    const delims = [[60, \"мин.\"], [60, \"ч.\"], [24, \"д.\"], [7, 30, \"нед.\"], [30, 365, \"мес.\"], [365, \"лет\"]]\n    const isPast = (now - given) > 0 ? true : false;\n    let diff = Math.abs(now - given) / 1000;\n    let diffType = \"секунд\";\n\n    const returnDate = () => {\n        diff = Math.floor(diff);\n\n        if (!isPast) return [\"через\", IsTwoDigit(diff), diffType].join(' ');\n\n        const isToday = Math.abs(now - given) < 86400000;\n        return [isToday ? 'сегодня' : '', IsTwoDigit(diff), diffType, \"назад\"].join(' ');\n    }\n\n    // calculate difference\n    for (let i = 0; i < delims.length; i++) {\n        const cur_del = delims[i]\n        if (cur_del.length === 2) {\n            if (diff > cur_del[0]) {\n                diff /= cur_del[0];\n                diffType = cur_del[1];\n                continue\n            }\n            break\n        }\n        if (cur_del[0] < diff && diff < cur_del[1]) {\n            diff /= cur_del[0];\n            diffType = cur_del[2];\n            continue\n        }\n        break\n    }\n    return returnDate();\n}\n\nexport const RandomKey = () => Math.round(Math.random() * Math.random() * 100000000);\n\nexport const ValidateParselTravelerSearch = (from, to, weight, price) => {\n    // filter transit points, check exist, !=\n    if (from === to || !to || !from) return Notify('fail', \"Ошибка пунктов отправки и назначения\")\n    return {\n        'fromID': from,\n        'toID': to,\n        'weight': weight || '',\n        'price': price || '',\n    }\n}\n","import { USER } from 'constants/constants';\nimport { GetDataByCrieteries, POSTRequestWithParams } from './api';\nimport { Notify } from 'components/app-notification/notification';\n\nexport const IsLogged = async() => {\n    const res = await POSTRequestWithParams('/sign/status');\n    if (res.err !== 'ok') {\n        Notify('fail', res.err);\n        return false;\n    }\n    return res.data.id;\n}\n\n// change USER const\nconst changeUserData = async(id) => {\n    if (id !== undefined) {\n        const res = (await GetDataByCrieteries('user', { id: id }));\n        if (res.err && res.err !== \"ok\") {\n            return Notify('fail', \"Ошибка входа в аккаунт. Не верные данные\")\n        }\n        for (let [k, v] of Object.entries(res[0])) USER[k] = v;\n        USER.status = 'online';\n        return true;\n    } else {\n        for (let k in USER) USER[k] = '';\n        USER.status = Date.now().toString();\n        USER.nickname = \"nickname\";\n        return true;\n    }\n}\n\n// Switch to online\nexport const UserOnline = async(id) => await changeUserData(id);;\n\n// Switch to offline\nexport const UserOffline = async() => await changeUserData();\n\n// send to server signal about sign out\nexport const SignOut = async(history) => {\n    Notify('info', \"Производится выход...\");\n    const res = await POSTRequestWithParams(\"/sign/out\");\n    if (res.err !== \"ok\") return Notify('fail', \"Ошибка: выход не произведен\");;\n    const isSignOuted = await UserOffline();\n    if (!isSignOuted) return;\n    history.push('/sign/in');\n    Notify('success', \"Выход произведен\");\n}","import { useState } from 'react';\n\nimport styled, { css } from 'styled-components';\n\nconst SDisplayFlexCenter = css`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst SPopup = styled.div`\n    position: fixed;\n    left: 50%;\n    top: 50%;\n    width: 0;\n    height: 0;\n    ${SDisplayFlexCenter};\n    border-radius: 5px;\n    transition: var(--transitionApp);\n    opacity: 0;\n    z-index: -10;\n\n    &.opened {\n        left: 0;\n        top: 0;\n        width: 100vw;\n        height: 100vh;\n        opacity: 1;\n        z-index: 20;\n    }\n`;\n\n\nconst SPopupBG = styled.div`\n    position: absolute;\n    width: 100vw;\n    height: 100vh;\n    background: #000000ab;\n    backdrop-filter: blur(1px);\n`;\n\nconst SPopupClose = styled.div`\n    position: absolute;\n    right: 20px;\n    top: 10px;\n    width: 1rem;\n    height: 1rem;\n    padding: 5px;\n    ${SDisplayFlexCenter};\n    background: var(--redColor);\n    border-radius: 100%;\n    transition: var(--transitionApp);\n    cursor: pointer;\n\n    &:hover{\n        background: var(--darkRedColor);\n    }\n`;\n\nconst SContentWrapper = styled.div`\n    max-height: 90vh;\n    max-width: 80vw;\n    height: max-content;\n    width: max-content;\n    ${SDisplayFlexCenter};\n    flex-direction: column;\n    border-radius: 10px;\n    background: #ffffffc7;\n    z-index: 20;\n\n    & > * {\n        overflow: auto;\n    }\n`;\n\nlet add = ()=>{};\nlet close = ()=>{};\nlet closeCB = ()=>{};\nexport const PopupOpen = (Component, componentArgs = {}) => {\n    add(Component, componentArgs);\n    if (componentArgs.closeCB) closeCB = componentArgs.closeCB;\n}\nexport const ClosePopup = () => close();\n\nexport default function Popup() {\n    const [popup, setPopup] = useState(null);\n    const [isOpened, setOpenedState] = useState(false);\n    add = (Component, componentArgs) => setPopup(<Component {...componentArgs}/>) || setOpenedState(true);\n    close = () => {\n        setOpenedState(false) || setPopup(null);\n        closeCB();\n    }\n    \n    return (\n        <SPopup className={`${isOpened ? 'opened' : ''}`} >\n            <SPopupBG onClick={close}/>\n\n            <SPopupClose onClick={close}>\n                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n            </SPopupClose>\n\n            <SContentWrapper>\n                {popup}\n            </SContentWrapper>\n        </SPopup>\n    )\n}","import { useState } from 'react';\n\nimport { Fetching } from './api';\n\n// useInput custom react hook\nexport const useInput = (initValue = '') => {\n    const [value, setValue] = useState(initValue);\n    const handleChange = e => setValue(e.target.value);\n    const resetField = () => setValue('');\n    const setCertainValue = v => setValue(v);\n\n    return {\n        base: {\n            value,\n            onChange: handleChange,\n        },\n        resetField,\n        setCertainValue\n    }\n}\n\n// for show/hide password\nexport const useTogglePassword = (initState = 'password') => {\n    const [state, changeType] = useState(initState);\n    const toggleType = () => changeType(state === 'password' ? 'text' : 'password');\n\n    return {\n        state,\n        toggleType\n    }\n}\n\n// check xss attack\nexport const isHaveXSS = content => /<+[\\w\\s/]+>+/gm.test(content);\n\n// base validation check html validation & xss\nexport const BaseFormValidation = data => {\n    const resIndexs = [];\n    let i = 0;\n    for (let v of data.values()) {\n        if (isHaveXSS(v)) resIndexs.push(i);\n        i++;\n    }\n    return resIndexs;\n}\n\n// create one ::after notification\nexport const NotifyInvalidField = (selector, field) => {\n    const afterStyle = document.createElement('style');\n    afterStyle.innerHTML += `${selector}::after{content: 'Ошибка'; font-size: 1rem; color: red; margin: 10px;}`;\n    document.head.appendChild(afterStyle);\n    field.resetField();\n    return afterStyle;\n}\n\n// reset form by calling component method\nexport const ResetForm = fields => {\n    if (!fields) return;\n    fields.forEach(field => field.resetField());\n}\n\n// clear all custom ::after styles\nexport const ClearAllNotifications = (afterStyles = []) => afterStyles.forEach(AS => AS.remove());\n\nconst setNotificationIfExist = (BIndexs, CIndexs, afterStyles, fields) => {\n    if (!fields) return;\n    if (BIndexs.length !== 0)\n        BIndexs.forEach(index => afterStyles.push(NotifyInvalidField(`.form-field-${1+index} .form-input-notification`, fields[index])));\n    if (CIndexs && CIndexs.length !== 0)\n        CIndexs.forEach(index => afterStyles.push(NotifyInvalidField(`.form-field-${1+index} .form-input-notification`, fields[index])));\n}\n\n// submit form: check all validations, return ::after styles, notify & reset fields\nexport const SubmitFormData = async(e, afterStyles, fields, customValidation = () => {}, onSuccess = () => {}, onFail = () => {}, isReset = true) => {\n    e.preventDefault();\n    ClearAllNotifications(afterStyles);\n    afterStyles = [];\n\n    const form = e.target;\n    const action = form.getAttribute('action');\n    if (!action) return;\n    const data = new FormData(form);\n\n    // validation\n    const BIndexs = BaseFormValidation(data),\n        CIndexs = customValidation();\n\n    // notification\n    setNotificationIfExist(BIndexs, CIndexs, afterStyles, fields);\n\n    // fetching & notification\n    if ((BIndexs.length === 0 && !CIndexs) ||\n        (BIndexs.length === 0 && CIndexs && CIndexs.length === 0)) {\n        const res = await Fetching(action, data);\n\n        if (res.err === \"ok\") {\n            if (isReset) ResetForm(fields);\n            return onSuccess(res.data);\n        }\n        return onFail(res.err);\n    }\n    onFail(\"Ошибка валидации\");\n    return afterStyles;\n}","import { POSTRequestWithParams } from \"utils/api\";\n\n// preload file\nexport const PreloadFile = (accept, cb = (file, src, type) => {}) => {\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.accept = accept;\n    input.click();\n\n    input.addEventListener('change', async(e) => {\n        e.stopImmediatePropagation();\n        const file = input.files[0];\n\n        if (file) cb(file, URL.createObjectURL(file), file.type);\n    });\n}\n\n// upload file to server\nexport const UploadFile = async(type, file, whomFile, whomID) => {\n    if (!type || !file || !whomFile) return { err: 'deficite data' };\n    const params = {\n        'type': type,\n        'file': file,\n        'whomFile': whomFile,\n    }\n    if (whomID) params['whomID'] = whomID;\n\n    const res = await POSTRequestWithParams('/s/image', params);\n    if (res.err !== \"ok\") return null;\n    return res.data;\n}","import styled from 'styled-components';\n\nconst SFormField = styled.div`\n    margin-bottom: .5rem;\n    display: flex;\n\n    & label {\n        /* margin: .5rem; */\n        /* color: white; */\n        /* white-space: nowrap; */\n    }\n\n    & input {\n        box-shadow: 4px 4px 3px 0 #00000029;\n    }\n`;\n\nconst SFormInputLabel = styled.label`\n    white-space: nowrap;\n    color: var(--offHoverColor);\n\n    &.required::after {\n        content: '*';\n        color: var(--redColor);\n    }\n`;\n\nexport const Label = ({ required, id, labelText }) =>\n    <SFormInputLabel className={required ? 'required' : ''} htmlFor={id} > {labelText} </SFormInputLabel>\n\nexport default function Input({ index, id, type = \"text\", name, labelText, base, minLength, maxLength, list, min, max, required = true, hidden = false, placeholder = \"\" }) {\n    return hidden\n        ? <input type={type} value={base.value} name={name} hidden />\n        : (\n            <SFormField className={'form-floating form-field-' + index}>\n                <input\n                    className=\"form-control\"\n                    id={id}\n                    type={type}\n                    name={name}\n                    required={required}\n                    min={min}\n                    max={max}\n                    minLength={minLength}\n                    maxLength={maxLength}\n                    placeholder={placeholder}\n                    hidden={hidden}\n                    list={list}\n                    {...base}\n                />\n                <label htmlFor={id} placeholder={labelText}>{labelText}</label>\n            </SFormField>\n        )\n}","import styled from \"styled-components\"\n\nconst SSubmitBtn = styled.input`\n    width: 60%;\n    display: block;\n    margin: 1rem auto;\n    padding: 1rem;\n    border-radius: 5px;\n    border: none;\n    box-shadow: 2px 2px 2px 0 #00000061;\n    transition: var(--transitionApp);\n    cursor: pointer;\n\n    &:hover {\n        background: #002148;\n    }\n`;\n\nexport default function SubmitBtn({value, onClick}) {\n    return <SSubmitBtn className=\"btn btn-primary\" type=\"submit\" value={value} onClick={onClick} />\n}","import { RandomKey } from \"utils/content\";\n\nimport styled from \"styled-components\";\n\nconst SFilesPlash = styled.div`\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 100%;\n    background: #000000ad;\n    overflow: auto;\n    white-space: nowrap;\n`;\n\nconst SFileUploadWrapper = styled.div`\n    position: relative;\n    width:  4rem;\n    display: inline-block;\n    margin: .5rem;\n    padding: .5rem;\n    overflow: hidden;\n\n    & > * {\n        width: 100%;\n        color: var(--onHoverColor);\n    }\n`;\n\nconst SRemoveFile = styled.div`\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 1rem;\n    height: 1rem;\n    padding: 5px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: var(--redColor);\n    border-radius: 100%;\n    transition: var(--transitionApp);\n    cursor: pointer;\n\n    &:hover{\n        background: var(--darkRedColor);\n    }\n`;\n\nconst RenderUploadedFile = ({filename, src, removeFile}) => {\n    return (\n        <SFileUploadWrapper>\n            <SRemoveFile onClick={()=>removeFile(filename)}>\n                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n            </SRemoveFile>\n\n            <img src={src} alt=\"uploaded img\" />\n            <div>{filename}</div>\n        </SFileUploadWrapper>\n    )\n}\n\nexport default function PreloadedFilesPlash({ preloadedFiles, removeFile = ()=>{}}) {\n    return (\n        <SFilesPlash>\n            {\n                preloadedFiles.map(\n                    file => <RenderUploadedFile key={RandomKey()} {...file} removeFile={filename => removeFile(filename)} />\n                )\n            }\n        </SFilesPlash>\n    )\n}","import { PreloadFile } from \"utils/file\";\nimport PreloadedFilesPlash from '../preloaded-files-plash/plash';\n\nimport styled from \"styled-components\";\n\nconst SClipItem = styled.div`\n    width: 3rem;\n    height: 3rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: ${props => props.color ? props.color : 'rgba(255, 255, 255, 0.38)'}; \n    border-radius: 50px;\n    cursor: pointer;\n\n    & img {\n        width: 80%;\n        height: 80%;\n    }\n\n    &:hover {\n        background: var(--purpleColor);\n    }\n`;\n\nconst ClipOneBtn = ({ color, alt, srcIcon, onClick }) => {\n    return (\n        <SClipItem color={color} onClick={onClick}>\n            <img src={srcIcon} alt={alt} />\n        </SClipItem>\n    )\n}\n\nexport default function ClipPlash({ preloadedFiles = [], setFiles = () => { } }) {\n    const addToPlash = (...files) => setFiles([...preloadedFiles, ...files]);\n    const removeFile = filename => setFiles(preloadedFiles.filter(file => file.filename !== filename))\n\n    const preloadedCB = (file, src, type) => {\n        addToPlash({\n            'type': type,\n            'file': file,\n            'src': src,\n            'filename': file.name,\n        });\n    }\n\n    return (\n        <>\n            <ClipOneBtn alt=\"clip\" srcIcon=\"/assets/app/send-gallery.png\" onClick={() => PreloadFile('image/*', preloadedCB)} />\n            <PreloadedFilesPlash preloadedFiles={preloadedFiles} removeFile={removeFile} />\n        </>\n    )\n}","import { RandomKey } from \"utils/content\";\nimport { PopupOpen } from \"../popup/popup\";\n\nimport styled from \"styled-components\";\n\nconst SFilesPlash = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    background: #000000ad;\n`;\n\nconst SClippedFileWrapper = styled.div`\n    position: relative;\n    max-width:  ${props => props.size ? props.size : '15rem'};\n    width: max-content;\n    max-height: ${props => props.size ? props.size : '15rem'};\n    margin: .5rem;\n    padding: .5rem;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: 'space-between';\n    color: var(--onHoverColor);\n    background: #000000ad;\n    border-radius: 10px;\n    cursor: pointer;\n`;\n\nconst SClippedFileSrc = styled.div`\n    width: 100%;\n    \n    & > * {\n        max-width: 100%;\n    }\n`;\n\nconst SRemoveFile = styled.div`\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 1rem;\n    height: 1rem;\n    padding: 5px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: var(--redColor);\n    border-radius: 100%;\n    transition: var(--transitionApp);\n    cursor: pointer;\n\n    &:hover{\n        background: var(--darkRedColor);\n    }\n`;\n\n\nconst RenderClippedFile = ({ id, filename, src, size, onClick = () => { }, removeFile }) => {\n    return (\n        <SClippedFileWrapper size={size} onClick={onClick} >\n            <SRemoveFile onClick={e => e.stopPropagation() || removeFile(id, src)}>\n                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n            </SRemoveFile>\n\n            <SClippedFileSrc>\n                <img src={src} alt=\"uploaded img\" />\n            </SClippedFileSrc>\n            <span>{filename}</span>\n        </SClippedFileWrapper>\n    )\n}\n\nexport default function ClippedFiles({ files = [], removeFile}) {\n    return (\n        <SFilesPlash>\n            {\n                files?.map(\n                    file => <RenderClippedFile key={RandomKey()} {...file} \n                        onClick={e => e.preventDefault() || PopupOpen(RenderClippedFile, { ...file, 'size': '100%' })} \n                        removeFile={removeFile}\n                    />\n                )\n            }\n        </SFilesPlash>\n    )\n}","import { useCallback, useState } from \"react\";\n\nimport { CompareParams, GetValueFromListByIDAndInputValue, OnChangeTransitPoint } from \"utils/effects\";\nimport { POSTRequestWithParams } from \"utils/api\";\nimport { useInput } from \"utils/form\";\nimport { UploadFile } from \"utils/file\";\nimport { Notify } from \"components/app-notification/notification\";\nimport { ClosePopup } from \"components/popup/popup\";\nimport Input from \"components/form-input/input\";\nimport SubmitBtn from \"components/submit-btn/submit\";\nimport ClipPlash from \"components/clips/clips\";\nimport ClippedFiles from \"components/clipped-files-plash/plash\";\n\nimport styled from \"styled-components\";\n\nconst SParsel = styled.form`\n    padding: 1rem;\n    margin: 1rem;\n    min-width: 80vw;\n\n    & > div {\n        margin: 1rem;\n    }\n\n    & .transit_points,\n    & .price_weigth {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n\n        & > * {\n            flex-basis: 45%;\n        }\n    }\n\n    & .photos {\n        position: relative;\n        margin-bottom: 10rem;\n        padding: 1rem;\n        display: flex;\n        align-items: center;\n\n        &.clipped {\n            margin-bottom: 0;\n            flex-direction: column;\n            align-items: unset;\n        }\n    }\n\n    @media screen and (max-width: 600px) {\n        & .transit_points,\n        & .price_weigth {\n            align-items: unset;\n            flex-direction: column;\n        }\n    }\n`;\n\nconst removeFile = async (id, src, removePhoto) => {\n    const res = await POSTRequestWithParams(\"/r/image\", { 'id': id, 'src': src });\n    if (res?.err !== \"ok\") return Notify('fail', \"Фото не удалилось, попробуйте позднее, или сообщите в службу поддрежки\")\n    removePhoto(id);\n    return Notify('success', \"Фото удалено\")\n}\n\nconst clearAll = (fields = [], setHaveWhatsUp, setPreloaded) => {\n    fields.forEach(f => f.resetField());\n    setHaveWhatsUp(false);\n    setPreloaded([]);\n}\n\nexport default function ManageParsel({ type = \"create\", cb, failText, successText, data }) {\n    const weight = useInput(parseFloat(data?.weight) / 1000 || '');\n    const price = useInput(data?.price);\n    const description = useInput(data?.description);\n    const contactNumber = useInput(data?.contactNumber);\n    const from = useInput(data?.from);\n    const to = useInput(data?.to);\n    const fromID = useInput(data?.fromID);\n    const toID = useInput(data?.toID);\n    const [isHaveWhatsUp, setHaveWhatsUp] = useState(data?.isHaveWhatsUp === 1);\n\n    from.base.onChange = e => OnChangeTransitPoint(from, e, fromID.setCertainValue);\n    to.base.onChange = e => OnChangeTransitPoint(to, e, toID.setCertainValue);\n\n    const [photos, setPhotos] = useState(data?.photos);\n    const [preloadedFiles, setPreloaded] = useState([]);\n\n    const removePhoto = id => setPhotos(photos.filter(ph => ph.id !== id))\n\n    const onSubmit = useCallback(async (e) => {\n        e.preventDefault();\n\n        const oldParams = {\n            'description': data?.description,\n            'fromID': data?.fromID,\n            'toID': data?.toID,\n            'from': data?.from,\n            'to': data?.to,\n            'weight': data?.weight,\n            'price': data?.price,\n            'contactNumber': data?.contactNumber,\n            'isHaveWhatsUp': data?.isHaveWhatsUp,\n        }\n        const comparedParams = CompareParams({\n            'id': data?.id,\n            'description': description.base.value,\n            'fromID': GetValueFromListByIDAndInputValue('from-list', from.base.value),\n            'toID': GetValueFromListByIDAndInputValue('to-list', to.base.value),\n            'from': from.base.value,\n            'to': to.base.value,\n            'weight': weight.base.value * 1000,\n            'price': price.base.value,\n            'contactNumber': contactNumber.base.value,\n            'isHaveWhatsUp': isHaveWhatsUp ? 1 : 0,\n        }, oldParams);\n\n        // bcs we have id on new so <= 1\n        if (Object.values(comparedParams).length <= 1 && preloadedFiles.length === 0) return Notify('info', 'Нет изменений');\n\n        // send to edit\n        const res = await POSTRequestWithParams(\"/\" + (type === \"create\" ? \"s\" : \"e\") + \"/parsel\", comparedParams);\n        if (res?.err !== \"ok\") return Notify('fail', failText + \":\" + res?.err);\n        Notify('success', successText);\n\n        // upload images\n        preloadedFiles.forEach(ph => UploadFile(ph.type, ph.file, \"parsel\", type === \"create\" ? res?.data : data?.id))\n\n        // do callback if edit\n        if (cb) {\n            // finally params will be\n            cb(Object.assign(oldParams, comparedParams));\n            ClosePopup();\n        } else {\n            // or clear all if create\n            const fields = [weight, price, description, contactNumber, from, to, fromID, toID];\n            clearAll(fields, setHaveWhatsUp, setPreloaded)\n        }\n    }, [description, from, to, fromID, toID, weight, price, contactNumber, isHaveWhatsUp, preloadedFiles, type, cb, failText, successText, data]);\n\n    return (\n        <SParsel onSubmit={onSubmit}>\n            <div className=\"transit_points\">\n                <Input id=\"from\" type=\"text\" name=\"from\" list=\"from-list\" base={from.base} labelText=\"Откуда\" />\n                <datalist id=\"from-list\"></datalist>\n\n                <Input id=\"to\" type=\"text\" name=\"to\" list=\"to-list\" base={to.base} labelText=\"Куда\" />\n                <datalist id=\"to-list\"></datalist>\n            </div>\n\n            <div className=\"price_weigth\">\n                <Input type=\"number\" name=\"weight\" base={weight.base} labelText=\"Вес (в кг)\" />\n                <Input type=\"number\" name=\"price\" base={price.base} labelText=\"Цена (в тг)\" />\n            </div>\n\n            <div className=\"description\">\n                <textarea\n                    className=\"form-control\" {...description.base}\n                    id=\"description\" name=\"description\" rows=\"2\" placeholder=\"Опишите вашу посылку, когда нужно доставить, заголовок\"\n                ></textarea>\n            </div>\n\n            <Input type=\"tel\" name=\"contactNumber\" base={contactNumber.base} labelText=\"Контакты отправителя\" />\n\n            <div className=\"form-check\">\n                <label htmlFor=\"wp\" className=\"form-check-label\"></label>\n                <input id=\"wp\" className=\"form-check-input\" onChange={() => setHaveWhatsUp(!isHaveWhatsUp)} checked={isHaveWhatsUp} type=\"checkbox\" name=\"isHaveWhatsup\" /> Есть WhatsUp?\n            </div>\n\n            {\n                type !== \"create\" && photos && photos.length > 0 &&\n                <div className=\"photos clipped\">\n                    <span>Чтобы удалить фото, нажмите крестик на фото </span>\n                    <ClippedFiles files={photos} removeFile={(id, src) => removeFile(id, src, removePhoto)} />\n                </div>\n            }\n\n            <div className=\"photos\">\n                <span>Чтобы прикрепить фото, нажмите здесь {\"->\"}</span>\n                <ClipPlash setFiles={setPreloaded} preloadedFiles={preloadedFiles} />\n            </div>\n\n            <SubmitBtn value={type === \"create\" ? \"Опубликовать\" : \"Изменить\"} />\n        </SParsel >\n    )\n}","import { useCallback, useState } from \"react\";\n\nimport { CompareParams, GetValueFromListByIDAndInputValue, OnChangeTransitPoint } from \"utils/effects\";\nimport { POSTRequestWithParams } from \"utils/api\";\nimport { useInput } from \"utils/form\";\nimport { Notify } from \"components/app-notification/notification\";\nimport { ClosePopup } from \"components/popup/popup\";\nimport Input from \"components/form-input/input\";\nimport SubmitBtn from \"components/submit-btn/submit\";\n\nimport styled from \"styled-components\";\n\nconst STravel = styled.form`\n    padding: 1rem;\n    margin: 1rem;\n    min-width: 80vw;\n\n    & > div {\n        margin: 1rem;\n    }\n\n    & .transit_points {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n\n        & > * {\n            flex-basis: 45%;\n        }\n    }\n\n    & .travel_type {\n        display: flex;\n        align-items: center;\n        justify-content: space-evenly;\n\n        .travel_type-item {\n            width: 4rem;\n            height: 4rem;\n            padding: 1rem;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            font-size: 2rem;\n            color: white;\n            border: 1px solid;\n            border-radius: 50%;\n            transition: .5s;\n            cursor: pointer;\n            box-shadow: var(--boxShadow);\n\n            &.active,\n            &:hover{\n                background: #192955;\n            }\n        }\n    }\n\n    @media screen and (max-width: 600px) {\n        & .transit_points,\n        & .travelType_weigth {\n            align-items: unset;\n            flex-direction: column;\n        }\n    }\n`;\n\nconst clearAll = (fields = [], setHaveWhatsUp, setTravelType) => {\n    fields.forEach(f => f.resetField());\n    setHaveWhatsUp(false);\n    setTravelType(0);\n}\n\nexport default function ManageTraveler({ type = \"create\", cb, failText, successText, data }) {\n    const description = useInput(data?.description);\n    const contactNumber = useInput(data?.contactNumber);\n    const from = useInput(data?.from);\n    const to = useInput(data?.to);\n    const travelTypeID = useInput(data?.travelTypeID || 0);\n    const fromID = useInput(data?.fromID);\n    const toID = useInput(data?.toID);\n    const [isHaveWhatsUp, setHaveWhatsUp] = useState(data?.isHaveWhatsup === 1);\n\n    const [travelType, setTravelType] = useState(data?.travelTypeID || 0);\n\n    from.base.onChange = e => OnChangeTransitPoint(from, e, fromID.setCertainValue);\n    to.base.onChange = e => OnChangeTransitPoint(to, e, toID.setCertainValue);\n\n    const onSubmit = useCallback(async (e) => {\n        e.preventDefault();\n\n        const oldParams = {\n            'travelTypeID': data?.travelTypeID,\n            'fromID': data?.fromID,\n            'toID': data?.toID,\n            'from': data?.from,\n            'to': data?.to,\n            'description': data?.description,\n            'contactNumber': data?.contactNumber,\n            'isHaveWhatsUp': data?.isHaveWhatsUp,\n        }\n        const comparedParams = CompareParams({\n            'id': data?.id,\n            'travelTypeID': travelTypeID.base.value,\n            'fromID': GetValueFromListByIDAndInputValue('from-list', from.base.value),\n            'toID': GetValueFromListByIDAndInputValue('to-list', to.base.value),\n            'from': from.base.value,\n            'to': to.base.value,\n            'description': description.base.value,\n            'contactNumber': contactNumber.base.value,\n            'isHaveWhatsUp': isHaveWhatsUp ? 1 : 0,\n        }, oldParams);\n\n        // bcs we have id on new, so <= 1\n        if (Object.values(comparedParams).length <= 1) return Notify('info', 'Нет изменений');\n\n        // send\n        const res = await POSTRequestWithParams(\"/\" + (type === \"create\" ? \"s\" : \"e\") + \"/travel\", comparedParams);\n        if (res?.err !== \"ok\") return Notify('fail', failText + \":\" + res?.err);\n        Notify('success', successText);\n\n        // do callback if edit\n        if (cb) {\n            // finally params will be\n            cb(Object.assign(oldParams, comparedParams));\n            ClosePopup()\n        } else {\n            // or clear all if create\n            const fields = [description, contactNumber, travelTypeID, from, to, fromID, toID];\n            clearAll(fields, setHaveWhatsUp, setTravelType)\n        }\n    }, [travelTypeID, from, to, fromID, toID, description, contactNumber, isHaveWhatsUp, type, cb, failText, successText, data]);\n\n    return (\n        <STravel onSubmit={onSubmit}>\n            <div className=\"transit_points\">\n                <Input id=\"from\" type=\"text\" name=\"from\" list=\"from-list\" base={from.base} labelText=\"Откуда\" />\n                <datalist id=\"from-list\"></datalist>\n\n                <Input id=\"to\" type=\"text\" name=\"to\" list=\"to-list\" base={to.base} labelText=\"Куда\" />\n                <datalist id=\"to-list\"></datalist>\n            </div>\n\n            <div className=\"description\">\n                <textarea\n                    className=\"form-control\" {...description.base}\n                    id=\"description\" name=\"description\" rows=\"2\" placeholder=\"Опишите вашу поездку, сколько вы забираете, когда выходите и приходите\"\n                ></textarea>\n            </div>\n\n            <div className=\"travel_type\">\n                <div className={`travel_type-item ${travelType === 1 ? \"active\": \"\"}`} onClick={() => travelTypeID.setCertainValue(1) || setTravelType(1)}>\n                    <i className=\"fa fa-car\" aria-hidden=\"true\"></i>\n                </div>\n\n                <div className={`travel_type-item ${travelType === 2 ? \"active\": \"\"}`} onClick={() => travelTypeID.setCertainValue(2) || setTravelType(2)}>\n                    <i className=\"fa fa-train\" aria-hidden=\"true\"></i>\n                </div>\n\n                <div className={`travel_type-item ${travelType === 3 ? \"active\": \"\"}`} onClick={() => travelTypeID.setCertainValue(3) || setTravelType(3)}>\n                    <i className=\"fa fa-plane\" aria-hidden=\"true\"></i>\n                </div>\n\n                <div className={`travel_type-item ${travelType === 4 ? \"active\": \"\"}`} onClick={() => travelTypeID.setCertainValue(4) || setTravelType(4)}>\n                    <i className=\"fa fa-ship\" aria-hidden=\"true\"></i>\n                </div>\n            </div>\n\n            <Input type=\"tel\" name=\"contactNumber\" base={contactNumber.base} labelText=\"Контакты отправителя\" />\n\n            <div className=\"form-check\">\n                <label htmlFor=\"wp\" className=\"form-check-label\"></label>\n                <input id=\"wp\" className=\"form-check-input\" onChange={() => setHaveWhatsUp(!isHaveWhatsUp)} checked={isHaveWhatsUp} type=\"checkbox\" name=\"isHaveWhatsup\" /> Есть WhatsUp?\n            </div>\n            <SubmitBtn value={type === \"create\" ? \"Опубликовать\" : \"Изменить\"} />\n        </STravel>\n    )\n}","\nimport { useCallback, useEffect, useState } from \"react\";\n\nimport { GetDataByCrieteries, POSTRequestWithParams } from \"utils/api\";\nimport { useInput } from \"utils/form\";\nimport { RandomKey } from \"utils/content\";\nimport { Notify } from \"components/app-notification/notification\";\nimport Input from \"components/form-input/input\";\nimport SubmitBtn from \"components/submit-btn/submit\";\n\nimport styled from \"styled-components\";\n\nconst SToTopType = styled.div`\n    padding: 1rem;\n    margin: 1rem;\n`;\n\nconst SOneItem = styled.div`\n    padding: 1rem;\n    margin: 1rem;\n    display: flex;\n    flex-direction: column;\n    background: ${props => props.color ? props.color : 'var(--grayColor)'};\n    border-radius: 5px;\n    box-shadow: var(--boxShadow);\n    cursor: pointer;\n    transition: var(--transitionApp);\n\n    &:hover {\n        color: var(--onHoverColor);\n        background: var(--onHoverBG);\n    }\n\n    & b {\n        display: block;\n        padding: 5px;\n        margin: 5px;\n        color: var(--onHoverColor);\n        background: #c30000;\n        border-radius: 5px;\n        box-shadow: var(--boxShadow);\n    }\n`;\n\nconst toTopType = async (id, type, code, topID, cb) => {\n    const res = await POSTRequestWithParams(\"/e/toptype\", { 'id': id, 'type': type, 'code': code, 'topID': topID })\n    if (res.err && res.err !== \"ok\") return Notify('fail', 'Не удалось рекламировать');\n    cb()\n}\n\nconst GOnePrice = ({ id, cost, name, color, setPayed, setTopTypeID }) => {\n    const onClick = () => {\n        setPayed(true);\n        setTopTypeID(id);\n    }\n\n    return (\n        <SOneItem color={color} onClick={onClick}>\n            <span>Ваше обьявление будет рекламировано <b> {name} </b></span>\n            <span>Стоимость: <b> {cost} тг </b></span>\n        </SOneItem>\n    )\n}\n\n/**\n * \n * @param type if cost will be relative by type: parsel or travel \n * @param cb callback after click to up\n * @param id parsel/travel id \n */\nexport default function ToTopType({ cb, type, id }) {\n    const [prices, setPrices] = useState();\n    const [isPayed, setPayed] = useState();\n    const [topTypeID, setTopTypeID] = useState();\n    const code = useInput('');\n\n    const getPrices = useCallback(async () => {\n        const res = await GetDataByCrieteries('toptypes');\n        if (res.err && res.err !== \"ok\") {\n            setPrices(null);\n            return Notify('fail', \"Ошибка. Попробуйте позднее\");\n        }\n        setPrices(res)\n    }, [])\n\n    useEffect(() => {\n        if (prices === undefined) return getPrices()\n    }, [getPrices, prices])\n\n\n    if (!prices) return <div>Ошибка. Попробуйте позднее</div>\n    return (\n        <SToTopType>\n            {\n                isPayed\n                    ? <div>\n                        <Input index=\"2\" id=\"code\" type=\"text\" name=\"code\" base={code.base} labelText=\"Введите 8-значный код:\"\n                            minLength=\"8\" maxLength=\"8\" placeholder=\"Mfa7sd45\"\n                        />\n\n                        <SubmitBtn value=\"Рекламировать!\" onClick={() => toTopType(id, type, code, topTypeID, cb)} />\n                    </div>\n                    : <>\n                        <h2>Выберите на какой промежуток Вы хотите рекламировать</h2>\n\n                        <div className=\"prices\">\n                            {prices?.map(p => <GOnePrice key={RandomKey()} {...p} setPayed={setPayed} setTopTypeID={setTopTypeID} />)}\n                        </div>\n                    </>\n            }\n        </SToTopType>\n    )\n}","import { POSTRequestWithParams } from \"utils/api\";\nimport { ClosePopup } from \"components/popup/popup\";\nimport { Notify } from \"components/app-notification/notification\";\n\nimport styled from \"styled-components\";\n\nconst SToUp = styled.div`\n    padding: 1rem;\n    margin: 1rem;\n\n    & .price {\n        color: red;\n        font-size: 1.3rem;\n        background: yellow;\n    }\n\n    & .answer {\n        display: flex;\n        align-items: center;\n        justify-content: space-evenly;\n\n        & span {\n            padding: .5rem 1rem;\n            margin: 1rem;\n            color: var(--onHoverColor);\n            background: var(--blueColor);\n            border-radius: 10px;\n            cursor: pointer;\n            transition: var(--transtionApp);\n\n            &:nth-child(2) {\n                background: red;\n            }\n\n            &:hover{\n                background: var(--onHoverBG);\n            }\n        }\n    }\n`;\n\nconst toUp = async (id, type, code, cb) => {\n    const res = await POSTRequestWithParams(\"/e/up\", { 'id': id, 'type': type, 'code': code })\n    if (res.err && res.err !== \"ok\") return Notify('fail', 'Не удалось поднять');\n    cb()\n    ClosePopup();\n}\n\n/**\n * \n * @param type if cost will be relative by type: parsel or travel \n * @param cb callback after click to up\n * @param id parsel/travel id \n */\nexport default function ToUp({ cb, type, id }) {\n    // const [price, setPrice] = useState();\n    // const [isPayed, setPayed] = useState();\n    // const code = useInput('');\n\n    // const getPrice = useCallback(async () => {\n    //     const res = await GetDataByCrieteries('price');\n    //     if (res?.err !== \"ok\") return Notify('fail', \"Ошибка. Попробуйте позднее\") || setPrice(ExamplePrice)\n    //     setPrice(res)\n    // }, [])\n\n    // useEffect(() => {\n    //     if (!price) return getPrice()\n    // }, [getPrice, price])\n\n\n    // if (!price) return <div>Ошибка. Попробуйте позднее</div>\n    return (\n        <SToUp>\n            <h2>Поднять Ваше объявление?</h2>\n            <span>Поднимать можно только один раз в день</span>\n\n            {/* <div className=\"price\">\n                Стоимость: {price?.cost} тг\n            </div> */}\n\n            <div className=\"answer\">\n                <span onClick={() => toUp(id, type, \"\", cb)}>Да</span>\n                <span onClick={ClosePopup}>Нет</span>\n            </div>\n\n            {/* {\n                isPayed &&\n                <div>\n                    <Input index=\"2\" id=\"code\" type=\"text\" name=\"code\" base={code.base} labelText=\"Введите 8-значный код:\"\n                        minLength=\"8\" maxLength=\"8\" placeholder=\"Mfa7sd45\"\n                    />\n\n                    <SubmitBtn value=\"Поднять!\" onClick={() => toUp(id, type, code, cb)} />\n                </div>\n            } */}\n        </SToUp>\n    )\n}","import { POSTRequestWithParams } from \"utils/api\";\nimport { ClosePopup } from \"components/popup/popup\";\nimport { Notify } from \"components/app-notification/notification\";\n\nimport styled from \"styled-components\";\n\nconst SToUp = styled.div`\n    padding: 1rem;\n    margin: 1rem;\n\n    & .price {\n        color: red;\n        font-size: 1.3rem;\n        background: yellow;\n    }\n\n    & .answer {\n        display: flex;\n        align-items: center;\n        justify-content: space-evenly;\n\n        & span {\n            padding: .5rem 1rem;\n            margin: 1rem;\n            color: var(--onHoverColor);\n            background: var(--blueColor);\n            border-radius: 10px;\n            cursor: pointer;\n            transition: var(--transtionApp);\n\n            &:nth-child(2) {\n                background: red;\n            }\n\n            &:hover{\n                background: var(--onHoverBG);\n            }\n        }\n    }\n`;\n\nconst toDelete = async (id, type, cb) => {\n    const res = await POSTRequestWithParams(\"/r/\" + (type === \"parsel\" ? \"parsel\" : 'travel'), { 'id': id })\n    if (res.err && res.err !== \"ok\") return Notify('fail', 'Не удалено');\n    cb()\n    ClosePopup();\n}\n\n/**\n * \n * @param type if cost will be relative by type: parsel or travel \n * @param cb callback after click to delete\n * @param id parsel/travel id \n */\nexport default function ToDelete({ cb, type, id }) {\n    return (\n        <SToUp>\n            <h2>Удалить Ваше объявление?</h2>\n            <span>Удаляется без возвратно</span>\n\n            <div className=\"answer\">\n                <span onClick={() => toDelete(id, type, cb)}>Да</span>\n                <span onClick={ClosePopup}>Нет</span>\n            </div>\n        </SToUp>\n    )\n}","import { Notify } from \"components/app-notification/notification\";\nimport { PopupOpen } from \"components/popup/popup\";\nimport ManageParsel from \"components/parsel/manage/manage\";\nimport ManageTraveler from \"components/traveler/manage/manage\";\nimport ToTopType from \"components/to-toptype/toptype\";\nimport ToUp from \"components/to-up/up\";\nimport ToDelete from \"components/to-delete/delete\";\n\nimport { GetDataByCrieteries } from \"./api\";\n\n// just debounce\nexport function Debounce(fn, ms) {\n    let timeOut;\n    return (...args) => {\n        clearTimeout(timeOut);\n        timeOut = setTimeout(() => { fn(...args) }, ms)\n    }\n}\n\nexport const DbnceCities = Debounce(async(e) => {\n    const res = await GetDataByCrieteries(\"search\", { 'type': 'cities', 'q': e.target.value });\n    if (res.err) return Notify(\"fail\", \"Не удалось загрузить города\");\n\n    const options = res.map(({ id, name }) => {\n        const op = document.createElement(\"option\");\n        op.value = name;\n        op.textContent = id;\n        return op;\n    })\n\n    const dt = document.getElementById(e.target.list.id);\n    if (!dt) return;\n    dt.innerHTML = \"\";\n    dt.append(...options);\n}, 500)\n\n// show & hide password by changing input type\nexport const ShowAndHidePassword = (e, passElem, passwordToggle) => {\n    const elem = e.target;\n    passwordToggle.toggleType();\n    elem.classList.toggle('fa-eye-slash');\n    if (passwordToggle.state === \"password\") passElem.setAttribute('type', 'text');\n    else passElem.setAttribute('type', 'password');\n}\n\n/**\n * for lazy load and keeping focus with scrolling\n * @param e event\n * @param childrenClass get parent by childs classnames\n * @param isStopLoad stop load or no\n * @param isScrollingToTop load on scroll to top or bottom\n * @param loadCallback what do after react edge\n */\nexport const ScrollHandler = Debounce(async(e, isStopLoad, isScrollingToTop = false, loadCallback = async() => {}, childrenClass) => {\n    if (isStopLoad) return;\n\n    let parent;\n    let treshhold;\n    let position;\n\n    if (childrenClass) {\n        // relatively on body\n        const children = document.getElementsByClassName(childrenClass);\n        if (!children || !children[0]) return;\n        parent = children[0].parentNode;\n        position = window.scrollY;\n        if (isScrollingToTop) treshhold = Math.round((document.body.offsetHeight - window.innerHeight) * .25);\n        else treshhold = Math.round((document.body.offsetHeight - window.innerHeight) * .75);\n    } else {\n        // or relatively on element\n        parent = e.target;\n        const pRec = parent.getBoundingClientRect();\n        position = parent.scrollTop;\n        if (isScrollingToTop) treshhold = Math.round((parent.scrollHeight - pRec.height) * .25);\n        else treshhold = Math.round((parent.scrollHeight - pRec.height) * .75);\n    }\n\n    if (\n        (isScrollingToTop && position <= treshhold) || (!isScrollingToTop && position >= treshhold)\n    ) {\n        const priorEdgeChildNum = isScrollingToTop ? 0 : parent.childElementCount - 1;\n\n        if (await loadCallback()) {\n            setTimeout(() => {\n                // smooth scroll\n                const el = parent.childNodes[priorEdgeChildNum];\n                if (el) el.scrollIntoView({ behavior: \"smooth\" });\n            }, 100);\n        }\n    }\n\n\n    // let parent = childrenClass ? document.getElementsByClassName(childrenClass)[0].parentNode : e.target;\n    // const pRec = parent.getBoundingClientRect();\n\n    // if (\n    //     (isScrollingToTop && parent.scrollTop === 0) ||\n    //     (!isScrollingToTop && parent.scrollTop >= Math.round((parent.scrollHeight - pRec.height) * .75))\n    // ) {\n    //     const priorEdgeChildNum = isScrollingToTop ? 0 : parent.childElementCount - 1;\n\n    //     if (await loadCallback()) {\n    //         setTimeout(() => {\n    //             // smooth scroll\n    //             const el = parent.childNodes[priorEdgeChildNum];\n    //             if (el) el.scrollIntoView({ behavior: \"smooth\" });\n    //         }, 100);\n    //     }\n    // }\n}, 100);\n\nexport const EditItem = async(type, data, cb) =>\n    PopupOpen(type === \"parsel\" ? ManageParsel : ManageTraveler, { 'cb': cb, 'data': data, 'type': 'edit' })\n\nexport const RemoveItem = async(id, type, cb) => PopupOpen(ToDelete, { 'cb': cb, \"type\": type, 'id': id })\n\nexport const TopItem = async(id, type, cb) => PopupOpen(ToUp, { 'cb': cb, \"type\": type, 'id': id })\n\nexport const PaintItem = async(id, type, cb) => PopupOpen(ToTopType, { 'cb': cb, \"type\": type, 'id': id })\n\nconst removeEmptyFields = (obj = {}) => {\n    for (let [k, v] of Object.entries(obj))\n        if (v === \"\" || !v) delete obj[k];\n    return obj\n}\n\nexport const CompareParams = (newParams, currentParams) => {\n    const res = {};\n    newParams = removeEmptyFields(newParams);\n    for (let [k, v] of Object.entries(newParams)) {\n        if (newParams[k] !== currentParams[k]) {\n            res[k] = v;\n        }\n    }\n    return res;\n}\n\nexport const GetValueFromListByIDAndInputValue = (listID, inputValue) => {\n    const list = document.getElementById(listID);\n    if (!list) return;\n    const dt = Array.from(list.childNodes)\n    const op = dt.find(option => option.value.includes(inputValue));\n    if (op) return op.textContent;\n}\n\nexport const OnChangeTransitPoint = async(point, e) => {\n    point.setCertainValue(e.target.value);\n    DbnceCities(e);\n}","import { useCallback, useState } from \"react\";\n\nimport { Notify } from \"components/app-notification/notification\";\n\nimport { GetDataByCrieteries } from \"./api\";\n\n// for lazy load\nexport const useFromTo = (initState = [], step = 10) => {\n    const [fromToState, setFromToState] = useState({\n        'start': 0,\n        'isStopLoad': false,\n        'isLoaded': false,\n        'datalist': initState,\n    });\n\n    const setDataList = state => setFromToState(Object.assign({}, fromToState, { 'datalist': state }));\n\n    const getPart = useCallback(async(getWhat = \"\", params = {}, failText = \"\", isAppToEnd = true, isNeedClear = false) => {\n        if (getWhat === \"\" || failText === \"\") return Notify('fail', failText);\n\n        const res = await GetDataByCrieteries(getWhat, {\n            ...params,\n            'from': isNeedClear ? 0 : fromToState.start,\n            'step': step\n        });\n\n        if (res.err && res.err !== 'ok') {\n            fromToState.isStopLoad = true;\n            fromToState.isLoaded = true;\n            setFromToState(Object.assign({}, fromToState));\n            return Notify('fail', failText + \" : \" + res.err);\n        }\n\n        if (!fromToState.isLoaded) fromToState.isLoaded = true;\n        if (isNeedClear) {\n            fromToState.start = 0;\n            fromToState.datalist = res;\n            fromToState.isStopLoad = false;\n        } else if (isAppToEnd) fromToState.datalist = [...fromToState.datalist, ...res];\n        else fromToState.datalist = [...res, ...fromToState.datalist];\n\n        if (res.length < step) fromToState.isStopLoad = true;\n        else fromToState.start += step;\n\n        setFromToState(Object.assign({}, fromToState));\n        return fromToState.datalist;\n    }, [fromToState, step])\n\n    const zeroState = async() => setFromToState({\n        'start': 0,\n        'isStopLoad': false,\n        'isLoaded': false,\n        'datalist': initState,\n    });\n\n    return {\n        'datalist': fromToState.datalist,\n        'isStopLoad': fromToState.isStopLoad,\n        'isLoaded': fromToState.isLoaded,\n        setDataList,\n        getPart,\n        zeroState,\n    }\n}","import { useCallback, useEffect, useState } from \"react\";\n\nimport { GetDataByCrieteries } from \"utils/api\";\nimport { RandomKey } from \"utils/content\";\nimport { EditItem, PaintItem, RemoveItem, TopItem } from \"utils/effects\";\nimport { Notify } from \"components/app-notification/notification\";\n\nimport styled from \"styled-components\"\n\nconst SParsel = styled.div`\n    position: relative;\n    padding: 1rem;\n    margin: 1rem;\n    min-height: 30vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    background: ${props => props.color ? props.color : '#ffffff94'};\n    border-radius: 10px;\n    box-shadow: var(--boxShadow);\n\n    & .info {\n        display: flex;\n        justify-content: space-between;\n\n        & .general_info {\n            display: flex;\n            flex-direction: column;\n            flex-basis: 70%;\n\n            & span {\n                word-break: break-word;\n            }\n\n            & .price b {\n                text-decoration: underline;\n            }\n        }\n\n        & .other_info  {\n            & .phones > * {\n                margin: .5rem;\n                padding: .5rem;\n                font-size: 4rem;\n                border-radius: 10px;\n                cursor: pointer;\n                transition: var(--transitionApp);\n\n                &:hover {\n                    color: var(--onHoverColor);\n                    background: var(--blueColor);\n                }\n            }\n\n            & .expire {\n                margin: .5rem;\n            }\n        }\n    }\n\n    & .photos {\n        display: flex;\n        flex-wrap: wrap;\n\n        & span {\n            max-width: 20vw;\n            display: block;\n            align-self: end;\n            margin: 5px;\n            border-radius: 5px;\n            background: #000000a3;\n\n            & img {\n                width: 100%;\n            }\n        }\n    }\n\n    & .manage {\n        position: absolute;\n        right: 0;\n        top: 0;\n        padding: .5rem;\n        margin: .5rem;    \n        background: #2f3a64;\n        color: var(--onHoverColor);\n        font-size: 1rem;\n        border-radius: 5px;\n\n        & .manage-action {\n            cursor: pointer;\n            margin: .5rem;\n            transition: var(--transitionApp);\n            text-align: right;\n            vertical-align: middle;\n            \n            &:hover {\n                background: var(--darkGreyColor);\n            }\n        }\n\n        & .manage-actions {\n            display: flex;\n            flex-direction: column;\n        }\n    }\n\n    @media screen and (max-width: 600px) {\n        & .info {\n            flex-direction: column;\n\n            & .phones {\n                display: flex;\n                align-items: center;\n                justify-content: space-evenly;\n            }\n        }\n\n        & .manage {\n            font-size: 1.5rem;\n        }\n    }\n`;\n\nexport default function Parsel({ data, isMy = false, changeItem, removeItem }) {\n    const [photos, setPhotos] = useState();\n    const [isOpened, setOpened] = useState(false);\n\n    const getPhotos = useCallback(async () => {\n        const res = await GetDataByCrieteries(\"images\", { \"id\": data.id });\n        if (res?.err === \"н/д\") return setPhotos(null);\n        if (res.err && res.err !== \"ok\") return Notify('fail', \"Не удалось загрузить прикрепленные фото\");\n        return setPhotos(res?.data || res);\n    }, [data]);\n\n    useEffect(() => {\n        if (photos === undefined) return getPhotos()\n    }, [getPhotos, photos])\n\n    return (\n        <SParsel className=\"parsel\" color={data.color}>\n            <div className=\"info\">\n                <div className=\"general_info\">\n                    <span>Имя: {data.nickname}</span>\n                    <span>{data.from}-{data.to}</span>\n                    <span>{data.title}</span>\n                    <span>Вес: {data.weight / 1000} кг</span>\n                    <span className=\"price\">Цена: <b> {data.price} </b> тг</span>\n                    <span>Описание: {data.description}</span>\n                </div>\n\n                <div className=\"other_info\">\n                    <div className=\"phones\">\n                        {\n                            data.isHaveWhatsUp === 1 &&\n                            <a target=\"_blank\" rel=\"noreferrer\" href={`https://api.whatsapp.com/send?phone=${data.contactNumber}&text=\"Добрый день, пишу из приложения Al-Ber насчет вашей посылки: ${data.title}\"`}>\n                                <i className=\"fa fa-whatsapp\" aria-hidden=\"true\"></i>\n                            </a>\n                        }\n\n                        <span onClick={() => window.open(\"tel:\" + data.contactNumber)}>\n                            <i className=\"fa fa-phone\" aria-hidden=\"true\"></i>\n                        </span>\n                    </div>\n                </div>\n            </div>\n\n            {\n                photos\n                    ? <div className=\"photos\">\n                        {photos?.map(({ src }) => <span key={RandomKey()}><img src={src} alt=\"\" /></span>)}\n                    </div>\n                    : <div className=\"photos\"> Нет фото</div>\n            }\n\n            {\n                isMy &&\n                <div className=\"manage\">\n                    <div className=\"manage-action\" onClick={() => setOpened(!isOpened)}>\n                        <span>Действия</span>\n                    </div>\n\n                    {\n                        isOpened &&\n                        <div className=\"manage-actions\">\n                            <span className=\"manage-action\"\n                                onClick={() => EditItem(\"parsel\", { ...data, 'photos': photos }, newData => changeItem(data.id, newData))}\n                            >\n                                <i className=\"fa fa-pencil\" aria-hidden=\"true\">Редактировать</i>\n                            </span>\n                            <span className=\"manage-action\" onClick={() => RemoveItem(data.id, \"parsel\", () => removeItem(data.id))}>\n                                <i className=\"fa fa-trash\" aria-hidden=\"true\">Удалить</i>\n                            </span>\n                            {/* <span className=\"manage-action\" onClick={() => PaintItem(data.id, \"parsel\", newData => changeItem(data.id, Object.assign({}, data, newData)))}>\n                                <i className=\"fa fa-paint-brush\" aria-hidden=\"true\">Покрасить</i>\n                            </span> */}\n                            <span className=\"manage-action\" onClick={() => TopItem(data.id, \"parsel\", newData => changeItem(data.id, Object.assign({}, data, newData)))}>\n                                <i className=\"fa fa-level-up\" aria-hidden=\"true\">Поднять</i>\n                            </span>\n                        </div>\n                    }\n                </div>\n            }\n        </SParsel>\n    )\n}","import { useState } from \"react\";\n\nimport { EditItem, PaintItem, RemoveItem, TopItem } from \"utils/effects\";\n\nimport styled from \"styled-components\";\n\nconst STraveler = styled.div`\n    position: relative;\n    padding: 1rem;\n    margin: 1rem;\n    min-height: 30vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    background: ${props => props.color ? props.color : '#ffffff94'};\n    border-radius: 10px;\n\n    & .info {\n        display: flex;\n        justify-content: space-between;\n\n        & .general_info {\n            display: flex;\n\n            & div {\n                display: flex;\n                flex-direction: column;\n                margin: 1rem;\n            }\n\n            & .weigth b {\n                text-decoration: underline;\n            }\n        }\n\n        & .other_info  {\n            & .phones > * {\n                margin: .5rem;\n                padding: .5rem;\n                font-size: 4rem;\n                border-radius: 10px;\n                cursor: pointer;\n                transition: var(--transitionApp);\n\n                &:hover {\n                    color: var(--onHoverColor);\n                    background: var(--blueColor);\n                }\n            }\n        }\n    }\n\n    & .manage {\n        position: absolute;\n        right: 0;\n        top: 0;\n        padding: .5rem;\n        margin: .5rem;    \n        background: #2f3a64;\n        color: var(--onHoverColor);\n        font-size: 1rem;\n        border-radius: 5px;\n\n        & .manage-action {\n            cursor: pointer;\n            margin: .5rem;\n            transition: var(--transitionApp);\n            text-align: right;\n            vertical-align: middle;\n            \n            &:hover {\n                background: var(--darkGreyColor);\n            }\n        }\n\n        & .manage-actions {\n            display: flex;\n            flex-direction: column;\n        }\n    }\n\n    @media screen and (max-width: 600px) {\n        & .info {\n            flex-direction: column;\n\n            & .general_info {\n                flex-direction: column;\n            }\n\n            & .phones {\n                display: flex;\n                align-items: center;\n                justify-content: space-evenly;\n            }\n        }\n\n        & .manage {\n            font-size: 1.5rem;\n        }\n    }\n`;\n\nexport default function Traveler({ data, isMy = false, changeItem, removeItem }) {\n    const [isOpened, setOpened] = useState(false);\n\n    return (\n        <STraveler className=\"traveler\" color={data.color}>\n            <div className=\"info\">\n                <div className=\"general_info\">\n                    <div className=\"common\">\n                        <span>Имя: {data.nickname}</span>\n                        <span>{data.from}-{data.to}</span>\n                        <span>Тип транспорта: {data.travelType}</span>\n                        <span>Описание: {data.description}</span>\n                    </div>\n                </div>\n\n                <div className=\"other_info\">\n                    <div className=\"phones\">\n                        {\n                            data.isHaveWhatsUp === 1 &&\n                            <a target=\"_blank\" rel=\"noreferrer\" href={`https://api.whatsapp.com/send?phone=${data.contactNumber}&text=\"Добрый день, пишу из приложения Al-Ber насчет передачи посылки\"`}>\n                                <i className=\"fa fa-whatsapp\" aria-hidden=\"true\"></i>\n                            </a>\n                        }\n\n                        <span onClick={() => window.open(\"tel:\" + data.contactNumber)}>\n                            <i className=\"fa fa-phone\" aria-hidden=\"true\"></i>\n                        </span>\n                    </div>\n\n                </div>\n            </div>\n\n            {\n                isMy &&\n                <div className=\"manage\">\n                    <div className=\"manage-action\" onClick={() => setOpened(!isOpened)}>\n                        <span>Действия</span>\n                    </div>\n\n                    {\n                        isOpened &&\n                        <div className=\"manage-actions\">\n                            <span className=\"manage-action\"\n                                onClick={\n                                    () =>\n                                        EditItem(\n                                            \"traveler\",\n                                            data,\n                                            newData => changeItem(data.id, newData)\n                                        )\n                                }\n                            >\n                                <i className=\"fa fa-pencil\" aria-hidden=\"true\">Редактировать</i>\n                            </span>\n                            <span className=\"manage-action\" onClick={() => RemoveItem(data.id, \"traveler\", () => removeItem(data.id))}>\n                                <i className=\"fa fa-trash\" aria-hidden=\"true\">Удалить</i>\n                            </span>\n                            {/* <span className=\"manage-action\" onClick={() => PaintItem(data.id, \"traveler\", newData => changeItem(data.id, Object.assign({}, data, newData)))}>\n                                <i className=\"fa fa-paint-brush\" aria-hidden=\"true\">Покрасить</i>\n                            </span> */}\n                            <span className=\"manage-action\" onClick={() => TopItem(data.id, \"traveler\", newData => changeItem(data.id, Object.assign({}, data, newData)))}>\n                                <i className=\"fa fa-level-up\" aria-hidden=\"true\">Поднять</i>\n                            </span>\n                        </div>\n                    }\n                </div>\n            }\n        </STraveler>\n    )\n}","import { useEffect, useState } from \"react\";\n\nimport { ScrollHandler } from \"utils/effects\";\nimport { useFromTo } from \"utils/hooks\";\nimport { RandomKey } from \"utils/content\";\nimport Parsel from \"components/parsel/parsel\";\nimport Traveler from \"components/traveler/traveler\";\n\nimport styled from \"styled-components\";\n\nconst SHistory = styled.section`\n    padding: 1rem;\n\n    & .history-tabs {\n        display: flex;\n        align-items: center;\n\n        & span {\n            margin: .5rem;\n            padding: 1rem;\n            color: var(--onHoverColor);\n            border-radius: 10px;\n            transition: var(--transitionApp);\n            cursor: pointer;\n\n            &.active,\n            &:hover {\n                background: var(--blueColor);\n            }\n        }\n    }\n\n    & .history {\n        padding: 1rem;\n        max-height: 60vh;\n        overflow: auto;\n        border-radius: 10px;\n        background: var(--offHoverBG);\n    }\n`\n\nconst loadHistory = (getType, getTypeOnRus, getPart) => getPart(getType, { 'type': 'user' }, 'Не удалось загрузить ' + getTypeOnRus)\n\nconst configHistoryParams = tab => {\n    if (tab === 0) return ['parsels', 'посылки', Parsel];\n    return ['travelers', 'путешествия', Traveler]\n}\n\nexport default function History() {\n    const [tab, setTab] = useState(0);\n    const { datalist, isStopLoad, isLoaded, getPart, zeroState, setDataList } = useFromTo()\n\n    const [getType, getTypeOnRus, Item] = configHistoryParams(tab);\n\n    const changeItem = (id, newData) => {\n        const index = datalist.findIndex(d => d.id === id)\n        datalist[index] = newData\n        setDataList([...datalist]);\n    }\n\n    const removeItem = id => setDataList([...datalist.filter(d => d.id !== id)]);\n\n\n    useEffect(() => {\n        if (datalist.length === 0 && !isLoaded) {\n            loadHistory(getType, getTypeOnRus, getPart)\n        }\n    }, [datalist, isLoaded, getType, getTypeOnRus, tab, getPart, zeroState]);\n\n    return (\n        <SHistory>\n            <div className=\"history-tabs\">\n                <span className={tab === 0 ? 'active' : ''} onClick={() => setTab(0) || zeroState()}>Ваши посылки</span>\n                <span className={tab === 1 ? 'active' : ''} onClick={() => setTab(1) || zeroState()}>Ваши путешествия</span>\n            </div>\n\n            {\n                datalist.length > 0\n                    ? <div className=\"history\" onScroll={e => ScrollHandler(e, isStopLoad, false, () => loadHistory(getType, getTypeOnRus, getPart))}>\n                        {datalist.map(d => <Item key={RandomKey()} data={d} isMy={true} changeItem={changeItem} removeItem={removeItem} />)}\n                    </div>\n                    : <div className=\"history\">Отсутствует</div>\n            }\n        </SHistory>\n\n    )\n}","import { RandomKey } from \"utils/content\";\n\nimport styled from \"styled-components\";\n\nconst SLalel = styled.label`\n    display: flex;\n    align-items: center;\n    white-space: nowrap;\n\n    & span {\n        color: white;\n    }\n\n    & select {\n        margin-left: 1rem;\n    }\n`;\nexport default function Select({ name, text, required = true, options, onChange }) {\n    return (\n        <SLalel>\n            <span>{text}</span>\n            <select className=\"form-select\" name={name} value={options.selected} required={required} onChange={onChange}>\n                {options?.data?.map((opt) => <option key={RandomKey()} value={opt[options.value]}>{options.makeText(opt)}</option>)}\n            </select>\n        </SLalel>\n    )\n}","import { useCallback, useEffect, useState } from \"react\";\n\nimport { GetDataByCrieteries } from \"utils/api\";\nimport Input from \"components/form-input/input\";\nimport Select from \"components/form-select/select\";\n\nexport default function PhoneField({ index, base, required }) {\n    const [codes, setCodes] = useState();\n\n    const getCodes = useCallback(async () => {\n        const res = await GetDataByCrieteries('countryCodes');\n        if (res.err && res?.err !== \"ok\") return setCodes(null);\n        return setCodes(res)\n    }, [])\n\n    useEffect(() => {\n        if (codes === undefined) return getCodes()\n    }, [getCodes, codes])\n\n\n    if (!codes) return null;\n    return (\n        <div>\n            <Input index={index} id=\"phone\" type=\"number\" name=\"phone\" base={base} labelText=\"Телефон:\"\n                minLength=\"10\" maxLength=\"15\" placeholder=\"7777777777\" required={required}\n            />\n\n            <Select text=\"Код страны:\" name=\"countryCode\" required={required} options={{\n                data: codes,\n                value: \"code\",\n                makeText: ({code, country}) => `${code} (${country})`\n            }} />\n        </div>\n    )\n}","import { ShowAndHidePassword } from 'utils/effects';\nimport Input from '../form-input/input';\n\nimport styled from 'styled-components';\n\nconst SPasswordWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n\n    & input {\n        flex-grow: 1;\n    }\n\n    & i {\n        margin-left: 1rem;\n        padding: 5px;\n        border-radius: 5px;\n        box-shadow: 2px 2px 2px 0 #00000061;\n    }\n`;\n\nexport default function PasswordField({ index, id, required, hidden = false, labelText, placeholder, pass, passToggle }) {\n    return (\n        <SPasswordWrapper>\n            <Input index={index} id={id} type=\"password\" name=\"password\" base={pass.base} required={required}\n                minLength=\"8\" maxLength=\"30\" placeholder={placeholder} labelText={labelText} hidden={hidden}\n            />\n\n            {\n                !hidden &&\n                <i className=\"btn btn-primary fa fa-eye fa-eye-slash\"\n                    aria-hidden=\"true\"\n                    title=\"show/hide password\"\n                    onClick={e => {\n                        ShowAndHidePassword(e, document.getElementById(id), passToggle);\n                    }}\n                ></i>\n            }\n        </SPasswordWrapper>\n    )\n}","import { useState } from \"react\";\n\nimport { USER } from \"constants/constants\";\nimport { SubmitFormData, useInput, useTogglePassword } from \"utils/form\";\nimport { UserOnline } from \"utils/user\";\nimport { Notify } from \"components/app-notification/notification\";\nimport PhoneField from \"components/phone-field/field\";\nimport SubmitBtn from \"components/submit-btn/submit\";\nimport Input from \"components/form-input/input\";\nimport PasswordField from \"components/password-field/password\";\n\nimport styled from \"styled-components\";\n\nlet afterStyles = [];\n\nconst SForms = styled.form`\n    padding: 2rem;\n\n    & > * {\n        margin: 1rem;\n    }\n`;\n\nexport default function EditProfile() {\n    const nickname = useInput('');\n    const phone = useInput('');\n    const pass = useInput('');\n    const passToggle = useTogglePassword()\n    const code = useInput('');\n    const [step, setStep] = useState(1);\n\n    const fields = [phone, nickname, pass, code]; // fields for reset\n\n    const onSuccessStep1 = (data) => {\n        Notify('success', \"Отправлено смс на номер \" + data?.login + \". Возьмите оттуда код подтверждения\")\n        setStep(2);\n    }\n    const onSuccessStep2 = () => {\n        UserOnline(USER.id)\n        Notify('success', `Вы успешно изменили ваши данные.`)\n    }\n    const onFail = err => Notify('fail', 'Ошибка регистрации:' + err);\n\n    return (\n        step === 1\n            ? <SForms action=\"/e/user/confirm\" onSubmit={async (e) => {\n                afterStyles = await SubmitFormData(e, afterStyles, fields, undefined, onSuccessStep1, onFail, false);\n            }}>\n                <h3>Смена данных(шаг 1). Введите только то, что хотите</h3>\n\n                <PhoneField index=\"0\" base={phone.base} required={false} />\n\n                <Input index=\"1\" id=\"nickname\" type=\"text\" name=\"nickname\" base={nickname.base} labelText=\"Имя(никнейм):\"\n                    minLength=\"3\" maxLength=\"20\" placeholder={USER.nickname} required={false}\n                />\n                <PasswordField index=\"2\" id=\"password\" name=\"password\" labelText=\"Пароль:\"\n                    placeholder=\"User1234\" pass={pass} passToggle={passToggle} required={false}\n                />\n\n                <SubmitBtn value=\"Отправить!\" />\n            </SForms>\n\n            : <SForms action=\"/e/user\" onSubmit={async (e) => {\n                afterStyles = await SubmitFormData(e, afterStyles, fields, undefined, onSuccessStep2, onFail);\n            }}>\n                <h3>Смена данных(шаг 2)</h3>\n\n                <input hidden type=\"tel\" name=\"phone\" {...phone.base} />\n                <input hidden type=\"text\" name=\"nickname\" {...nickname.base} />\n                <input hidden type=\"password\" name=\"password\" {...pass.base} />\n\n                <Input index=\"3\" id=\"code\" type=\"text\" name=\"code\" base={code.base} labelText=\"6-значный код:\"\n                    minLength=\"6\" maxLength=\"6\" placeholder=\"123456\"\n                />\n\n                <SubmitBtn value=\"Отправить!\" />\n            </SForms>\n    )\n}","import { useState } from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\n\nimport { USER } from 'constants/constants';\nimport { SignOut } from 'utils/user';\nimport { PopupOpen } from 'components/popup/popup';\n\nimport History from './history/history';\nimport EditProfile from './edit-profile/profile';\nimport styled from 'styled-components';\n\nconst SAside = styled.aside`\n    grid-area: aside;\n    position: fixed;\n    left: 100vw;\n    padding: 1rem;\n    width: 80vw;\n    height: 100vh;\n    background: #2b2b2be0;\n    transition: var(--transitionApp);\n    z-index: 10;\n    opacity: .9;\n\n    &.open {\n        transform: translate(-80vw);\n    }\n\n    & .open-btn {\n        position: absolute;\n        right: 100%;\n        top: 80%;\n        padding: 1rem;\n        border-radius: 5px;\n        font-size: 1.5rem;\n        color: white;\n        background:var(--blueColor);\n        z-index: 15;\n        cursor: pointer;\n    }\n\n    & .menu {\n        & > span {\n            margin: .5rem;\n            padding: 1rem;\n            color: var(--onHoverColor);\n            border-radius: 10px;\n            transition: var(--transitionApp);\n            cursor: pointer;\n\n            &.active,\n            &:hover {\n                background: var(--blueColor);\n            }\n        }\n\n        .links {\n            display: flex;\n            flex-direction: column;\n            padding: 2rem;\n            margin: 1rem 0;\n        }\n\n        .links a {\n            padding: 1rem;\n            margin-bottom: 1rem;\n            font-weight: bold;\n            text-decoration: none;\n            background: white;\n            border-radius: 10px;\n            transition: .5s;\n\n            &:hover,\n            &.active {\n                background: #193162;\n                color: white;\n            }\n        }\n    }\n`\n\nconst SUser = styled.div`\n    margin: 1rem;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    & > * {\n        display: flex;\n        align-items: center;\n    }\n`\n\nconst SLogo = styled.div`\n    margin: auto;\n    width: 10rem;\n    display: block;\n    overflow: hidden;\n    transition: var(--transitionApp);\n\n    &:hover {\n        filter: brightness(0.5);\n    }\n\n    & img {\n        height: 100%;\n        width: 100%;\n    }\n`\n\nconst SNickname = styled.div`\n    margin: .5rem;\n    padding: .5rem;\n    width: max-content;\n    max-width: 100%;\n    text-transform: uppercase;\n    font-weight: bold;\n    text-align: center;\n    word-break: break-all;\n    background: var(--onHoverColor);\n    border-radius: 5px;\n    transition: var(--transitionApp);\n`\n\nconst SLogout = styled(SNickname)`\n    color: var(--redColor);\n    cursor: pointer;\n\n    &:hover {\n        background: var(--redColor);\n        color: var(--onHoverColor);\n    }\n`\n\nconst SEdit = styled(SNickname)`\n    cursor: pointer;\n\n    &:hover {\n        background: var(--redColor);\n        color: var(--onHoverColor);\n    }\n`;\n\nexport default function Aside() {\n    const [isOpened, setOpened] = useState(false);\n    const [tab, setTab] = useState(0);\n    const history = useHistory();\n\n    return (\n        <SAside className={isOpened ? \"open\" : \"\"}>\n            {/* aside open/close btn */}\n            <div className=\"open-btn\" onClick={() => setOpened(!isOpened)}>\n                <i className=\"fa fa-bars\" aria-hidden=\"true\"></i>\n            </div>\n\n            {\n                isOpened &&\n                <>\n                    <SLogo as={NavLink} to=\"/\" >\n                        <img src=\"/assets/app/logo.png\" alt=\"logo\" />\n                    </SLogo>\n\n                    <SUser>\n                        {\n                            USER.status === \"online\"\n                                ? <div>\n                                    <SNickname>\n                                        <i className=\"fa fa-user\" aria-hidden=\"true\"></i>\n                                        {USER.nickname} ({USER.phoneNumber})\n                                    </SNickname>\n                                    <SEdit onClick={() => PopupOpen(EditProfile, {})}>\n                                        <i className=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                                    </SEdit>\n                                </div>\n                                : <SNickname>Здесь будет ваше имя</SNickname>\n                        }\n\n                        {\n                            USER.status === \"online\"\n                                ? <SLogout onClick={() => SignOut(history)}>\n                                    <i className=\"fa fa-sign-out\" aria-hidden=\"true\"></i>\n                                    Выход\n                                </SLogout>\n                                : <SLogout onClick={() => history.push(\"/sign\")}>\n                                    <i className=\"fa fa-sign-in\" aria-hidden=\"true\"></i>\n                                    Войти\n                                </SLogout>\n                        }\n                    </SUser>\n\n                    <div className=\"menu\">\n                        <span className={tab === 0 ? 'active' : ''} onClick={() => setTab(0)}>Меню</span>\n\n                        {USER.status === \"online\" && <span className={tab === 1 ? 'active' : ''} onClick={() => setTab(1)}>Ваша история</span>}\n\n                        {\n                            USER.status === \"online\" && tab === 1\n                                ? <History />\n                                : <div className=\"links\">\n                                    <NavLink to=\"/faq\">Вопросы и ответы</NavLink>\n                                    <NavLink to=\"/contacts\">Контакты</NavLink>\n                                    { USER.isAdmin && <NavLink to=\"/admin\">Админ</NavLink> }\n                                </div>\n                        }\n                    </div>\n                </>\n            }\n        </SAside>\n    )\n}","import { NavLink } from 'react-router-dom';\n\nimport styled from 'styled-components';\n\nconst SHeader = styled.header`\n    grid-area: header;\n    position: fixed;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    padding: 1rem;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    background: var(--blueColor);\n    z-index: 5;\n`;\n\nconst SNavLink = styled(NavLink)`\n    margin: 0.5rem 0;\n    padding: 0.5rem;\n    flex-basis: 20%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border: 1px solid #231E2F;\n    border-radius: 5px;\n    color: var(--onHoverColor);\n    text-decoration: none;\n    text-transform: uppercase;\n    transition: var(--transitionApp);\n\n    &.active,\n    &:hover {\n        background: var(--onHoverColor);\n        color: #192955;\n    }\n`\n\n// Generate navlink\nconst GNavLink = ({isExact, to, linkText}) => {\n    return (\n        <SNavLink exact={isExact} activeClassName=\"active\" to={to}>\n            <span className=\"nav-link-text\">{linkText}</span>\n        </SNavLink>\n    )\n}\n\nexport default function Header() {\n    return (\n        <SHeader>\n            <GNavLink isExact={true} to=\"/parsel\"       linkText=\"Отправит посылку\" />\n            <GNavLink isExact={true} to=\"/parsels\"      linkText=\"Лента посылок\" />\n            <GNavLink isExact={true} to=\"/traveler\"     linkText=\"Я попутчик\" />\n            <GNavLink isExact={true} to=\"/travelers\"    linkText=\"Лента попутчиков\" />\n        </SHeader>\n    )\n}","import { useState } from 'react';\nimport { useHistory } from 'react-router';\n\nimport { USER } from 'constants/constants';\nimport { SubmitFormData, useInput } from 'utils/form';\nimport { Notify } from 'components/app-notification/notification';\nimport Input from 'components/form-input/input';\nimport SubmitBtn from 'components/submit-btn/submit';\nimport PhoneField from 'components/phone-field/field';\n\nlet afterStyles = []; // form handle all ::after notifications\n\nexport default function SignUp() {\n    const nickname = useInput('');\n    const phone = useInput('');\n    const code = useInput('');\n    const [step, setStep] = useState(1);\n    const history = useHistory();\n\n    const fields = [phone, nickname, code]; // fields for reset\n\n    const onSuccessStep1 = () => {\n        Notify('success', \"Отправлено смс на номер \" + phone.base.value + \". Возьмите оттуда код подтверждения\")\n        setStep(2);\n    }\n    const onSuccessStep2 = data => {\n        Notify('success', `Вы успешно зарегистрированы. Ваш логин: \"${data?.login}\" и временный пароль:\"${data?.password}\"`, false);\n        USER.guest = false;\n        history.push(\"/parsel\")\n    }\n    const onFail = err => Notify('fail', 'Ошибка регистрации:' + err);\n\n    return (\n        step === 1\n            ? <form action=\"/sign/sms/up\" onSubmit={async (e) => {\n                afterStyles = await SubmitFormData(e, afterStyles, fields, undefined, onSuccessStep1, onFail, false);\n            }}>\n                <h3>Регистрация (шаг 1)</h3>\n\n                <PhoneField index=\"0\" base={phone.base} />\n\n                <SubmitBtn value=\"Отправить!\" />\n            </form>\n\n            : <form action=\"/sign/up\" onSubmit={async (e) => {\n                afterStyles = await SubmitFormData(e, afterStyles, fields, undefined, onSuccessStep2, onFail);\n            }}>\n                <h3>Регистрация (шаг 2)</h3>\n\n                <Input index=\"1\" id=\"nickname\" type=\"text\" name=\"nickname\" base={nickname.base} labelText=\"Имя(никнейм):\"\n                    minLength=\"3\" maxLength=\"20\" placeholder=\"Miron\"\n                />\n                <Input index=\"2\" id=\"code\" type=\"text\" name=\"code\" base={code.base} labelText=\"6-значный код:\"\n                    minLength=\"6\" maxLength=\"6\" placeholder=\"123456\"\n                />\n                <SubmitBtn value=\"Отправить!\" />\n            </form>\n    )\n}\n","import { useHistory } from 'react-router';\n\nimport { USER } from 'constants/constants';\nimport { SubmitFormData, useInput, useTogglePassword } from 'utils/form';\nimport { UserOnline } from 'utils/user';\nimport { Notify } from 'components/app-notification/notification';\nimport Input from 'components/form-input/input';\nimport PasswordField from 'components/password-field/password';\nimport SubmitBtn from 'components/submit-btn/submit';\n\nlet afterStyles = []; // form handle all ::after notifications\n\nexport default function SignIn() {\n    const login = useInput();\n    const pass = useInput();\n    const passToggle = useTogglePassword();\n    const fields = [login, pass];\n    const history = useHistory()\n\n    // custom validation\n    const customValidation = () =>\n        (!(/[a-z]+/g.test(pass.base.value) && /[A-Z]+/g.test(pass.base.value) && /[0-9]+/g.test(pass.base.value))) ? [1] : [];\n\n    const onSuccess = async (data) => {\n        const isOnline = await UserOnline(data.id);\n        if (isOnline) {\n            Notify('success', \"Вход произведен\");\n            USER.guest = false;\n            history.push('/parsel');\n        } else Notify('fail', \"Ошибка входа\")\n    }\n    const onFail = err => Notify('fail', \"Ошибка входа:\" + err);\n\n    return (\n        <form action=\"/sign/in\" onSubmit={async (e) => {\n            afterStyles = await SubmitFormData(e, afterStyles, fields, customValidation, onSuccess, onFail);\n        }}>\n            <h3>Вход</h3>\n\n            <Input index=\"0\" id=\"login\" name=\"phone\" type=\"tel\" base={login.base} labelText=\"Логин:\"\n                minLength=\"11\" maxLength=\"15\" placeholder=\"87777777777\"\n            />\n            <PasswordField index=\"1\" id=\"password\" name=\"password\" labelText=\"Пароль:\"\n                placeholder=\"User1234\" pass={pass} passToggle={passToggle}\n            />\n\n            <SubmitBtn value=\"Отправить!\" />\n        </form>\n    )\n}","import { useState } from 'react';\nimport { useHistory } from 'react-router';\n\nimport { SubmitFormData, useInput, useTogglePassword } from 'utils/form';\nimport { Notify } from 'components/app-notification/notification';\nimport Input from 'components/form-input/input';\nimport SubmitBtn from 'components/submit-btn/submit';\nimport PasswordField from 'components/password-field/password';\nimport PhoneField from 'components/phone-field/field';\n\nlet afterStyles = []; // form handle all ::after notifications\n\nexport default function Restore() {\n    const phone = useInput();\n    const code = useInput('');\n    const pass = useInput('');\n    const passToggle = useTogglePassword()\n    const [step, setStep] = useState(1);\n    const history = useHistory();\n    const fields = [phone, pass, code]; // fields for reset\n\n    const onSuccessStep1 = () => {\n        Notify('success', \"Отправлено смс на номер \" + phone.base.value + \". Возьмите оттуда код подтверждения\");\n        setStep(2);\n    }\n    const onSuccessStep2 = () => {\n        Notify('success', \"Пароль успешно изменен.\");\n        history.push(\"/sign\")\n    }\n    const onFail = err => Notify('fail', 'Ошибка восстановления:' + err);\n\n    return step === 1\n        ? <form action=\"/sign/sms/ch\" onSubmit={async (e) => {\n            afterStyles = await SubmitFormData(e, afterStyles, fields, undefined, onSuccessStep1, onFail, false);\n        }}>\n            <h3>Восстановление пароля (шаг 1)</h3>\n\n            <PhoneField index=\"0\" base={phone.base} />\n\n            <SubmitBtn value=\"Отправить!\" />\n        </form>\n\n        : <form action=\"/sign/re\" onSubmit={async (e) => {\n            afterStyles = await SubmitFormData(e, afterStyles, fields, undefined, onSuccessStep2, onFail);\n        }}>\n            <h3>Восстановление пароля (шаг 2)</h3>\n\n            <PasswordField index=\"1\" id=\"password\" name=\"password\" labelText=\"Новый пароль:\"\n                placeholder=\"User1234\" pass={pass} passToggle={passToggle}\n            />\n\n            <Input index=\"2\" id=\"code\" type=\"text\" name=\"code\" base={code.base} labelText=\"6-значный код:\"\n                minLength=\"6\" maxLength=\"6\" placeholder=\"123456\"\n            />\n            <SubmitBtn value=\"Отправить!\" />\n        </form>\n}","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { USER } from 'constants/constants';\nimport { RandomKey } from 'utils/content';\n\nimport SignUp from './up/up';\nimport SignIn from './in/in';\nimport ResetPassword from './reset/reset';\nimport styled from 'styled-components';\n\nconst SSign = styled.section`\n    height: 100%;\n    margin-bottom: 1rem;\n    padding: 2rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    align-items: center;\n    background: linear-gradient(45deg, #0054d2, #00d2f7, #1c62d8);\n   \n    & .logo {\n        max-width: 20rem;\n        max-height: 20rem;\n        border-radius: 50%;\n        overflow: hidden;\n\n        & img {\n            width: 100%;\n            height: 100%;\n        }\n    }\n\n    & h1 {\n        margin: 2rem;\n        text-align: center;\n        color: white;\n        font-size: 1.5rem;\n    }\n\n    & .main-action {\n        padding: 2rem 4rem;\n        margin-bottom: 2rem;\n        border-radius: 10px;\n        box-shadow: var(--boxShadow);\n        transition: .5s;\n\n        &:hover{\n            background: #ffffff2b;\n        }\n\n        & h3 {\n            color: white;\n            text-align: center;\n            margin-bottom: 1rem;\n        }\n    }\n\n    & .other-actions {\n        display: flex;\n        margin-bottom: 2rem;\n\n        & span {\n            margin: .5rem;\n            padding: .5rem;\n            border-radius: 5px;\n            cursor: pointer;\n            transition: var(--transitionApp);\n            box-shadow: var(--boxShadow);\n\n            &:hover {\n                background: #002148;\n            }\n        }\n    }\n\n    & a {\n        color: white;\n    }\n`;\n\nconst GSignAction = ({ action, setAction }) => {\n    let mainAction;\n    let otherActions = []\n    if (action === \"up\") {\n        mainAction = <SignUp />;\n        otherActions = [<GInAction key={RandomKey()} setAction={setAction} />, <GResetAction key={RandomKey()} setAction={setAction} />];\n    } else if (action === \"reset\") {\n        mainAction = <ResetPassword />;\n        otherActions = [<GUpAction key={RandomKey()} setAction={setAction} />, <GInAction key={RandomKey()} setAction={setAction} />];\n    } else {\n        mainAction = <SignIn />;\n        otherActions = [<GUpAction key={RandomKey()} setAction={setAction} />, <GResetAction key={RandomKey()} setAction={setAction} />];\n    }\n    return (\n        <>\n            <div className=\"main-action\">{mainAction}</div>\n            <div className=\"other-actions\">\n                {otherActions}\n            </div>\n        </>\n    )\n}\n\nconst GInAction = ({ setAction }) => <span className=\"btn btn-primary\" onClick={() => setAction(\"in\")}>Войти</span>\nconst GUpAction = ({ setAction }) => <span className=\"btn btn-primary\" onClick={() => setAction(\"up\")}>Нет аккаунта? Зарегистроваться</span>\nconst GResetAction = ({ setAction }) => <span className=\"btn btn-primary\" onClick={() => setAction(\"reset\")}>Забыли пароль?</span>\n\nexport default function Sign() {\n    const [action, setAction] = useState(\"in\");\n\n    return (\n        <SSign>\n            <div className=\"logo\">\n                <img src=\"/assets/app/logo.png\" alt=\"logo\" />\n            </div>\n\n            <h1 className=\"container-fluid\">\n                Al-Ber — это сервис, соединяющий человека, которому необходимо срочно отправить посылку, с тем, кому по пути\n            </h1>\n\n            <GSignAction action={action} setAction={setAction} />\n\n            <Link to=\"/\" onClick={()=>USER.guest = true}>Войти как гость</Link>\n\n            <Link target=\"_blank\" download={true} to=\"/assets/rights/name.txt\">Пользовательское соглашение</Link>\n        </SSign>\n    )\n}","import { Link } from \"react-router-dom\"\n\nimport styled from \"styled-components\"\n\nconst S404 = styled.section`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n\n    & h2 {\n        font-size: 10rem;\n        color: var(--redColor);\n    }\n\n    & h3 {\n        font-size: 5rem;\n        color: var(--darkRedColor);\n    }\n\n    & a {\n        padding: 1rem;\n        border-radius: 5px;\n    }\n`;\n\nexport default function Page404() {\n    return (\n        <S404>\n            <h2>404</h2>\n            <h3>Not found</h3>\n\n            <Link to=\"/parsel\">Go home</Link>\n        </S404>\n    )\n}","import { USER } from \"constants/constants\"\nimport ManageParsel from \"components/parsel/manage/manage\";\n\nimport styled from \"styled-components\";\n\nconst SParsel = styled.section`\n    padding: 1rem;\n    margin: 1rem;\n\n    & .parsel_create_tip {\n        padding: 1rem;\n        margin: 1rem;\n        border-radius: 10px;\n        text-align: center;\n        background: #f5f000;\n        box-shadow: var(--boxShadow);\n    }\n`;\n\nconst SParselGuest = styled.section`\n    padding: 1rem;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport default function ParselPage() {\n    if (USER.status !== \"online\" || USER.guest) return <SParselGuest>Войдите, чтобы создать посылки</SParselGuest>\n    return (\n        <SParsel>\n            <div className=\"parsel_create_tip\">\n                Заполните данные, и ваша посылка попадет в ленту посылок, оттуда люди могут увидеть и забрать Вашу посылку\n            </div>\n\n            <ManageParsel failText=\"Не удалось создать посылку\" successText=\"Создана посылка\" />\n        </SParsel>\n    )\n}","import { useCallback, useEffect } from \"react\";\n\nimport { GetValueFromListByIDAndInputValue, OnChangeTransitPoint, ScrollHandler } from \"utils/effects\";\nimport { useInput } from \"utils/form\";\nimport { RandomKey, ValidateParselTravelerSearch } from \"utils/content\";\nimport { useFromTo } from \"utils/hooks\";\nimport Input from \"components/form-input/input\";\nimport Parsel from \"components/parsel/parsel\";\n\nimport styled from \"styled-components\";\n\nconst SParsels = styled.section`\n    & .filters {\n        display: flex;\n        flex-wrap: wrap;\n        align-items: center;\n        justify-content: space-around;\n        padding: 1rem;\n        background: var(--blueColor);\n\n        & > div {\n            flex-basis: 20%;\n        }\n\n        & .search_btn {\n            padding: .5rem 1rem;\n            margin: 0 1rem;\n            border-radius: 10px;\n            box-shadow: var(--boxShadow);\n            transition: var(--transitionApp);\n\n            &:hover {\n                background: var(--onHoverBG);\n            }\n        }\n    }\n\n    @media screen and (max-width: 600px) {\n        & .filters {\n            justify-content: start;\n            \n            & > div {\n                flex-basis: 50%;\n            }\n\n            & .search_btn {\n                width: 100%;\n                text-align: center;\n            }\n        }\n    }\n`;\n\nexport default function ParselsPage() {\n    const from = useInput('');\n    const to = useInput('');\n    const fromID = useInput('');\n    const toID = useInput('');\n    const weight = useInput('');\n    const price = useInput('');\n\n    from.base.onChange = e => OnChangeTransitPoint(from, e, fromID.setCertainValue);\n    to.base.onChange = e => OnChangeTransitPoint(to, e, toID.setCertainValue);\n\n    const { datalist, isStopLoad, getPart } = useFromTo([], 5);\n\n    const loadParsels = useCallback((clear = false) => {\n        const params = ValidateParselTravelerSearch(\n            GetValueFromListByIDAndInputValue(\"from-list\", from.base.value), GetValueFromListByIDAndInputValue(\"to-list\", to.base.value),\n            weight.base.value * 1000, price.base.value\n        )\n        if (!params) return;\n        getPart(\"parsels\", params, 'Не удалось загрузить посылки', true, clear === true ? true : false)\n    }, [from, to, weight, price, getPart])\n\n\n    useEffect(() => {\n        // set scroll handler\n        document.body.onscroll = e => ScrollHandler(e, isStopLoad, false, loadParsels, \"parsel\");\n    }, [isStopLoad, loadParsels])\n\n    return (\n        <SParsels>\n            <div className=\"filters\">\n                <Input id=\"from\" type=\"text\" name=\"from\" list=\"from-list\" base={from.base} labelText=\"Откуда\" />\n                <datalist id=\"from-list\"></datalist>\n\n                <Input id=\"to\" type=\"text\" name=\"to\" list=\"to-list\" base={to.base} labelText=\"Куда\" />\n                <datalist id=\"to-list\"></datalist>\n\n                <Input type=\"number\" name=\"weight\" base={weight.base} labelText=\"Вес (в кг)\" />\n                <Input type=\"number\" name=\"price\" base={price.base} labelText=\"Цена (в тг)\" />\n\n                <span className=\"search_btn btn btn-primary\" onClick={() => loadParsels(true)}>\n                    <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\n                </span>\n            </div>\n\n            {\n                datalist &&\n                <div className=\"parsels\">\n                    {datalist?.map(p => <Parsel key={RandomKey()} data={p} />)}\n                </div>\n            }\n        </SParsels>\n    )\n}","import { USER } from \"constants/constants\"\nimport ManageTraveler from \"components/traveler/manage/manage\";\n\nimport styled from \"styled-components\";\n\nconst STravel = styled.section`\n    padding: 1rem;\n    margin: 1rem;\n\n    & .travel_create_tip {\n        padding: 1rem;\n        margin: 1rem;\n        border-radius: 10px;\n        text-align: center;\n        background: #f5f000;\n        box-shadow: var(--boxShadow);\n    }\n`;\n\nconst STravelGuest = styled.section`\n    padding: 1rem;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport default function TravelerPage() {\n    if (USER.status !== \"online\" || USER.guest) return <STravelGuest>Войдите, чтобы стать попутчиком</STravelGuest>\n    return (\n        <STravel>\n            <div className=\"travel_create_tip\">\n                Заполните данные, и Ваша заявка попадет в ленту попутчиков, оттуда Вас заметят люди, которые хотят отправить посылку, а Вы заработаете\n            </div>\n\n            <ManageTraveler failText=\"Не удалось создать объявление попутчика\" successText=\"Объявление попутчика создан\" />\n        </STravel>\n    )\n}","import { useCallback, useEffect } from \"react\";\n\nimport { GetValueFromListByIDAndInputValue, OnChangeTransitPoint, ScrollHandler } from \"utils/effects\";\nimport { useInput } from \"utils/form\";\nimport { RandomKey, ValidateParselTravelerSearch } from \"utils/content\";\nimport { useFromTo } from \"utils/hooks\";\nimport Input from \"components/form-input/input\";\nimport Traveler from \"components/traveler/traveler\";\n\nimport styled from \"styled-components\";\n\nconst STravelers = styled.section`\n    & .filters {\n        display: flex;\n        flex-wrap: wrap;\n        align-items: center;\n        justify-content: space-evenly;\n        padding: 1rem;\n        background: var(--blueColor);\n\n        & > div {\n            flex-basis: 20%;\n        }\n\n        & .search_btn {\n            padding: .5rem 1rem;\n            margin: 0 1rem;\n            border-radius: 10px;\n            box-shadow: var(--boxShadow);\n            transition: var(--transitionApp);\n\n            &:hover {\n                background: var(--onHoverBG);\n            }\n        }\n    }\n\n    @media screen and (max-width: 600px) {\n        & .filters {\n            justify-content: start;\n\n            & > div {\n                flex-basis: 50%;\n            }\n\n            & .search_btn {\n                width: 100%;\n            }\n        }\n    }\n`;\n\nexport default function TravelersPage() {\n    const from = useInput('');\n    const to = useInput('');\n    const fromID = useInput('');\n    const toID = useInput('');\n\n    from.base.onChange = e => OnChangeTransitPoint(from, e, fromID.setCertainValue);\n    to.base.onChange = e => OnChangeTransitPoint(to, e, toID.setCertainValue);\n\n    const { datalist, isStopLoad, getPart } = useFromTo()\n\n    const loadTravelers = useCallback((clear = false) => {\n        const params = ValidateParselTravelerSearch(\n            GetValueFromListByIDAndInputValue(\"from-list\", from.base.value), GetValueFromListByIDAndInputValue(\"to-list\", to.base.value)\n        )\n        if (!params) return;\n        getPart(\"travelers\", params, 'Не удалось загрузить попутчиков', true, clear === true ? true : false)\n    }, [from, to, getPart])\n\n\n    useEffect(() => {\n        // set scroll handler\n        document.body.onscroll = e => ScrollHandler(e, isStopLoad, false, loadTravelers, \"traveler\");\n    }, [isStopLoad, loadTravelers])\n\n    return (\n        <STravelers>\n            <div className=\"filters\">\n                <Input id=\"from\" type=\"text\" name=\"from\" list=\"from-list\" base={from.base} labelText=\"Откуда\" />\n                <datalist id=\"from-list\"></datalist>\n\n                <Input id=\"to\" type=\"text\" name=\"to\" list=\"to-list\" base={to.base} labelText=\"Куда\" />\n                <datalist id=\"to-list\"></datalist>\n\n                <span className=\"search_btn btn btn-primary\" onClick={() => loadTravelers(true)}>\n                    <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\n                </span>\n            </div>\n\n            {\n                datalist &&\n                <div className=\"travelers\">\n                    {datalist?.map(p => <Traveler key={RandomKey()} data={p} />)}\n                </div>\n            }\n        </STravelers>\n    )\n}","import styled from \"styled-components\"\n\nconst SFaq = styled.article`\n    padding: 2rem;\n\n    & > * {\n        margin: 2rem 0;\n    }\n\n    & h1.faq__title {\n        color: white;\n    }\n\n    & p.faq__intro {\n        font-size: 1.2rem;\n    }\n\n    & .accordion-body{\n        background: #192955;\n        color: white;\n    }\n`;\n\nexport default function FaqPage() {\n    return (\n        <SFaq className=\"faq\">\n            <h1 className=\"faq__title\">Вопросы и ответы</h1>\n            <p className=\"faq__intro\">\n                Здесь собраны ответы на большинство вопросов, которые интересуют наших клиентов. Пожалуйста, ознакомьтесь с ними. В случае, если вы не найдете ответа на свой вопрос, пожалуйста, свяжитесь с нами.\n            </p>\n\n            <div className=\"accordion\" id=\"faq-accordion\">\n                <div className=\"accordion-item\">\n                    <h2 className=\"accordion-header\" id=\"safety\">\n                        <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n                            А это безопасно?\n                        </button>\n                    </h2>\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\">\n                        <div className=\"accordion-body\">\n                            Если соблюдать все правила, да. Мы настоятельно рекомендуем проверять содержимое передаваемых (или доставляемых) посылок. Для нас важна безопасность наших пользователей, поэтому мы разработали список обязательных к соблюдению <a className=\"faq-list__link\" href=\"/assets/rights/name.txt\" target=\"_blank\">правил</a>.\n                        </div>\n                    </div>\n                </div>\n                <div className=\"accordion-item\">\n                    <h2 className=\"accordion-header\" id=\"payment\">\n                        <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"true\" aria-controls=\"collapseTwo\">\n                            Сколько я заработаю?\n                        </button>\n                    </h2>\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\">\n                        <div className=\"accordion-body\">\n                            Al-Ber позволяет заработать попутчикам. Если вы собираетесь в поездку, вы можете взять с собой посылку или документы. Доставить их в оговоренное место (на вокзал, в аэропорт или в городе) и получить за это вознаграждение.\n                        </div>\n                    </div>\n                </div>\n                <div className=\"accordion-item\">\n                    <h2 className=\"accordion-header\" id=\"responsibility\">\n                        <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"true\" aria-controls=\"collapseThree\">\n                            Какая ответственность за доставку?\n                        </button>\n                    </h2>\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\">\n                        <div className=\"accordion-body\">\n                            Перед использованием нашего сервиса рекомендуем ознакомиться с <a className=\"faq-list__link\" href=\"/assets/rights/name.txt\" target=\"_blank\">правилами</a>. Сервис не несет ответственность за сохранность документов или посылок. Al-Ber помогает найти попутчика и заработать на своей поездке.\n                        </div>\n                    </div>\n                </div>\n                <div className=\"accordion-item\">\n                    <h2 className=\"accordion-header\" id=\"max-weight\">\n                        <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseFour\" aria-expanded=\"true\" aria-controls=\"collapseFour\">\n                            Посылку какого максимального веса я могу отправить?\n                        </button>\n                    </h2>\n                    <div id=\"collapseFour\" className=\"accordion-collapse collapse\">\n                        <div className=\"accordion-body\">\n                            Как правило, с помощью Al-Ber отправляют документы или посылки до 5 кг. В исключительных случаях (когда попутчик едет на поезде или имеет багаж 20 кг) можно отправить посылку с большим весом.\n                        </div>\n                    </div>\n                </div>\n                <div className=\"accordion-item\">\n                    <h2 className=\"accordion-header\" id=\"price\">\n                        <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseFive\" aria-expanded=\"true\" aria-controls=\"collapseFive\">\n                            Сколько стоит отправить посылку или документ?\n                        </button>\n                    </h2>\n                    <div id=\"collapseFive\" className=\"accordion-collapse collapse\">\n                        <div className=\"accordion-body\">\n                            Преимущества краудшиппингового сервиса в том, что стоимость отправления устанавливаете вы. Мы не диктуем цены, лишь можем подсказать рыночную стоимость по вашему направлению.\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </SFaq>\n    )\n}","import styled from \"styled-components\"\n\nconst SContacts = styled.article`\n    padding: 2rem;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    color: white;\n\n    & > * {\n        margin: 1rem 0;\n    }\n\n    p.contacts__intro {\n        font-size: 1.2rem;\n    }\n\n    section.contacts-section {\n        display: flex;\n        flex-wrap: wrap;\n        align-items: center;\n        justify-content: center;\n    }\n\n    .contacts-block {\n        margin: 1rem;\n\n        & a {\n            text-decoration: none;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            flex-direction: column;\n            color: #192955;\n        }\n    }\n\n    .contacts-block i {\n        font-size: 3rem;\n        color: #1b68d9;\n    }\n`;\n\nexport default function ContactsPage() {\n    return (\n        <SContacts className=\"contacts\">\n            <h1 className=\"contacts__title\">Контактная информация</h1>\n            <p className=\"contacts__intro\">\n                Мы рады, что вы используете сервис Al-Ber.<br />\n                Остались вопросы или пожелания по&nbsp; улучшению нашего сервиса — напишите нам.\n            </p>\n\n            <section className=\"contacts-section\">\n                <div className=\"contacts-block\">\n                    <a className=\"contacts-block__link\" rel=\"noreferrer\" href=\"https://wa.me/7787833831\" alt=\"\" target=\"_blank\">\n                        <i className=\"fa fa-whatsapp\" aria-hidden=\"true\"></i>\n\n                        <div className=\"contacts-block__right\">\n                            <span className=\"contacts-block__text\">WhatsApp</span>\n                        </div>\n                    </a>\n                </div>\n\n                <div className=\"contacts-block\">\n                    <a className=\"contacts-block__link\" href=\"mailto:Aibek.burkitbay@gmail.com\">\n                        <i className=\"fa fa-envelope\" aria-hidden=\"true\"></i>\n\n                        <div className=\"contacts-block__right\">\n                            <span className=\"contacts-block__text\">Электронная почта</span>\n                        </div>\n                    </a>\n                </div>\n\n                <div className=\"contacts-block\">\n                    <a className=\"contacts-block__link\" href=\"tel:+77787833831\">\n                        <i className=\"fa fa-phone\" aria-hidden=\"true\"></i>\n\n                        <div className=\"contacts-block__right\">\n                            <span className=\"contacts-block__text\">+7 778 783-38-31</span>\n                        </div>\n                    </a>\n                </div>\n\n                <div className=\"contacts-block\">\n                    <a className=\"contacts-block__link\" rel=\"noreferrer\" href=\"https://www.instagram.com/Al_ber.kz\" target=\"_blank\">\n                        <i className=\"fa fa-instagram\" aria-hidden=\"true\"></i>\n\n                        <div className=\"contacts-block__right\">\n                            <span className=\"contacts-block__text\">Instagram</span>\n                        </div>\n                    </a>\n                </div>\n            </section>\n        </SContacts>\n    )\n}","import { useCallback, useEffect, useState } from \"react\"\nimport { Redirect } from \"react-router\"\n\nimport { USER } from \"constants/constants\"\nimport { Fetching, GetDataByCrieteries } from \"utils/api\"\nimport { RandomKey } from \"utils/content\"\nimport { useInput } from \"utils/form\"\nimport { Notify } from \"components/app-notification/notification\"\nimport Input from \"components/form-input/input\"\nimport styled from \"styled-components\"\n\nconst SAdmin = styled.div`\n    padding: 1rem;\n\n    .btn {\n        box-shadow: var(--boxShadow);\n    }\n\n    & > * {\n        margin: 1rem;\n    }\n\n    .title {\n        text-align: center;\n    }\n\n    .routes-items {\n        max-height: 20vh;\n        padding: 1rem;\n        overflow: auto;\n\n        .route-item {\n            margin: 5px 0;\n            padding: 5px;\n            color: white;\n            background: #192955;\n            box-shadow: var(--boxShadow);\n            cursor: pointer;\n            transition: .5s;\n\n            &:hover,\n            &.active {\n                background: white;\n                color: #192955;\n            }\n        }\n    }\n\n    .method-items {\n        display: flex;\n        align-items: center;\n\n        & span {\n            padding: 1rem;\n            margin: 1rem;\n            border-radius: 10px;\n            cursor: pointer;\n            transition: .5s;\n\n            &:hover,\n            &.active{\n                background: white;\n                color: #192955;\n            }\n        }\n    }\n\n    .add-params {\n        display: flex;\n        align-items: center;\n\n        & > * {\n            margin: 1rem;\n        }\n    }\n\n    .param-item {\n        padding: .5rem 0;    \n        display: flex;\n        align-items: center;\n\n        .param-content {\n            display: flex;\n            align-items: center;\n            width: 80%;\n        }\n\n        .param-content > * {\n            margin: 0 1rem;\n            padding: 1rem;\n            width: 50%;\n            color: white;\n            border-radius: 10px;\n            background: #192955;\n            box-shadow: var(--boxShadow);\n        }\n    }\n\n    button.btn.btn-primary.search {\n        margin: 1rem;\n    }\n\n  \n`;\n\nconst GRoute = ({ active, route, description, children = [], params = {}, setRoute }) => {\n    return (\n        <div className={`route-item ${active === route ? \"active\" : \"\"}`} onClick={() => setRoute({'route':route, 'params': params})}>\n            <span>Путь <b> {route} </b> {description}</span>\n\n            {children && children.map(r => <GRoute setRoute={setRoute} key={RandomKey()} {...r} />)}\n        </div>\n    )\n}\n\nconst GParam = ({ k, v, removeParam }) => {\n    return (\n        <div className=\"param-item\">\n            <div className=\"param-content\">\n                <span>Ключ: {k}</span>\n                <span>Значение: {v}</span>\n            </div>\n\n            {removeParam && <button className=\"btn btn-primary remove-param\" onClick={() => removeParam(k)}>X</button>}\n        </div>\n    )\n}\n\nconst addParam = (key, value, params, setParams, fields) => {\n    setParams([...params, { 'k': key, 'v': value }])\n    fields.forEach(f => f.resetField())\n}\n\nconst removeParam = (key, params, setParams) => setParams([...params.filter(p => p.k !== key)])\n\nexport default function AdminPage() {\n    const [routes, setRoutes] = useState()\n    const [data, setData] = useState()\n\n    const [route, setRoute] = useState()\n    const [method, setMethod] = useState(\"GET\")\n    const [params, setParams] = useState([])\n\n    const key = useInput(\"\")\n    const value = useInput(\"\")\n    const fields = [key, value];\n\n    const getRoutes = useCallback(async () => {\n        const resp = await GetDataByCrieteries(\"/api/\", {}, \"GET\")\n        if (resp.err && resp.err !== \"ok\") return Notify('fail', \"Не загрузились точки входа\") || setRoutes(null);\n        setRoutes(resp);\n    }, [])\n\n    const getData = useCallback(async () => {\n        const data = new FormData();\n        params.forEach(p => data.append(p.k, p.v))\n\n        const resp = await Fetching(\"/api/\" + route, data, method)\n        if (resp.err && resp.err !== \"ok\") return Notify('fail', \"Не загрузились данные\") || setData(null);\n        setData(resp);\n    }, [route, params, method])\n\n\n    console.log(route, method);\n\n\n    useEffect(() => {\n        if (routes === undefined) getRoutes()\n    })\n\n\n    if (!USER.isAdmin) return <Redirect to=\"/parsels\" />\n    if (!routes) return <div>Не загрузились точки входа</div>\n    return (\n        <SAdmin>\n            <h1 className=\"title\">Админка</h1>\n\n            <div className=\"routes\">\n                <h2>Пути</h2>\n\n                <div className=\"routes-items\">\n                    {\n                        routes && routes.map(r => <GRoute active={route} setRoute={setRoute} key={RandomKey()} {...r} />)\n                    }\n                </div>\n            </div>\n            \n            {\n                route && \n                <div className=\"active_route\">\n                    <h3>Активный путь {route.route}</h3>\n\n                    <div className=\"params\">\n                        <h3>Параметры</h3>\n\n                        <div className=\"params-items\">\n                            {route.params.map(p => <GParam key={RandomKey()} {...p} />)}\n                        </div>\n                    </div>\n                </div>\n            }\n\n            <div className=\"method\">\n                <h2>Метод</h2>\n\n                <div className=\"method-items\">\n                    <span className={`btn btn-primary ${method === \"GET\" ? \"active\" : \"\"}`} onClick={() => setMethod(\"GET\")}>GET</span>\n                    <span className={`btn btn-primary ${method === \"POST\" ? \"active\" : \"\"}`} onClick={() => setMethod(\"POST\")}>POST</span>\n                </div>\n            </div>\n\n            <div className=\"params\">\n                <h2>Параметры</h2>\n\n                <div className=\"add-params\">\n                    <Input type=\"text\" labelText=\"Ключ\" base={key.base} />\n                    <Input type=\"text\" labelText=\"Значение\" base={value.base} />\n                    <button className=\"btn btn-primary\" onClick={() => addParam(key.base.value, value.base.value, params, setParams, fields)}>Добавить</button>\n                </div>\n\n                {params && params.map(p => <GParam key={RandomKey()} removeParam={(key) => removeParam(key, params, setParams)} {...p} />)}\n            </div>\n\n            <button className=\"btn btn-primary search\" onClick={getData}>Поиск</button>\n\n            {\n                data &&\n                <div className=\"results\">\n                    <h2>Результаты</h2>\n\n\n                </div>\n            }\n\n        </SAdmin>\n    )\n}","import { useHistory } from 'react-router';\nimport { Switch, Route } from 'react-router-dom';\n\nimport { RandomKey } from 'utils/content';\nimport SignPage from 'routes/sign/sign';\nimport Page404 from 'routes/404/404';\nimport ParselPage from 'routes/parsel/parsel';\nimport ParselsPage from 'routes/parsels/parsels';\nimport TravelerPage from 'routes/traveler/traveler';\nimport TravelersPage from 'routes/travelers/travelers';\nimport FaqPage from 'routes/faq/faq';\nimport ContactsPage from 'routes/contacts/contacts';\nimport AdminPage from 'routes/admins/admins';\nimport Popup from 'components/popup/popup';\nimport AppNotifications from 'components/app-notification/notification';\n\nimport styled from 'styled-components';\n\nconst SMain = styled.main`\n    grid-area: main;\n    background: linear-gradient(45deg, #0054d2, #00d2f7, #1c62d8);\n`;\n\n// app's routes\nconst ROUTES = [{\n    href: \"/sign\",\n    isExact: false,\n    component: SignPage,\n}, {\n    href: \"/parsel\",\n    isExact: true,\n    component: ParselPage,\n}, {\n    href: \"/parsels\",\n    isExact: true,\n    component: ParselsPage,\n}, {\n    href: \"/traveler\",\n    isExact: true,\n    component: TravelerPage,\n}, {\n    href: \"/travelers\",\n    isExact: true,\n    component: TravelersPage,\n}, {\n    href: \"/faq\",\n    isExact: true,\n    component: FaqPage,\n}, {\n    href: \"/contacts\",\n    isExact: true,\n    component: ContactsPage,\n}, {\n    href: \"/admin\",\n    isExact: true,\n    component: AdminPage,\n}]\n\nexport default function DefineRoutes() {\n    const history = useHistory();\n\n    if (history.location.pathname === \"/\") return history.push(\"/parsel\")\n    return (\n        <SMain>\n            <Switch>\n                {\n                    ROUTES.map(\n                        ({ href, component, isExact }) => <Route key={RandomKey()} exact={isExact} path={href} component={component} />\n                    )\n                }\n                <Route component={Page404} />\n            </Switch>\n\n            {/* popups */}\n            <Popup />\n            <AppNotifications />\n        </SMain>\n    )\n}","import { useEffect } from 'react';\nimport { useHistory } from 'react-router';\n\nimport { USER } from 'constants/constants';\nimport { IS_SIGN } from 'utils/content';\nimport Aside from 'components/aside/aside';\nimport Header from 'components/header/header';\nimport Main from 'components/routes/routes';\n\nimport './App.css';\nimport styled from 'styled-components';\n\nconst SApp = styled.div`\n  \tdisplay: grid;\n    grid-template-areas: ${props => props.isSign ? \"'main'\" : '\"main aside\" \"header aside\"'};\n    grid-template-rows: ${props => props.isSign ? \"1fr\" : '1fr 7vh'};\n    grid-template-columns: ${props => props.isSign ? '1fr' : '1fr 0fr'};\n    min-height: 100vh;\n\n\t@media screen and (max-width: 600px) {\n\t\t& {\n\t\t\tgrid-template-areas: '\"main aside\" \"header aside\"';\n\t\t\tgrid-template-columns: 1fr;\n\t\t\tgrid-template-rows: 1fr 0fr;\n\t\t}\n\t}\n`;\n\nexport default function App() {\n    const isSign = IS_SIGN();\n    const history = useHistory();\n\n    useEffect(() => {\n        if (USER.status === \"online\") return isSign && history.push(\"/parsel\")\n        if (!USER.guest) return history.push('/sign');\n    }, [history, isSign]);\n\n    return (\n        <SApp isSign={isSign}>\n            {\n                isSign\n                    ? null\n                    : <>\n                        <Aside />\n                        <Header />\n                    </>\n            }\n\n            <Main />\n        </SApp>\n    )\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport { IsLogged, UserOnline } from 'utils/user';\nimport App from './App'\n\nimport reportWebVitals from './reportWebVitals';\n\nconst check = async () => {\n  const id = await IsLogged();\n  if (id) return await UserOnline(id);\n}\n\nconst init = async () => {\n  await check();\n  ReactDOM.render(\n    <React.StrictMode >\n      <Router >\n        <App />\n      </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\ninit();\n\nreportWebVitals();\n"],"sourceRoot":""}